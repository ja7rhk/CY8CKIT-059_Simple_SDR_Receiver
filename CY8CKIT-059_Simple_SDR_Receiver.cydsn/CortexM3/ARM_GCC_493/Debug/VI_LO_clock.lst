ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"VI_LO_clock.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.VI_LO_clock_Start,"ax",%progbits
  19              		.align	2
  20              		.global	VI_LO_clock_Start
  21              		.thumb
  22              		.thumb_func
  23              		.type	VI_LO_clock_Start, %function
  24              	VI_LO_clock_Start:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\VI_LO_clock.c"
   1:.\Generated_Source\PSoC5/VI_LO_clock.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/VI_LO_clock.c **** * File Name: VI_LO_clock.c
   3:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Version 2.20
   4:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
   5:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Description:
   6:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
   8:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Note:
   9:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
  10:.\Generated_Source\PSoC5/VI_LO_clock.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/VI_LO_clock.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/VI_LO_clock.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/VI_LO_clock.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/VI_LO_clock.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
  17:.\Generated_Source\PSoC5/VI_LO_clock.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/VI_LO_clock.c **** #include "VI_LO_clock.h"
  19:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
  20:.\Generated_Source\PSoC5/VI_LO_clock.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/VI_LO_clock.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/VI_LO_clock.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:.\Generated_Source\PSoC5/VI_LO_clock.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/VI_LO_clock.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/VI_LO_clock.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
  27:.\Generated_Source\PSoC5/VI_LO_clock.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
  29:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
  30:.\Generated_Source\PSoC5/VI_LO_clock.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Function Name: VI_LO_clock_Start
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 2


  32:.\Generated_Source\PSoC5/VI_LO_clock.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
  34:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Summary:
  35:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
  38:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Parameters:
  39:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
  40:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
  41:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Returns:
  42:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
  43:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
  44:.\Generated_Source\PSoC5/VI_LO_clock.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/VI_LO_clock.c **** void VI_LO_clock_Start(void) 
  46:.\Generated_Source\PSoC5/VI_LO_clock.c **** {
  27              		.loc 1 46 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  47:.\Generated_Source\PSoC5/VI_LO_clock.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/VI_LO_clock.c ****     VI_LO_clock_CLKEN |= VI_LO_clock_CLKEN_MASK;
  32              		.loc 1 48 0
  33 0000 054A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F00203 		orr	r3, r3, #2
  36 0008 1370     		strb	r3, [r2]
  49:.\Generated_Source\PSoC5/VI_LO_clock.c **** 	VI_LO_clock_CLKSTBY |= VI_LO_clock_CLKSTBY_MASK;
  37              		.loc 1 49 0
  38 000a 1032     		adds	r2, r2, #16
  39 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  40 000e 43F00203 		orr	r3, r3, #2
  41 0012 1370     		strb	r3, [r2]
  42 0014 7047     		bx	lr
  43              	.L3:
  44 0016 00BF     		.align	2
  45              	.L2:
  46 0018 A1430040 		.word	1073759137
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	VI_LO_clock_Start, .-VI_LO_clock_Start
  50              		.section	.text.VI_LO_clock_Stop,"ax",%progbits
  51              		.align	2
  52              		.global	VI_LO_clock_Stop
  53              		.thumb
  54              		.thumb_func
  55              		.type	VI_LO_clock_Stop, %function
  56              	VI_LO_clock_Stop:
  57              	.LFB1:
  50:.\Generated_Source\PSoC5/VI_LO_clock.c **** }
  51:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
  52:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
  53:.\Generated_Source\PSoC5/VI_LO_clock.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Function Name: VI_LO_clock_Stop
  55:.\Generated_Source\PSoC5/VI_LO_clock.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
  57:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Summary:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 3


  58:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
  64:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Parameters:
  65:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
  66:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
  67:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Returns:
  68:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
  69:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
  70:.\Generated_Source\PSoC5/VI_LO_clock.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/VI_LO_clock.c **** void VI_LO_clock_Stop(void) 
  72:.\Generated_Source\PSoC5/VI_LO_clock.c **** {
  58              		.loc 1 72 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  73:.\Generated_Source\PSoC5/VI_LO_clock.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/VI_LO_clock.c ****     VI_LO_clock_CLKEN &= (uint8)(~VI_LO_clock_CLKEN_MASK);
  63              		.loc 1 74 0
  64 0000 054A     		ldr	r2, .L5
  65 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  66 0004 03F0FD03 		and	r3, r3, #253
  67 0008 1370     		strb	r3, [r2]
  75:.\Generated_Source\PSoC5/VI_LO_clock.c **** 	VI_LO_clock_CLKSTBY &= (uint8)(~VI_LO_clock_CLKSTBY_MASK);
  68              		.loc 1 75 0
  69 000a 1032     		adds	r2, r2, #16
  70 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  71 000e 03F0FD03 		and	r3, r3, #253
  72 0012 1370     		strb	r3, [r2]
  73 0014 7047     		bx	lr
  74              	.L6:
  75 0016 00BF     		.align	2
  76              	.L5:
  77 0018 A1430040 		.word	1073759137
  78              		.cfi_endproc
  79              	.LFE1:
  80              		.size	VI_LO_clock_Stop, .-VI_LO_clock_Stop
  81              		.section	.text.VI_LO_clock_StopBlock,"ax",%progbits
  82              		.align	2
  83              		.global	VI_LO_clock_StopBlock
  84              		.thumb
  85              		.thumb_func
  86              		.type	VI_LO_clock_StopBlock, %function
  87              	VI_LO_clock_StopBlock:
  88              	.LFB2:
  76:.\Generated_Source\PSoC5/VI_LO_clock.c **** }
  77:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
  78:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
  79:.\Generated_Source\PSoC5/VI_LO_clock.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
  81:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
  82:.\Generated_Source\PSoC5/VI_LO_clock.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Function Name: VI_LO_clock_StopBlock
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 4


  84:.\Generated_Source\PSoC5/VI_LO_clock.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
  86:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Summary:
  87:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
  93:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Parameters:
  94:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
  95:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
  96:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Returns:
  97:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
  98:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
  99:.\Generated_Source\PSoC5/VI_LO_clock.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/VI_LO_clock.c **** void VI_LO_clock_StopBlock(void) 
 101:.\Generated_Source\PSoC5/VI_LO_clock.c **** {
  89              		.loc 1 101 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 102:.\Generated_Source\PSoC5/VI_LO_clock.c ****     if ((VI_LO_clock_CLKEN & VI_LO_clock_CLKEN_MASK) != 0u)
  94              		.loc 1 102 0
  95 0000 174B     		ldr	r3, .L10
  96 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  97 0004 13F0020F 		tst	r3, #2
  98 0008 29D0     		beq	.L7
  99              	.LBB2:
 103:.\Generated_Source\PSoC5/VI_LO_clock.c ****     {
 104:.\Generated_Source\PSoC5/VI_LO_clock.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/VI_LO_clock.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 107:.\Generated_Source\PSoC5/VI_LO_clock.c ****         CLK_DIST_LD = 0u;
 100              		.loc 1 107 0
 101 000a 1649     		ldr	r1, .L10+4
 102 000c 0023     		movs	r3, #0
 103 000e 0B70     		strb	r3, [r1]
 108:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 109:.\Generated_Source\PSoC5/VI_LO_clock.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/VI_LO_clock.c **** #if defined(VI_LO_clock__CFG3)
 111:.\Generated_Source\PSoC5/VI_LO_clock.c ****         CLK_DIST_AMASK = VI_LO_clock_CLKEN_MASK;
 104              		.loc 1 111 0
 105 0010 0220     		movs	r0, #2
 106 0012 154A     		ldr	r2, .L10+8
 107 0014 1070     		strb	r0, [r2]
 112:.\Generated_Source\PSoC5/VI_LO_clock.c ****         CLK_DIST_DMASK = 0x00u;
 108              		.loc 1 112 0
 109 0016 043A     		subs	r2, r2, #4
 110 0018 1370     		strb	r3, [r2]
 113:.\Generated_Source\PSoC5/VI_LO_clock.c **** #else
 114:.\Generated_Source\PSoC5/VI_LO_clock.c ****         CLK_DIST_DMASK = VI_LO_clock_CLKEN_MASK;
 115:.\Generated_Source\PSoC5/VI_LO_clock.c ****         CLK_DIST_AMASK = 0x00u;
 116:.\Generated_Source\PSoC5/VI_LO_clock.c **** #endif /* VI_LO_clock__CFG3 */
 117:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 118:.\Generated_Source\PSoC5/VI_LO_clock.c ****         /* Clear mask of bus clock. */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 5


 119:.\Generated_Source\PSoC5/VI_LO_clock.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 111              		.loc 1 119 0
 112 001a 083A     		subs	r2, r2, #8
 113 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 114 001e 03F07F03 		and	r3, r3, #127
 115 0022 1370     		strb	r3, [r2]
 120:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 121:.\Generated_Source\PSoC5/VI_LO_clock.c ****         oldDivider = CY_GET_REG16(VI_LO_clock_DIV_PTR);
 116              		.loc 1 121 0
 117 0024 114B     		ldr	r3, .L10+12
 118 0026 1A88     		ldrh	r2, [r3]
 119 0028 92B2     		uxth	r2, r2
 120              	.LVL0:
 122:.\Generated_Source\PSoC5/VI_LO_clock.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 121              		.loc 1 122 0
 122 002a A3F58173 		sub	r3, r3, #258
 123 002e 1A80     		strh	r2, [r3]	@ movhi
 123:.\Generated_Source\PSoC5/VI_LO_clock.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 124              		.loc 1 123 0
 125 0030 0723     		movs	r3, #7
 126 0032 0B70     		strb	r3, [r1]
 127              	.L9:
 124:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 125:.\Generated_Source\PSoC5/VI_LO_clock.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/VI_LO_clock.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 128              		.loc 1 126 0 discriminator 1
 129 0034 0B4B     		ldr	r3, .L10+4
 130 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 131 0038 13F0010F 		tst	r3, #1
 132 003c FAD1     		bne	.L9
 127:.\Generated_Source\PSoC5/VI_LO_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 129:.\Generated_Source\PSoC5/VI_LO_clock.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/VI_LO_clock.c ****         VI_LO_clock_CLKEN &= (uint8)(~VI_LO_clock_CLKEN_MASK);
 133              		.loc 1 130 0
 134 003e 0849     		ldr	r1, .L10
 135 0040 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 136 0042 03F0FD03 		and	r3, r3, #253
 137 0046 0B70     		strb	r3, [r1]
 131:.\Generated_Source\PSoC5/VI_LO_clock.c ****         VI_LO_clock_CLKSTBY &= (uint8)(~VI_LO_clock_CLKSTBY_MASK);
 138              		.loc 1 131 0
 139 0048 1031     		adds	r1, r1, #16
 140 004a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 141 004c 03F0FD03 		and	r3, r3, #253
 142 0050 0B70     		strb	r3, [r1]
 132:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 133:.\Generated_Source\PSoC5/VI_LO_clock.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/VI_LO_clock.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/VI_LO_clock.c ****         CLK_DIST_LD = 0x00u;
 143              		.loc 1 135 0
 144 0052 0021     		movs	r1, #0
 145 0054 034B     		ldr	r3, .L10+4
 146 0056 1970     		strb	r1, [r3]
 136:.\Generated_Source\PSoC5/VI_LO_clock.c ****         CY_SET_REG16(VI_LO_clock_DIV_PTR, oldDivider);
 147              		.loc 1 136 0
 148 0058 03F20313 		addw	r3, r3, #259
 149 005c 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 6


 150              	.LVL1:
 151              	.L7:
 152 005e 7047     		bx	lr
 153              	.L11:
 154              		.align	2
 155              	.L10:
 156 0060 A1430040 		.word	1073759137
 157 0064 01400040 		.word	1073758209
 158 0068 14400040 		.word	1073758228
 159 006c 04410040 		.word	1073758468
 160              	.LBE2:
 161              		.cfi_endproc
 162              	.LFE2:
 163              		.size	VI_LO_clock_StopBlock, .-VI_LO_clock_StopBlock
 164              		.section	.text.VI_LO_clock_StandbyPower,"ax",%progbits
 165              		.align	2
 166              		.global	VI_LO_clock_StandbyPower
 167              		.thumb
 168              		.thumb_func
 169              		.type	VI_LO_clock_StandbyPower, %function
 170              	VI_LO_clock_StandbyPower:
 171              	.LFB3:
 137:.\Generated_Source\PSoC5/VI_LO_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/VI_LO_clock.c ****     }
 139:.\Generated_Source\PSoC5/VI_LO_clock.c **** }
 140:.\Generated_Source\PSoC5/VI_LO_clock.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 142:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 143:.\Generated_Source\PSoC5/VI_LO_clock.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Function Name: VI_LO_clock_StandbyPower
 145:.\Generated_Source\PSoC5/VI_LO_clock.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 147:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Summary:
 148:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 150:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Parameters:
 151:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 153:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Returns:
 154:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
 155:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 156:.\Generated_Source\PSoC5/VI_LO_clock.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/VI_LO_clock.c **** void VI_LO_clock_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/VI_LO_clock.c **** {
 172              		.loc 1 158 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177              	.LVL2:
 159:.\Generated_Source\PSoC5/VI_LO_clock.c ****     if(state == 0u)
 178              		.loc 1 159 0
 179 0000 28B9     		cbnz	r0, .L13
 160:.\Generated_Source\PSoC5/VI_LO_clock.c ****     {
 161:.\Generated_Source\PSoC5/VI_LO_clock.c ****         VI_LO_clock_CLKSTBY &= (uint8)(~VI_LO_clock_CLKSTBY_MASK);
 180              		.loc 1 161 0
 181 0002 064A     		ldr	r2, .L15
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 7


 182 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 183 0006 03F0FD03 		and	r3, r3, #253
 184 000a 1370     		strb	r3, [r2]
 185 000c 7047     		bx	lr
 186              	.L13:
 162:.\Generated_Source\PSoC5/VI_LO_clock.c ****     }
 163:.\Generated_Source\PSoC5/VI_LO_clock.c ****     else
 164:.\Generated_Source\PSoC5/VI_LO_clock.c ****     {
 165:.\Generated_Source\PSoC5/VI_LO_clock.c ****         VI_LO_clock_CLKSTBY |= VI_LO_clock_CLKSTBY_MASK;
 187              		.loc 1 165 0
 188 000e 034A     		ldr	r2, .L15
 189 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 190 0012 43F00203 		orr	r3, r3, #2
 191 0016 1370     		strb	r3, [r2]
 192 0018 7047     		bx	lr
 193              	.L16:
 194 001a 00BF     		.align	2
 195              	.L15:
 196 001c B1430040 		.word	1073759153
 197              		.cfi_endproc
 198              	.LFE3:
 199              		.size	VI_LO_clock_StandbyPower, .-VI_LO_clock_StandbyPower
 200              		.section	.text.VI_LO_clock_GetDividerRegister,"ax",%progbits
 201              		.align	2
 202              		.global	VI_LO_clock_GetDividerRegister
 203              		.thumb
 204              		.thumb_func
 205              		.type	VI_LO_clock_GetDividerRegister, %function
 206              	VI_LO_clock_GetDividerRegister:
 207              	.LFB5:
 166:.\Generated_Source\PSoC5/VI_LO_clock.c ****     }
 167:.\Generated_Source\PSoC5/VI_LO_clock.c **** }
 168:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 169:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 170:.\Generated_Source\PSoC5/VI_LO_clock.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Function Name: VI_LO_clock_SetDividerRegister
 172:.\Generated_Source\PSoC5/VI_LO_clock.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 174:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Summary:
 175:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 180:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Parameters:
 181:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/VI_LO_clock.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/VI_LO_clock.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   cycle.
 188:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 189:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Returns:
 190:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
 191:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 192:.\Generated_Source\PSoC5/VI_LO_clock.c **** *******************************************************************************/
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 8


 193:.\Generated_Source\PSoC5/VI_LO_clock.c **** void VI_LO_clock_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/VI_LO_clock.c ****                                 
 195:.\Generated_Source\PSoC5/VI_LO_clock.c **** {
 196:.\Generated_Source\PSoC5/VI_LO_clock.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 198:.\Generated_Source\PSoC5/VI_LO_clock.c ****     uint8 currSrc = VI_LO_clock_GetSourceRegister();
 199:.\Generated_Source\PSoC5/VI_LO_clock.c ****     uint16 oldDivider = VI_LO_clock_GetDividerRegister();
 200:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 201:.\Generated_Source\PSoC5/VI_LO_clock.c ****     if (clkDivider != oldDivider)
 202:.\Generated_Source\PSoC5/VI_LO_clock.c ****     {
 203:.\Generated_Source\PSoC5/VI_LO_clock.c ****         enabled = VI_LO_clock_CLKEN & VI_LO_clock_CLKEN_MASK;
 204:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 205:.\Generated_Source\PSoC5/VI_LO_clock.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:.\Generated_Source\PSoC5/VI_LO_clock.c ****         {
 207:.\Generated_Source\PSoC5/VI_LO_clock.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/VI_LO_clock.c ****             if (oldDivider == 0u)
 209:.\Generated_Source\PSoC5/VI_LO_clock.c ****             {
 210:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 CY_SET_REG16(VI_LO_clock_DIV_PTR, clkDivider);
 214:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 VI_LO_clock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:.\Generated_Source\PSoC5/VI_LO_clock.c ****             }
 216:.\Generated_Source\PSoC5/VI_LO_clock.c ****             else
 217:.\Generated_Source\PSoC5/VI_LO_clock.c ****             {
 218:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 VI_LO_clock_MOD_SRC |= CYCLK_SSS;
 221:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 CY_SET_REG16(VI_LO_clock_DIV_PTR, clkDivider);
 222:.\Generated_Source\PSoC5/VI_LO_clock.c ****             }
 223:.\Generated_Source\PSoC5/VI_LO_clock.c ****         }
 224:.\Generated_Source\PSoC5/VI_LO_clock.c ****         else
 225:.\Generated_Source\PSoC5/VI_LO_clock.c ****         {
 226:.\Generated_Source\PSoC5/VI_LO_clock.c **** 			
 227:.\Generated_Source\PSoC5/VI_LO_clock.c ****             if (enabled != 0u)
 228:.\Generated_Source\PSoC5/VI_LO_clock.c ****             {
 229:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 CLK_DIST_LD = 0x00u;
 230:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 231:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/VI_LO_clock.c **** #if defined(VI_LO_clock__CFG3)
 233:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 CLK_DIST_AMASK = VI_LO_clock_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/VI_LO_clock.c **** #else
 236:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 CLK_DIST_DMASK = VI_LO_clock_CLKEN_MASK;
 237:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 CLK_DIST_AMASK = 0x00u;
 238:.\Generated_Source\PSoC5/VI_LO_clock.c **** #endif /* VI_LO_clock__CFG3 */
 239:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 242:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 if (((VI_LO_clock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 {
 245:.\Generated_Source\PSoC5/VI_LO_clock.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/VI_LO_clock.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/VI_LO_clock.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 249:.\Generated_Source\PSoC5/VI_LO_clock.c ****                     /* Wait for clock to be disabled */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 9


 250:.\Generated_Source\PSoC5/VI_LO_clock.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/VI_LO_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 253:.\Generated_Source\PSoC5/VI_LO_clock.c ****                     VI_LO_clock_CLKEN &= (uint8)(~VI_LO_clock_CLKEN_MASK);
 254:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 255:.\Generated_Source\PSoC5/VI_LO_clock.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/VI_LO_clock.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/VI_LO_clock.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/VI_LO_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 }
 260:.\Generated_Source\PSoC5/VI_LO_clock.c ****             }
 261:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 262:.\Generated_Source\PSoC5/VI_LO_clock.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/VI_LO_clock.c ****             if ((VI_LO_clock_CLKEN & VI_LO_clock_CLKEN_MASK) != 0u)
 264:.\Generated_Source\PSoC5/VI_LO_clock.c ****             {
 265:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 268:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:.\Generated_Source\PSoC5/VI_LO_clock.c ****             }
 271:.\Generated_Source\PSoC5/VI_LO_clock.c ****             else
 272:.\Generated_Source\PSoC5/VI_LO_clock.c ****             {
 273:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 CY_SET_REG16(VI_LO_clock_DIV_PTR, clkDivider);
 275:.\Generated_Source\PSoC5/VI_LO_clock.c **** 				VI_LO_clock_CLKEN |= enabled;
 276:.\Generated_Source\PSoC5/VI_LO_clock.c ****             }
 277:.\Generated_Source\PSoC5/VI_LO_clock.c ****         }
 278:.\Generated_Source\PSoC5/VI_LO_clock.c ****     }
 279:.\Generated_Source\PSoC5/VI_LO_clock.c **** }
 280:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 281:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 282:.\Generated_Source\PSoC5/VI_LO_clock.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Function Name: VI_LO_clock_GetDividerRegister
 284:.\Generated_Source\PSoC5/VI_LO_clock.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 286:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Summary:
 287:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 289:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Parameters:
 290:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
 291:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 292:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Returns:
 293:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 296:.\Generated_Source\PSoC5/VI_LO_clock.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/VI_LO_clock.c **** uint16 VI_LO_clock_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/VI_LO_clock.c **** {
 208              		.loc 1 298 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 299:.\Generated_Source\PSoC5/VI_LO_clock.c ****     return CY_GET_REG16(VI_LO_clock_DIV_PTR);
 213              		.loc 1 299 0
 214 0000 014B     		ldr	r3, .L18
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 10


 215 0002 1888     		ldrh	r0, [r3]
 300:.\Generated_Source\PSoC5/VI_LO_clock.c **** }
 216              		.loc 1 300 0
 217 0004 80B2     		uxth	r0, r0
 218 0006 7047     		bx	lr
 219              	.L19:
 220              		.align	2
 221              	.L18:
 222 0008 04410040 		.word	1073758468
 223              		.cfi_endproc
 224              	.LFE5:
 225              		.size	VI_LO_clock_GetDividerRegister, .-VI_LO_clock_GetDividerRegister
 226              		.section	.text.VI_LO_clock_SetModeRegister,"ax",%progbits
 227              		.align	2
 228              		.global	VI_LO_clock_SetModeRegister
 229              		.thumb
 230              		.thumb_func
 231              		.type	VI_LO_clock_SetModeRegister, %function
 232              	VI_LO_clock_SetModeRegister:
 233              	.LFB6:
 301:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 302:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 303:.\Generated_Source\PSoC5/VI_LO_clock.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Function Name: VI_LO_clock_SetModeRegister
 305:.\Generated_Source\PSoC5/VI_LO_clock.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 307:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Summary:
 308:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 313:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Parameters:
 314:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/VI_LO_clock.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/VI_LO_clock.c **** *                 value.
 319:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/VI_LO_clock.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/VI_LO_clock.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/VI_LO_clock.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/VI_LO_clock.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 328:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Returns:
 329:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
 330:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 331:.\Generated_Source\PSoC5/VI_LO_clock.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/VI_LO_clock.c **** void VI_LO_clock_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/VI_LO_clock.c **** {
 234              		.loc 1 333 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 11


 238              		@ link register save eliminated.
 239              	.LVL3:
 334:.\Generated_Source\PSoC5/VI_LO_clock.c ****     VI_LO_clock_MOD_SRC |= modeBitMask & (uint8)VI_LO_clock_MODE_MASK;
 240              		.loc 1 334 0
 241 0000 034B     		ldr	r3, .L21
 242 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 243 0004 00F0F800 		and	r0, r0, #248
 244              	.LVL4:
 245 0008 1043     		orrs	r0, r0, r2
 246 000a 1870     		strb	r0, [r3]
 247 000c 7047     		bx	lr
 248              	.L22:
 249 000e 00BF     		.align	2
 250              	.L21:
 251 0010 06410040 		.word	1073758470
 252              		.cfi_endproc
 253              	.LFE6:
 254              		.size	VI_LO_clock_SetModeRegister, .-VI_LO_clock_SetModeRegister
 255              		.section	.text.VI_LO_clock_ClearModeRegister,"ax",%progbits
 256              		.align	2
 257              		.global	VI_LO_clock_ClearModeRegister
 258              		.thumb
 259              		.thumb_func
 260              		.type	VI_LO_clock_ClearModeRegister, %function
 261              	VI_LO_clock_ClearModeRegister:
 262              	.LFB7:
 335:.\Generated_Source\PSoC5/VI_LO_clock.c **** }
 336:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 337:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 338:.\Generated_Source\PSoC5/VI_LO_clock.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Function Name: VI_LO_clock_ClearModeRegister
 340:.\Generated_Source\PSoC5/VI_LO_clock.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 342:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Summary:
 343:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 348:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Parameters:
 349:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/VI_LO_clock.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/VI_LO_clock.c **** *                 value.
 354:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/VI_LO_clock.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/VI_LO_clock.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/VI_LO_clock.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/VI_LO_clock.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 363:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Returns:
 364:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
 365:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 12


 366:.\Generated_Source\PSoC5/VI_LO_clock.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/VI_LO_clock.c **** void VI_LO_clock_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/VI_LO_clock.c **** {
 263              		.loc 1 368 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268              	.LVL5:
 369:.\Generated_Source\PSoC5/VI_LO_clock.c ****     VI_LO_clock_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(VI_LO_clock_MODE_MASK));
 269              		.loc 1 369 0
 270 0000 044B     		ldr	r3, .L24
 271 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 272 0004 C043     		mvns	r0, r0
 273              	.LVL6:
 274 0006 C0B2     		uxtb	r0, r0
 275 0008 40F00700 		orr	r0, r0, #7
 276 000c 1040     		ands	r0, r0, r2
 277 000e 1870     		strb	r0, [r3]
 278 0010 7047     		bx	lr
 279              	.L25:
 280 0012 00BF     		.align	2
 281              	.L24:
 282 0014 06410040 		.word	1073758470
 283              		.cfi_endproc
 284              	.LFE7:
 285              		.size	VI_LO_clock_ClearModeRegister, .-VI_LO_clock_ClearModeRegister
 286              		.section	.text.VI_LO_clock_GetModeRegister,"ax",%progbits
 287              		.align	2
 288              		.global	VI_LO_clock_GetModeRegister
 289              		.thumb
 290              		.thumb_func
 291              		.type	VI_LO_clock_GetModeRegister, %function
 292              	VI_LO_clock_GetModeRegister:
 293              	.LFB8:
 370:.\Generated_Source\PSoC5/VI_LO_clock.c **** }
 371:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 372:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 373:.\Generated_Source\PSoC5/VI_LO_clock.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Function Name: VI_LO_clock_GetModeRegister
 375:.\Generated_Source\PSoC5/VI_LO_clock.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 377:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Summary:
 378:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 380:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Parameters:
 381:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
 382:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 383:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Returns:
 384:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 387:.\Generated_Source\PSoC5/VI_LO_clock.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/VI_LO_clock.c **** uint8 VI_LO_clock_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/VI_LO_clock.c **** {
 294              		.loc 1 389 0
 295              		.cfi_startproc
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 13


 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 390:.\Generated_Source\PSoC5/VI_LO_clock.c ****     return VI_LO_clock_MOD_SRC & (uint8)(VI_LO_clock_MODE_MASK);
 299              		.loc 1 390 0
 300 0000 024B     		ldr	r3, .L27
 301 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391:.\Generated_Source\PSoC5/VI_LO_clock.c **** }
 302              		.loc 1 391 0
 303 0004 00F0F800 		and	r0, r0, #248
 304 0008 7047     		bx	lr
 305              	.L28:
 306 000a 00BF     		.align	2
 307              	.L27:
 308 000c 06410040 		.word	1073758470
 309              		.cfi_endproc
 310              	.LFE8:
 311              		.size	VI_LO_clock_GetModeRegister, .-VI_LO_clock_GetModeRegister
 312              		.section	.text.VI_LO_clock_GetSourceRegister,"ax",%progbits
 313              		.align	2
 314              		.global	VI_LO_clock_GetSourceRegister
 315              		.thumb
 316              		.thumb_func
 317              		.type	VI_LO_clock_GetSourceRegister, %function
 318              	VI_LO_clock_GetSourceRegister:
 319              	.LFB10:
 392:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 393:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 394:.\Generated_Source\PSoC5/VI_LO_clock.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Function Name: VI_LO_clock_SetSourceRegister
 396:.\Generated_Source\PSoC5/VI_LO_clock.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 398:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Summary:
 399:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 402:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Parameters:
 403:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 415:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Returns:
 416:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
 417:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 418:.\Generated_Source\PSoC5/VI_LO_clock.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/VI_LO_clock.c **** void VI_LO_clock_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/VI_LO_clock.c **** {
 421:.\Generated_Source\PSoC5/VI_LO_clock.c ****     uint16 currDiv = VI_LO_clock_GetDividerRegister();
 422:.\Generated_Source\PSoC5/VI_LO_clock.c ****     uint8 oldSrc = VI_LO_clock_GetSourceRegister();
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 14


 423:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 424:.\Generated_Source\PSoC5/VI_LO_clock.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:.\Generated_Source\PSoC5/VI_LO_clock.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/VI_LO_clock.c ****     {
 427:.\Generated_Source\PSoC5/VI_LO_clock.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/VI_LO_clock.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/VI_LO_clock.c ****         VI_LO_clock_MOD_SRC |= CYCLK_SSS;
 430:.\Generated_Source\PSoC5/VI_LO_clock.c ****         VI_LO_clock_MOD_SRC =
 431:.\Generated_Source\PSoC5/VI_LO_clock.c ****             (VI_LO_clock_MOD_SRC & (uint8)(~VI_LO_clock_SRC_SEL_MSK)) | clkSource;
 432:.\Generated_Source\PSoC5/VI_LO_clock.c ****     }
 433:.\Generated_Source\PSoC5/VI_LO_clock.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:.\Generated_Source\PSoC5/VI_LO_clock.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/VI_LO_clock.c ****     {
 436:.\Generated_Source\PSoC5/VI_LO_clock.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/VI_LO_clock.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/VI_LO_clock.c ****         VI_LO_clock_MOD_SRC =
 439:.\Generated_Source\PSoC5/VI_LO_clock.c ****             (VI_LO_clock_MOD_SRC & (uint8)(~VI_LO_clock_SRC_SEL_MSK)) | clkSource;
 440:.\Generated_Source\PSoC5/VI_LO_clock.c ****         VI_LO_clock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:.\Generated_Source\PSoC5/VI_LO_clock.c ****     }
 442:.\Generated_Source\PSoC5/VI_LO_clock.c ****     else
 443:.\Generated_Source\PSoC5/VI_LO_clock.c ****     {
 444:.\Generated_Source\PSoC5/VI_LO_clock.c ****         VI_LO_clock_MOD_SRC =
 445:.\Generated_Source\PSoC5/VI_LO_clock.c ****             (VI_LO_clock_MOD_SRC & (uint8)(~VI_LO_clock_SRC_SEL_MSK)) | clkSource;
 446:.\Generated_Source\PSoC5/VI_LO_clock.c ****     }
 447:.\Generated_Source\PSoC5/VI_LO_clock.c **** }
 448:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 449:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 450:.\Generated_Source\PSoC5/VI_LO_clock.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Function Name: VI_LO_clock_GetSourceRegister
 452:.\Generated_Source\PSoC5/VI_LO_clock.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 454:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Summary:
 455:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 457:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Parameters:
 458:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
 459:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 460:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Returns:
 461:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 463:.\Generated_Source\PSoC5/VI_LO_clock.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/VI_LO_clock.c **** uint8 VI_LO_clock_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/VI_LO_clock.c **** {
 320              		.loc 1 465 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 466:.\Generated_Source\PSoC5/VI_LO_clock.c ****     return VI_LO_clock_MOD_SRC & VI_LO_clock_SRC_SEL_MSK;
 325              		.loc 1 466 0
 326 0000 024B     		ldr	r3, .L30
 327 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 467:.\Generated_Source\PSoC5/VI_LO_clock.c **** }
 328              		.loc 1 467 0
 329 0004 00F00700 		and	r0, r0, #7
 330 0008 7047     		bx	lr
 331              	.L31:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 15


 332 000a 00BF     		.align	2
 333              	.L30:
 334 000c 06410040 		.word	1073758470
 335              		.cfi_endproc
 336              	.LFE10:
 337              		.size	VI_LO_clock_GetSourceRegister, .-VI_LO_clock_GetSourceRegister
 338              		.section	.text.VI_LO_clock_SetDividerRegister,"ax",%progbits
 339              		.align	2
 340              		.global	VI_LO_clock_SetDividerRegister
 341              		.thumb
 342              		.thumb_func
 343              		.type	VI_LO_clock_SetDividerRegister, %function
 344              	VI_LO_clock_SetDividerRegister:
 345              	.LFB4:
 195:.\Generated_Source\PSoC5/VI_LO_clock.c ****     uint8 enabled;
 346              		.loc 1 195 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              	.LVL7:
 351 0000 70B5     		push	{r4, r5, r6, lr}
 352              		.cfi_def_cfa_offset 16
 353              		.cfi_offset 4, -16
 354              		.cfi_offset 5, -12
 355              		.cfi_offset 6, -8
 356              		.cfi_offset 14, -4
 357 0002 0446     		mov	r4, r0
 358 0004 0D46     		mov	r5, r1
 198:.\Generated_Source\PSoC5/VI_LO_clock.c ****     uint16 oldDivider = VI_LO_clock_GetDividerRegister();
 359              		.loc 1 198 0
 360 0006 FFF7FEFF 		bl	VI_LO_clock_GetSourceRegister
 361              	.LVL8:
 362 000a 0646     		mov	r6, r0
 363              	.LVL9:
 199:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 364              		.loc 1 199 0
 365 000c FFF7FEFF 		bl	VI_LO_clock_GetDividerRegister
 366              	.LVL10:
 201:.\Generated_Source\PSoC5/VI_LO_clock.c ****     {
 367              		.loc 1 201 0
 368 0010 8442     		cmp	r4, r0
 369 0012 57D0     		beq	.L32
 203:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 370              		.loc 1 203 0
 371 0014 2C4B     		ldr	r3, .L45
 372 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 373 0018 03F00203 		and	r3, r3, #2
 374 001c DAB2     		uxtb	r2, r3
 375              	.LVL11:
 205:.\Generated_Source\PSoC5/VI_LO_clock.c ****         {
 376              		.loc 1 205 0
 377 001e 96B9     		cbnz	r6, .L34
 205:.\Generated_Source\PSoC5/VI_LO_clock.c ****         {
 378              		.loc 1 205 0 is_stmt 0 discriminator 1
 379 0020 00B1     		cbz	r0, .L35
 205:.\Generated_Source\PSoC5/VI_LO_clock.c ****         {
 380              		.loc 1 205 0 discriminator 2
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 16


 381 0022 84B9     		cbnz	r4, .L34
 382              	.L35:
 208:.\Generated_Source\PSoC5/VI_LO_clock.c ****             {
 383              		.loc 1 208 0 is_stmt 1
 384 0024 38B9     		cbnz	r0, .L36
 213:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 VI_LO_clock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 385              		.loc 1 213 0
 386 0026 294B     		ldr	r3, .L45+4
 387 0028 1C80     		strh	r4, [r3]	@ movhi
 214:.\Generated_Source\PSoC5/VI_LO_clock.c ****             }
 388              		.loc 1 214 0
 389 002a 294A     		ldr	r2, .L45+8
 390              	.LVL12:
 391 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 392 002e 03F0BF03 		and	r3, r3, #191
 393 0032 1370     		strb	r3, [r2]
 394 0034 70BD     		pop	{r4, r5, r6, pc}
 395              	.LVL13:
 396              	.L36:
 220:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 CY_SET_REG16(VI_LO_clock_DIV_PTR, clkDivider);
 397              		.loc 1 220 0
 398 0036 264A     		ldr	r2, .L45+8
 399              	.LVL14:
 400 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 401              	.LVL15:
 402 003a 43F04003 		orr	r3, r3, #64
 403 003e 1370     		strb	r3, [r2]
 221:.\Generated_Source\PSoC5/VI_LO_clock.c ****             }
 404              		.loc 1 221 0
 405 0040 224B     		ldr	r3, .L45+4
 406 0042 1C80     		strh	r4, [r3]	@ movhi
 407 0044 70BD     		pop	{r4, r5, r6, pc}
 408              	.LVL16:
 409              	.L34:
 227:.\Generated_Source\PSoC5/VI_LO_clock.c ****             {
 410              		.loc 1 227 0
 411 0046 22B3     		cbz	r2, .L37
 229:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 412              		.loc 1 229 0
 413 0048 0023     		movs	r3, #0
 414 004a 2249     		ldr	r1, .L45+12
 415 004c 0B70     		strb	r3, [r1]
 233:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 CLK_DIST_DMASK = 0x00u;
 416              		.loc 1 233 0
 417 004e 0226     		movs	r6, #2
 418              	.LVL17:
 419 0050 1331     		adds	r1, r1, #19
 420 0052 0E70     		strb	r6, [r1]
 234:.\Generated_Source\PSoC5/VI_LO_clock.c **** #else
 421              		.loc 1 234 0
 422 0054 0439     		subs	r1, r1, #4
 423 0056 0B70     		strb	r3, [r1]
 240:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 424              		.loc 1 240 0
 425 0058 0839     		subs	r1, r1, #8
 426 005a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 427 005c 03F07F03 		and	r3, r3, #127
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 17


 428 0060 0B70     		strb	r3, [r1]
 243:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 {
 429              		.loc 1 243 0
 430 0062 1B4B     		ldr	r3, .L45+8
 431 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 432 0066 13F0080F 		tst	r3, #8
 433 006a 00D0     		beq	.L38
 243:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 {
 434              		.loc 1 243 0 is_stmt 0 discriminator 1
 435 006c 8CB9     		cbnz	r4, .L37
 436              	.L38:
 246:.\Generated_Source\PSoC5/VI_LO_clock.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 437              		.loc 1 246 0 is_stmt 1
 438 006e 1A4B     		ldr	r3, .L45+16
 439 0070 1880     		strh	r0, [r3]	@ movhi
 247:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 440              		.loc 1 247 0
 441 0072 0721     		movs	r1, #7
 442 0074 013B     		subs	r3, r3, #1
 443 0076 1970     		strb	r1, [r3]
 444              	.L39:
 250:.\Generated_Source\PSoC5/VI_LO_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 445              		.loc 1 250 0 discriminator 1
 446 0078 164B     		ldr	r3, .L45+12
 447 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 448 007c 13F0010F 		tst	r3, #1
 449 0080 FAD1     		bne	.L39
 253:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 450              		.loc 1 253 0
 451 0082 1149     		ldr	r1, .L45
 452 0084 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 453 0086 03F0FD03 		and	r3, r3, #253
 454 008a 0B70     		strb	r3, [r1]
 257:.\Generated_Source\PSoC5/VI_LO_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 455              		.loc 1 257 0
 456 008c 0021     		movs	r1, #0
 457 008e 114B     		ldr	r3, .L45+12
 458 0090 1970     		strb	r1, [r3]
 459              	.L37:
 263:.\Generated_Source\PSoC5/VI_LO_clock.c ****             {
 460              		.loc 1 263 0
 461 0092 0D4B     		ldr	r3, .L45
 462 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 463 0096 13F0020F 		tst	r3, #2
 464 009a 0DD0     		beq	.L40
 266:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 465              		.loc 1 266 0
 466 009c 0E4B     		ldr	r3, .L45+16
 467 009e 1C80     		strh	r4, [r3]	@ movhi
 268:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 468              		.loc 1 268 0
 469 00a0 0DB1     		cbz	r5, .L43
 470 00a2 0322     		movs	r2, #3
 471              	.LVL18:
 472 00a4 00E0     		b	.L41
 473              	.LVL19:
 474              	.L43:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 18


 475 00a6 0122     		movs	r2, #1
 476              	.LVL20:
 477              	.L41:
 268:.\Generated_Source\PSoC5/VI_LO_clock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 478              		.loc 1 268 0 is_stmt 0 discriminator 4
 479 00a8 0A4B     		ldr	r3, .L45+12
 480 00aa 1A70     		strb	r2, [r3]
 481              	.L42:
 269:.\Generated_Source\PSoC5/VI_LO_clock.c ****             }
 482              		.loc 1 269 0 is_stmt 1 discriminator 1
 483 00ac 094B     		ldr	r3, .L45+12
 484 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 485 00b0 13F0010F 		tst	r3, #1
 486 00b4 FAD1     		bne	.L42
 487 00b6 70BD     		pop	{r4, r5, r6, pc}
 488              	.LVL21:
 489              	.L40:
 274:.\Generated_Source\PSoC5/VI_LO_clock.c **** 				VI_LO_clock_CLKEN |= enabled;
 490              		.loc 1 274 0
 491 00b8 044B     		ldr	r3, .L45+4
 492 00ba 1C80     		strh	r4, [r3]	@ movhi
 275:.\Generated_Source\PSoC5/VI_LO_clock.c ****             }
 493              		.loc 1 275 0
 494 00bc 0249     		ldr	r1, .L45
 495 00be 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 496 00c0 1343     		orrs	r3, r3, r2
 497 00c2 0B70     		strb	r3, [r1]
 498              	.LVL22:
 499              	.L32:
 500 00c4 70BD     		pop	{r4, r5, r6, pc}
 501              	.L46:
 502 00c6 00BF     		.align	2
 503              	.L45:
 504 00c8 A1430040 		.word	1073759137
 505 00cc 04410040 		.word	1073758468
 506 00d0 06410040 		.word	1073758470
 507 00d4 01400040 		.word	1073758209
 508 00d8 02400040 		.word	1073758210
 509              		.cfi_endproc
 510              	.LFE4:
 511              		.size	VI_LO_clock_SetDividerRegister, .-VI_LO_clock_SetDividerRegister
 512              		.section	.text.VI_LO_clock_SetSourceRegister,"ax",%progbits
 513              		.align	2
 514              		.global	VI_LO_clock_SetSourceRegister
 515              		.thumb
 516              		.thumb_func
 517              		.type	VI_LO_clock_SetSourceRegister, %function
 518              	VI_LO_clock_SetSourceRegister:
 519              	.LFB9:
 420:.\Generated_Source\PSoC5/VI_LO_clock.c ****     uint16 currDiv = VI_LO_clock_GetDividerRegister();
 520              		.loc 1 420 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              	.LVL23:
 525 0000 38B5     		push	{r3, r4, r5, lr}
 526              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 19


 527              		.cfi_offset 3, -16
 528              		.cfi_offset 4, -12
 529              		.cfi_offset 5, -8
 530              		.cfi_offset 14, -4
 531 0002 0446     		mov	r4, r0
 421:.\Generated_Source\PSoC5/VI_LO_clock.c ****     uint8 oldSrc = VI_LO_clock_GetSourceRegister();
 532              		.loc 1 421 0
 533 0004 FFF7FEFF 		bl	VI_LO_clock_GetDividerRegister
 534              	.LVL24:
 535 0008 0546     		mov	r5, r0
 536              	.LVL25:
 422:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 537              		.loc 1 422 0
 538 000a FFF7FEFF 		bl	VI_LO_clock_GetSourceRegister
 539              	.LVL26:
 424:.\Generated_Source\PSoC5/VI_LO_clock.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 540              		.loc 1 424 0
 541 000e 0346     		mov	r3, r0
 542 0010 60B1     		cbz	r0, .L48
 424:.\Generated_Source\PSoC5/VI_LO_clock.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 543              		.loc 1 424 0 is_stmt 0 discriminator 1
 544 0012 5CB9     		cbnz	r4, .L48
 425:.\Generated_Source\PSoC5/VI_LO_clock.c ****     {
 545              		.loc 1 425 0 is_stmt 1
 546 0014 55B9     		cbnz	r5, .L48
 429:.\Generated_Source\PSoC5/VI_LO_clock.c ****         VI_LO_clock_MOD_SRC =
 547              		.loc 1 429 0
 548 0016 104A     		ldr	r2, .L52
 549 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 550 001a 43F04003 		orr	r3, r3, #64
 551 001e 1370     		strb	r3, [r2]
 431:.\Generated_Source\PSoC5/VI_LO_clock.c ****     }
 552              		.loc 1 431 0
 553 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 430:.\Generated_Source\PSoC5/VI_LO_clock.c ****             (VI_LO_clock_MOD_SRC & (uint8)(~VI_LO_clock_SRC_SEL_MSK)) | clkSource;
 554              		.loc 1 430 0
 555 0022 03F0F803 		and	r3, r3, #248
 556 0026 1C43     		orrs	r4, r4, r3
 557 0028 1470     		strb	r4, [r2]
 558 002a 38BD     		pop	{r3, r4, r5, pc}
 559              	.LVL27:
 560              	.L48:
 433:.\Generated_Source\PSoC5/VI_LO_clock.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 561              		.loc 1 433 0
 562 002c 63B9     		cbnz	r3, .L50
 433:.\Generated_Source\PSoC5/VI_LO_clock.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 563              		.loc 1 433 0 is_stmt 0 discriminator 1
 564 002e 5CB1     		cbz	r4, .L50
 434:.\Generated_Source\PSoC5/VI_LO_clock.c ****     {
 565              		.loc 1 434 0 is_stmt 1
 566 0030 55B9     		cbnz	r5, .L50
 439:.\Generated_Source\PSoC5/VI_LO_clock.c ****         VI_LO_clock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 567              		.loc 1 439 0
 568 0032 094A     		ldr	r2, .L52
 569 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 438:.\Generated_Source\PSoC5/VI_LO_clock.c ****             (VI_LO_clock_MOD_SRC & (uint8)(~VI_LO_clock_SRC_SEL_MSK)) | clkSource;
 570              		.loc 1 438 0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 20


 571 0036 03F0F803 		and	r3, r3, #248
 572 003a 1C43     		orrs	r4, r4, r3
 573 003c 1470     		strb	r4, [r2]
 440:.\Generated_Source\PSoC5/VI_LO_clock.c ****     }
 574              		.loc 1 440 0
 575 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 576 0040 03F0BF03 		and	r3, r3, #191
 577 0044 1370     		strb	r3, [r2]
 578 0046 38BD     		pop	{r3, r4, r5, pc}
 579              	.LVL28:
 580              	.L50:
 445:.\Generated_Source\PSoC5/VI_LO_clock.c ****     }
 581              		.loc 1 445 0
 582 0048 034A     		ldr	r2, .L52
 583 004a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 444:.\Generated_Source\PSoC5/VI_LO_clock.c ****             (VI_LO_clock_MOD_SRC & (uint8)(~VI_LO_clock_SRC_SEL_MSK)) | clkSource;
 584              		.loc 1 444 0
 585 004c 03F0F803 		and	r3, r3, #248
 586 0050 1C43     		orrs	r4, r4, r3
 587 0052 1470     		strb	r4, [r2]
 588 0054 38BD     		pop	{r3, r4, r5, pc}
 589              	.LVL29:
 590              	.L53:
 591 0056 00BF     		.align	2
 592              	.L52:
 593 0058 06410040 		.word	1073758470
 594              		.cfi_endproc
 595              	.LFE9:
 596              		.size	VI_LO_clock_SetSourceRegister, .-VI_LO_clock_SetSourceRegister
 597              		.section	.text.VI_LO_clock_SetPhaseRegister,"ax",%progbits
 598              		.align	2
 599              		.global	VI_LO_clock_SetPhaseRegister
 600              		.thumb
 601              		.thumb_func
 602              		.type	VI_LO_clock_SetPhaseRegister, %function
 603              	VI_LO_clock_SetPhaseRegister:
 604              	.LFB11:
 468:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 469:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 470:.\Generated_Source\PSoC5/VI_LO_clock.c **** #if defined(VI_LO_clock__CFG3)
 471:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 472:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 473:.\Generated_Source\PSoC5/VI_LO_clock.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Function Name: VI_LO_clock_SetPhaseRegister
 475:.\Generated_Source\PSoC5/VI_LO_clock.c **** ********************************************************************************
 476:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 477:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Summary:
 478:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Sets the phase delay of the analog clock. This function is only available
 479:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  for analog clocks. The clock must be disabled before changing the phase
 480:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  delay to avoid glitches.
 481:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 482:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Parameters:
 483:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  clkPhase: Amount to delay the phase of the clock, in 1.0ns increments.
 484:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   clkPhase must be from 1 to 11 inclusive. Other values, including 0,
 485:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   disable the clock. clkPhase = 1 produces a 0ns delay and clkPhase = 11 
 486:.\Generated_Source\PSoC5/VI_LO_clock.c **** *   produces a 10ns delay.
 487:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 21


 488:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Returns:
 489:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
 490:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 491:.\Generated_Source\PSoC5/VI_LO_clock.c **** *******************************************************************************/
 492:.\Generated_Source\PSoC5/VI_LO_clock.c **** void VI_LO_clock_SetPhaseRegister(uint8 clkPhase) 
 493:.\Generated_Source\PSoC5/VI_LO_clock.c **** {
 605              		.loc 1 493 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 610              	.LVL30:
 494:.\Generated_Source\PSoC5/VI_LO_clock.c ****     VI_LO_clock_PHASE = clkPhase & VI_LO_clock_PHASE_MASK;
 611              		.loc 1 494 0
 612 0000 00F00F00 		and	r0, r0, #15
 613              	.LVL31:
 614 0004 014B     		ldr	r3, .L55
 615 0006 1870     		strb	r0, [r3]
 616 0008 7047     		bx	lr
 617              	.L56:
 618 000a 00BF     		.align	2
 619              	.L55:
 620 000c 07410040 		.word	1073758471
 621              		.cfi_endproc
 622              	.LFE11:
 623              		.size	VI_LO_clock_SetPhaseRegister, .-VI_LO_clock_SetPhaseRegister
 624              		.section	.text.VI_LO_clock_GetPhaseRegister,"ax",%progbits
 625              		.align	2
 626              		.global	VI_LO_clock_GetPhaseRegister
 627              		.thumb
 628              		.thumb_func
 629              		.type	VI_LO_clock_GetPhaseRegister, %function
 630              	VI_LO_clock_GetPhaseRegister:
 631              	.LFB12:
 495:.\Generated_Source\PSoC5/VI_LO_clock.c **** }
 496:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 497:.\Generated_Source\PSoC5/VI_LO_clock.c **** 
 498:.\Generated_Source\PSoC5/VI_LO_clock.c **** /*******************************************************************************
 499:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Function Name: VI_LO_clock_GetPhase
 500:.\Generated_Source\PSoC5/VI_LO_clock.c **** ********************************************************************************
 501:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 502:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Summary:
 503:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Gets the phase delay of the analog clock. This function is only available
 504:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  for analog clocks.
 505:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 506:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Parameters:
 507:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  None
 508:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 509:.\Generated_Source\PSoC5/VI_LO_clock.c **** * Returns:
 510:.\Generated_Source\PSoC5/VI_LO_clock.c **** *  Phase of the analog clock. See SetPhaseRegister for details.
 511:.\Generated_Source\PSoC5/VI_LO_clock.c **** *
 512:.\Generated_Source\PSoC5/VI_LO_clock.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC5/VI_LO_clock.c **** uint8 VI_LO_clock_GetPhaseRegister(void) 
 514:.\Generated_Source\PSoC5/VI_LO_clock.c **** {
 632              		.loc 1 514 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 22


 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 515:.\Generated_Source\PSoC5/VI_LO_clock.c ****     return VI_LO_clock_PHASE & VI_LO_clock_PHASE_MASK;
 637              		.loc 1 515 0
 638 0000 024B     		ldr	r3, .L58
 639 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 516:.\Generated_Source\PSoC5/VI_LO_clock.c **** }
 640              		.loc 1 516 0
 641 0004 00F00F00 		and	r0, r0, #15
 642 0008 7047     		bx	lr
 643              	.L59:
 644 000a 00BF     		.align	2
 645              	.L58:
 646 000c 07410040 		.word	1073758471
 647              		.cfi_endproc
 648              	.LFE12:
 649              		.size	VI_LO_clock_GetPhaseRegister, .-VI_LO_clock_GetPhaseRegister
 650              		.text
 651              	.Letext0:
 652              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 653              		.section	.debug_info,"",%progbits
 654              	.Ldebug_info0:
 655 0000 C0020000 		.4byte	0x2c0
 656 0004 0400     		.2byte	0x4
 657 0006 00000000 		.4byte	.Ldebug_abbrev0
 658 000a 04       		.byte	0x4
 659 000b 01       		.uleb128 0x1
 660 000c BB010000 		.4byte	.LASF40
 661 0010 01       		.byte	0x1
 662 0011 CF020000 		.4byte	.LASF41
 663 0015 98000000 		.4byte	.LASF42
 664 0019 00000000 		.4byte	.Ldebug_ranges0+0
 665 001d 00000000 		.4byte	0
 666 0021 00000000 		.4byte	.Ldebug_line0
 667 0025 02       		.uleb128 0x2
 668 0026 01       		.byte	0x1
 669 0027 06       		.byte	0x6
 670 0028 61010000 		.4byte	.LASF0
 671 002c 02       		.uleb128 0x2
 672 002d 01       		.byte	0x1
 673 002e 08       		.byte	0x8
 674 002f 31010000 		.4byte	.LASF1
 675 0033 02       		.uleb128 0x2
 676 0034 02       		.byte	0x2
 677 0035 05       		.byte	0x5
 678 0036 14000000 		.4byte	.LASF2
 679 003a 02       		.uleb128 0x2
 680 003b 02       		.byte	0x2
 681 003c 07       		.byte	0x7
 682 003d A3010000 		.4byte	.LASF3
 683 0041 02       		.uleb128 0x2
 684 0042 04       		.byte	0x4
 685 0043 05       		.byte	0x5
 686 0044 FA000000 		.4byte	.LASF4
 687 0048 02       		.uleb128 0x2
 688 0049 04       		.byte	0x4
 689 004a 07       		.byte	0x7
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 23


 690 004b B6020000 		.4byte	.LASF5
 691 004f 02       		.uleb128 0x2
 692 0050 08       		.byte	0x8
 693 0051 05       		.byte	0x5
 694 0052 EC000000 		.4byte	.LASF6
 695 0056 02       		.uleb128 0x2
 696 0057 08       		.byte	0x8
 697 0058 07       		.byte	0x7
 698 0059 7F010000 		.4byte	.LASF7
 699 005d 03       		.uleb128 0x3
 700 005e 04       		.byte	0x4
 701 005f 05       		.byte	0x5
 702 0060 696E7400 		.ascii	"int\000"
 703 0064 02       		.uleb128 0x2
 704 0065 04       		.byte	0x4
 705 0066 07       		.byte	0x7
 706 0067 96010000 		.4byte	.LASF8
 707 006b 04       		.uleb128 0x4
 708 006c 4D000000 		.4byte	.LASF9
 709 0070 02       		.byte	0x2
 710 0071 3801     		.2byte	0x138
 711 0073 2C000000 		.4byte	0x2c
 712 0077 04       		.uleb128 0x4
 713 0078 37000000 		.4byte	.LASF10
 714 007c 02       		.byte	0x2
 715 007d 3901     		.2byte	0x139
 716 007f 3A000000 		.4byte	0x3a
 717 0083 02       		.uleb128 0x2
 718 0084 04       		.byte	0x4
 719 0085 04       		.byte	0x4
 720 0086 00000000 		.4byte	.LASF11
 721 008a 02       		.uleb128 0x2
 722 008b 08       		.byte	0x8
 723 008c 04       		.byte	0x4
 724 008d C8020000 		.4byte	.LASF12
 725 0091 02       		.uleb128 0x2
 726 0092 01       		.byte	0x1
 727 0093 08       		.byte	0x8
 728 0094 B6010000 		.4byte	.LASF13
 729 0098 04       		.uleb128 0x4
 730 0099 B1020000 		.4byte	.LASF14
 731 009d 02       		.byte	0x2
 732 009e E201     		.2byte	0x1e2
 733 00a0 A4000000 		.4byte	0xa4
 734 00a4 05       		.uleb128 0x5
 735 00a5 6B000000 		.4byte	0x6b
 736 00a9 04       		.uleb128 0x4
 737 00aa 0E000000 		.4byte	.LASF15
 738 00ae 02       		.byte	0x2
 739 00af E301     		.2byte	0x1e3
 740 00b1 B5000000 		.4byte	0xb5
 741 00b5 05       		.uleb128 0x5
 742 00b6 77000000 		.4byte	0x77
 743 00ba 06       		.uleb128 0x6
 744 00bb 6D010000 		.4byte	.LASF16
 745 00bf 01       		.byte	0x1
 746 00c0 2D       		.byte	0x2d
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 24


 747 00c1 00000000 		.4byte	.LFB0
 748 00c5 1C000000 		.4byte	.LFE0-.LFB0
 749 00c9 01       		.uleb128 0x1
 750 00ca 9C       		.byte	0x9c
 751 00cb 06       		.uleb128 0x6
 752 00cc 66020000 		.4byte	.LASF17
 753 00d0 01       		.byte	0x1
 754 00d1 47       		.byte	0x47
 755 00d2 00000000 		.4byte	.LFB1
 756 00d6 1C000000 		.4byte	.LFE1-.LFB1
 757 00da 01       		.uleb128 0x1
 758 00db 9C       		.byte	0x9c
 759 00dc 07       		.uleb128 0x7
 760 00dd 4B010000 		.4byte	.LASF18
 761 00e1 01       		.byte	0x1
 762 00e2 64       		.byte	0x64
 763 00e3 00000000 		.4byte	.LFB2
 764 00e7 70000000 		.4byte	.LFE2-.LFB2
 765 00eb 01       		.uleb128 0x1
 766 00ec 9C       		.byte	0x9c
 767 00ed 0B010000 		.4byte	0x10b
 768 00f1 08       		.uleb128 0x8
 769 00f2 0A000000 		.4byte	.LBB2
 770 00f6 66000000 		.4byte	.LBE2-.LBB2
 771 00fa 09       		.uleb128 0x9
 772 00fb 5B020000 		.4byte	.LASF30
 773 00ff 01       		.byte	0x1
 774 0100 69       		.byte	0x69
 775 0101 77000000 		.4byte	0x77
 776 0105 00000000 		.4byte	.LLST0
 777 0109 00       		.byte	0
 778 010a 00       		.byte	0
 779 010b 07       		.uleb128 0x7
 780 010c 1E000000 		.4byte	.LASF19
 781 0110 01       		.byte	0x1
 782 0111 9D       		.byte	0x9d
 783 0112 00000000 		.4byte	.LFB3
 784 0116 20000000 		.4byte	.LFE3-.LFB3
 785 011a 01       		.uleb128 0x1
 786 011b 9C       		.byte	0x9c
 787 011c 2E010000 		.4byte	0x12e
 788 0120 0A       		.uleb128 0xa
 789 0121 22010000 		.4byte	.LASF21
 790 0125 01       		.byte	0x1
 791 0126 9D       		.byte	0x9d
 792 0127 6B000000 		.4byte	0x6b
 793 012b 01       		.uleb128 0x1
 794 012c 50       		.byte	0x50
 795 012d 00       		.byte	0
 796 012e 0B       		.uleb128 0xb
 797 012f 56030000 		.4byte	.LASF24
 798 0133 01       		.byte	0x1
 799 0134 2901     		.2byte	0x129
 800 0136 77000000 		.4byte	0x77
 801 013a 00000000 		.4byte	.LFB5
 802 013e 0C000000 		.4byte	.LFE5-.LFB5
 803 0142 01       		.uleb128 0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 25


 804 0143 9C       		.byte	0x9c
 805 0144 0C       		.uleb128 0xc
 806 0145 7C000000 		.4byte	.LASF20
 807 0149 01       		.byte	0x1
 808 014a 4C01     		.2byte	0x14c
 809 014c 00000000 		.4byte	.LFB6
 810 0150 14000000 		.4byte	.LFE6-.LFB6
 811 0154 01       		.uleb128 0x1
 812 0155 9C       		.byte	0x9c
 813 0156 6B010000 		.4byte	0x16b
 814 015a 0D       		.uleb128 0xd
 815 015b 3F010000 		.4byte	.LASF22
 816 015f 01       		.byte	0x1
 817 0160 4C01     		.2byte	0x14c
 818 0162 6B000000 		.4byte	0x6b
 819 0166 13000000 		.4byte	.LLST1
 820 016a 00       		.byte	0
 821 016b 0C       		.uleb128 0xc
 822 016c 38030000 		.4byte	.LASF23
 823 0170 01       		.byte	0x1
 824 0171 6F01     		.2byte	0x16f
 825 0173 00000000 		.4byte	.LFB7
 826 0177 18000000 		.4byte	.LFE7-.LFB7
 827 017b 01       		.uleb128 0x1
 828 017c 9C       		.byte	0x9c
 829 017d 92010000 		.4byte	0x192
 830 0181 0D       		.uleb128 0xd
 831 0182 3F010000 		.4byte	.LASF22
 832 0186 01       		.byte	0x1
 833 0187 6F01     		.2byte	0x16f
 834 0189 6B000000 		.4byte	0x6b
 835 018d 34000000 		.4byte	.LLST2
 836 0191 00       		.byte	0
 837 0192 0B       		.uleb128 0xb
 838 0193 77020000 		.4byte	.LASF25
 839 0197 01       		.byte	0x1
 840 0198 8401     		.2byte	0x184
 841 019a 6B000000 		.4byte	0x6b
 842 019e 00000000 		.4byte	.LFB8
 843 01a2 10000000 		.4byte	.LFE8-.LFB8
 844 01a6 01       		.uleb128 0x1
 845 01a7 9C       		.byte	0x9c
 846 01a8 0B       		.uleb128 0xb
 847 01a9 93020000 		.4byte	.LASF26
 848 01ad 01       		.byte	0x1
 849 01ae D001     		.2byte	0x1d0
 850 01b0 6B000000 		.4byte	0x6b
 851 01b4 00000000 		.4byte	.LFB10
 852 01b8 10000000 		.4byte	.LFE10-.LFB10
 853 01bc 01       		.uleb128 0x1
 854 01bd 9C       		.byte	0x9c
 855 01be 07       		.uleb128 0x7
 856 01bf 03010000 		.4byte	.LASF27
 857 01c3 01       		.byte	0x1
 858 01c4 C1       		.byte	0xc1
 859 01c5 00000000 		.4byte	.LFB4
 860 01c9 DC000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 26


 861 01cd 01       		.uleb128 0x1
 862 01ce 9C       		.byte	0x9c
 863 01cf 2F020000 		.4byte	0x22f
 864 01d3 0E       		.uleb128 0xe
 865 01d4 53000000 		.4byte	.LASF28
 866 01d8 01       		.byte	0x1
 867 01d9 C1       		.byte	0xc1
 868 01da 77000000 		.4byte	0x77
 869 01de 55000000 		.4byte	.LLST3
 870 01e2 0E       		.uleb128 0xe
 871 01e3 3E000000 		.4byte	.LASF29
 872 01e7 01       		.byte	0x1
 873 01e8 C1       		.byte	0xc1
 874 01e9 6B000000 		.4byte	0x6b
 875 01ed 76000000 		.4byte	.LLST4
 876 01f1 09       		.uleb128 0x9
 877 01f2 F6020000 		.4byte	.LASF31
 878 01f6 01       		.byte	0x1
 879 01f7 C4       		.byte	0xc4
 880 01f8 6B000000 		.4byte	0x6b
 881 01fc 97000000 		.4byte	.LLST5
 882 0200 09       		.uleb128 0x9
 883 0201 53020000 		.4byte	.LASF32
 884 0205 01       		.byte	0x1
 885 0206 C6       		.byte	0xc6
 886 0207 6B000000 		.4byte	0x6b
 887 020b E1000000 		.4byte	.LLST6
 888 020f 0F       		.uleb128 0xf
 889 0210 5B020000 		.4byte	.LASF30
 890 0214 01       		.byte	0x1
 891 0215 C7       		.byte	0xc7
 892 0216 77000000 		.4byte	0x77
 893 021a 01       		.uleb128 0x1
 894 021b 50       		.byte	0x50
 895 021c 10       		.uleb128 0x10
 896 021d 0A000000 		.4byte	.LVL8
 897 0221 A8010000 		.4byte	0x1a8
 898 0225 10       		.uleb128 0x10
 899 0226 10000000 		.4byte	.LVL10
 900 022a 2E010000 		.4byte	0x12e
 901 022e 00       		.byte	0
 902 022f 0C       		.uleb128 0xc
 903 0230 5E000000 		.4byte	.LASF33
 904 0234 01       		.byte	0x1
 905 0235 A301     		.2byte	0x1a3
 906 0237 00000000 		.4byte	.LFB9
 907 023b 5C000000 		.4byte	.LFE9-.LFB9
 908 023f 01       		.uleb128 0x1
 909 0240 9C       		.byte	0x9c
 910 0241 86020000 		.4byte	0x286
 911 0245 0D       		.uleb128 0xd
 912 0246 49020000 		.4byte	.LASF34
 913 024a 01       		.byte	0x1
 914 024b A301     		.2byte	0x1a3
 915 024d 6B000000 		.4byte	0x6b
 916 0251 F4000000 		.4byte	.LLST7
 917 0255 11       		.uleb128 0x11
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 27


 918 0256 06000000 		.4byte	.LASF35
 919 025a 01       		.byte	0x1
 920 025b A501     		.2byte	0x1a5
 921 025d 77000000 		.4byte	0x77
 922 0261 15010000 		.4byte	.LLST8
 923 0265 12       		.uleb128 0x12
 924 0266 46000000 		.4byte	.LASF36
 925 026a 01       		.byte	0x1
 926 026b A601     		.2byte	0x1a6
 927 026d 6B000000 		.4byte	0x6b
 928 0271 01       		.uleb128 0x1
 929 0272 50       		.byte	0x50
 930 0273 10       		.uleb128 0x10
 931 0274 08000000 		.4byte	.LVL24
 932 0278 2E010000 		.4byte	0x12e
 933 027c 10       		.uleb128 0x10
 934 027d 0E000000 		.4byte	.LVL26
 935 0281 A8010000 		.4byte	0x1a8
 936 0285 00       		.byte	0
 937 0286 0C       		.uleb128 0xc
 938 0287 1B030000 		.4byte	.LASF37
 939 028b 01       		.byte	0x1
 940 028c EC01     		.2byte	0x1ec
 941 028e 00000000 		.4byte	.LFB11
 942 0292 10000000 		.4byte	.LFE11-.LFB11
 943 0296 01       		.uleb128 0x1
 944 0297 9C       		.byte	0x9c
 945 0298 AD020000 		.4byte	0x2ad
 946 029c 0D       		.uleb128 0xd
 947 029d 28010000 		.4byte	.LASF38
 948 02a1 01       		.byte	0x1
 949 02a2 EC01     		.2byte	0x1ec
 950 02a4 6B000000 		.4byte	0x6b
 951 02a8 28010000 		.4byte	.LLST9
 952 02ac 00       		.byte	0
 953 02ad 0B       		.uleb128 0xb
 954 02ae FE020000 		.4byte	.LASF39
 955 02b2 01       		.byte	0x1
 956 02b3 0102     		.2byte	0x201
 957 02b5 6B000000 		.4byte	0x6b
 958 02b9 00000000 		.4byte	.LFB12
 959 02bd 10000000 		.4byte	.LFE12-.LFB12
 960 02c1 01       		.uleb128 0x1
 961 02c2 9C       		.byte	0x9c
 962 02c3 00       		.byte	0
 963              		.section	.debug_abbrev,"",%progbits
 964              	.Ldebug_abbrev0:
 965 0000 01       		.uleb128 0x1
 966 0001 11       		.uleb128 0x11
 967 0002 01       		.byte	0x1
 968 0003 25       		.uleb128 0x25
 969 0004 0E       		.uleb128 0xe
 970 0005 13       		.uleb128 0x13
 971 0006 0B       		.uleb128 0xb
 972 0007 03       		.uleb128 0x3
 973 0008 0E       		.uleb128 0xe
 974 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 28


 975 000a 0E       		.uleb128 0xe
 976 000b 55       		.uleb128 0x55
 977 000c 17       		.uleb128 0x17
 978 000d 11       		.uleb128 0x11
 979 000e 01       		.uleb128 0x1
 980 000f 10       		.uleb128 0x10
 981 0010 17       		.uleb128 0x17
 982 0011 00       		.byte	0
 983 0012 00       		.byte	0
 984 0013 02       		.uleb128 0x2
 985 0014 24       		.uleb128 0x24
 986 0015 00       		.byte	0
 987 0016 0B       		.uleb128 0xb
 988 0017 0B       		.uleb128 0xb
 989 0018 3E       		.uleb128 0x3e
 990 0019 0B       		.uleb128 0xb
 991 001a 03       		.uleb128 0x3
 992 001b 0E       		.uleb128 0xe
 993 001c 00       		.byte	0
 994 001d 00       		.byte	0
 995 001e 03       		.uleb128 0x3
 996 001f 24       		.uleb128 0x24
 997 0020 00       		.byte	0
 998 0021 0B       		.uleb128 0xb
 999 0022 0B       		.uleb128 0xb
 1000 0023 3E       		.uleb128 0x3e
 1001 0024 0B       		.uleb128 0xb
 1002 0025 03       		.uleb128 0x3
 1003 0026 08       		.uleb128 0x8
 1004 0027 00       		.byte	0
 1005 0028 00       		.byte	0
 1006 0029 04       		.uleb128 0x4
 1007 002a 16       		.uleb128 0x16
 1008 002b 00       		.byte	0
 1009 002c 03       		.uleb128 0x3
 1010 002d 0E       		.uleb128 0xe
 1011 002e 3A       		.uleb128 0x3a
 1012 002f 0B       		.uleb128 0xb
 1013 0030 3B       		.uleb128 0x3b
 1014 0031 05       		.uleb128 0x5
 1015 0032 49       		.uleb128 0x49
 1016 0033 13       		.uleb128 0x13
 1017 0034 00       		.byte	0
 1018 0035 00       		.byte	0
 1019 0036 05       		.uleb128 0x5
 1020 0037 35       		.uleb128 0x35
 1021 0038 00       		.byte	0
 1022 0039 49       		.uleb128 0x49
 1023 003a 13       		.uleb128 0x13
 1024 003b 00       		.byte	0
 1025 003c 00       		.byte	0
 1026 003d 06       		.uleb128 0x6
 1027 003e 2E       		.uleb128 0x2e
 1028 003f 00       		.byte	0
 1029 0040 3F       		.uleb128 0x3f
 1030 0041 19       		.uleb128 0x19
 1031 0042 03       		.uleb128 0x3
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 29


 1032 0043 0E       		.uleb128 0xe
 1033 0044 3A       		.uleb128 0x3a
 1034 0045 0B       		.uleb128 0xb
 1035 0046 3B       		.uleb128 0x3b
 1036 0047 0B       		.uleb128 0xb
 1037 0048 27       		.uleb128 0x27
 1038 0049 19       		.uleb128 0x19
 1039 004a 11       		.uleb128 0x11
 1040 004b 01       		.uleb128 0x1
 1041 004c 12       		.uleb128 0x12
 1042 004d 06       		.uleb128 0x6
 1043 004e 40       		.uleb128 0x40
 1044 004f 18       		.uleb128 0x18
 1045 0050 9742     		.uleb128 0x2117
 1046 0052 19       		.uleb128 0x19
 1047 0053 00       		.byte	0
 1048 0054 00       		.byte	0
 1049 0055 07       		.uleb128 0x7
 1050 0056 2E       		.uleb128 0x2e
 1051 0057 01       		.byte	0x1
 1052 0058 3F       		.uleb128 0x3f
 1053 0059 19       		.uleb128 0x19
 1054 005a 03       		.uleb128 0x3
 1055 005b 0E       		.uleb128 0xe
 1056 005c 3A       		.uleb128 0x3a
 1057 005d 0B       		.uleb128 0xb
 1058 005e 3B       		.uleb128 0x3b
 1059 005f 0B       		.uleb128 0xb
 1060 0060 27       		.uleb128 0x27
 1061 0061 19       		.uleb128 0x19
 1062 0062 11       		.uleb128 0x11
 1063 0063 01       		.uleb128 0x1
 1064 0064 12       		.uleb128 0x12
 1065 0065 06       		.uleb128 0x6
 1066 0066 40       		.uleb128 0x40
 1067 0067 18       		.uleb128 0x18
 1068 0068 9742     		.uleb128 0x2117
 1069 006a 19       		.uleb128 0x19
 1070 006b 01       		.uleb128 0x1
 1071 006c 13       		.uleb128 0x13
 1072 006d 00       		.byte	0
 1073 006e 00       		.byte	0
 1074 006f 08       		.uleb128 0x8
 1075 0070 0B       		.uleb128 0xb
 1076 0071 01       		.byte	0x1
 1077 0072 11       		.uleb128 0x11
 1078 0073 01       		.uleb128 0x1
 1079 0074 12       		.uleb128 0x12
 1080 0075 06       		.uleb128 0x6
 1081 0076 00       		.byte	0
 1082 0077 00       		.byte	0
 1083 0078 09       		.uleb128 0x9
 1084 0079 34       		.uleb128 0x34
 1085 007a 00       		.byte	0
 1086 007b 03       		.uleb128 0x3
 1087 007c 0E       		.uleb128 0xe
 1088 007d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 30


 1089 007e 0B       		.uleb128 0xb
 1090 007f 3B       		.uleb128 0x3b
 1091 0080 0B       		.uleb128 0xb
 1092 0081 49       		.uleb128 0x49
 1093 0082 13       		.uleb128 0x13
 1094 0083 02       		.uleb128 0x2
 1095 0084 17       		.uleb128 0x17
 1096 0085 00       		.byte	0
 1097 0086 00       		.byte	0
 1098 0087 0A       		.uleb128 0xa
 1099 0088 05       		.uleb128 0x5
 1100 0089 00       		.byte	0
 1101 008a 03       		.uleb128 0x3
 1102 008b 0E       		.uleb128 0xe
 1103 008c 3A       		.uleb128 0x3a
 1104 008d 0B       		.uleb128 0xb
 1105 008e 3B       		.uleb128 0x3b
 1106 008f 0B       		.uleb128 0xb
 1107 0090 49       		.uleb128 0x49
 1108 0091 13       		.uleb128 0x13
 1109 0092 02       		.uleb128 0x2
 1110 0093 18       		.uleb128 0x18
 1111 0094 00       		.byte	0
 1112 0095 00       		.byte	0
 1113 0096 0B       		.uleb128 0xb
 1114 0097 2E       		.uleb128 0x2e
 1115 0098 00       		.byte	0
 1116 0099 3F       		.uleb128 0x3f
 1117 009a 19       		.uleb128 0x19
 1118 009b 03       		.uleb128 0x3
 1119 009c 0E       		.uleb128 0xe
 1120 009d 3A       		.uleb128 0x3a
 1121 009e 0B       		.uleb128 0xb
 1122 009f 3B       		.uleb128 0x3b
 1123 00a0 05       		.uleb128 0x5
 1124 00a1 27       		.uleb128 0x27
 1125 00a2 19       		.uleb128 0x19
 1126 00a3 49       		.uleb128 0x49
 1127 00a4 13       		.uleb128 0x13
 1128 00a5 11       		.uleb128 0x11
 1129 00a6 01       		.uleb128 0x1
 1130 00a7 12       		.uleb128 0x12
 1131 00a8 06       		.uleb128 0x6
 1132 00a9 40       		.uleb128 0x40
 1133 00aa 18       		.uleb128 0x18
 1134 00ab 9742     		.uleb128 0x2117
 1135 00ad 19       		.uleb128 0x19
 1136 00ae 00       		.byte	0
 1137 00af 00       		.byte	0
 1138 00b0 0C       		.uleb128 0xc
 1139 00b1 2E       		.uleb128 0x2e
 1140 00b2 01       		.byte	0x1
 1141 00b3 3F       		.uleb128 0x3f
 1142 00b4 19       		.uleb128 0x19
 1143 00b5 03       		.uleb128 0x3
 1144 00b6 0E       		.uleb128 0xe
 1145 00b7 3A       		.uleb128 0x3a
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 31


 1146 00b8 0B       		.uleb128 0xb
 1147 00b9 3B       		.uleb128 0x3b
 1148 00ba 05       		.uleb128 0x5
 1149 00bb 27       		.uleb128 0x27
 1150 00bc 19       		.uleb128 0x19
 1151 00bd 11       		.uleb128 0x11
 1152 00be 01       		.uleb128 0x1
 1153 00bf 12       		.uleb128 0x12
 1154 00c0 06       		.uleb128 0x6
 1155 00c1 40       		.uleb128 0x40
 1156 00c2 18       		.uleb128 0x18
 1157 00c3 9742     		.uleb128 0x2117
 1158 00c5 19       		.uleb128 0x19
 1159 00c6 01       		.uleb128 0x1
 1160 00c7 13       		.uleb128 0x13
 1161 00c8 00       		.byte	0
 1162 00c9 00       		.byte	0
 1163 00ca 0D       		.uleb128 0xd
 1164 00cb 05       		.uleb128 0x5
 1165 00cc 00       		.byte	0
 1166 00cd 03       		.uleb128 0x3
 1167 00ce 0E       		.uleb128 0xe
 1168 00cf 3A       		.uleb128 0x3a
 1169 00d0 0B       		.uleb128 0xb
 1170 00d1 3B       		.uleb128 0x3b
 1171 00d2 05       		.uleb128 0x5
 1172 00d3 49       		.uleb128 0x49
 1173 00d4 13       		.uleb128 0x13
 1174 00d5 02       		.uleb128 0x2
 1175 00d6 17       		.uleb128 0x17
 1176 00d7 00       		.byte	0
 1177 00d8 00       		.byte	0
 1178 00d9 0E       		.uleb128 0xe
 1179 00da 05       		.uleb128 0x5
 1180 00db 00       		.byte	0
 1181 00dc 03       		.uleb128 0x3
 1182 00dd 0E       		.uleb128 0xe
 1183 00de 3A       		.uleb128 0x3a
 1184 00df 0B       		.uleb128 0xb
 1185 00e0 3B       		.uleb128 0x3b
 1186 00e1 0B       		.uleb128 0xb
 1187 00e2 49       		.uleb128 0x49
 1188 00e3 13       		.uleb128 0x13
 1189 00e4 02       		.uleb128 0x2
 1190 00e5 17       		.uleb128 0x17
 1191 00e6 00       		.byte	0
 1192 00e7 00       		.byte	0
 1193 00e8 0F       		.uleb128 0xf
 1194 00e9 34       		.uleb128 0x34
 1195 00ea 00       		.byte	0
 1196 00eb 03       		.uleb128 0x3
 1197 00ec 0E       		.uleb128 0xe
 1198 00ed 3A       		.uleb128 0x3a
 1199 00ee 0B       		.uleb128 0xb
 1200 00ef 3B       		.uleb128 0x3b
 1201 00f0 0B       		.uleb128 0xb
 1202 00f1 49       		.uleb128 0x49
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 32


 1203 00f2 13       		.uleb128 0x13
 1204 00f3 02       		.uleb128 0x2
 1205 00f4 18       		.uleb128 0x18
 1206 00f5 00       		.byte	0
 1207 00f6 00       		.byte	0
 1208 00f7 10       		.uleb128 0x10
 1209 00f8 898201   		.uleb128 0x4109
 1210 00fb 00       		.byte	0
 1211 00fc 11       		.uleb128 0x11
 1212 00fd 01       		.uleb128 0x1
 1213 00fe 31       		.uleb128 0x31
 1214 00ff 13       		.uleb128 0x13
 1215 0100 00       		.byte	0
 1216 0101 00       		.byte	0
 1217 0102 11       		.uleb128 0x11
 1218 0103 34       		.uleb128 0x34
 1219 0104 00       		.byte	0
 1220 0105 03       		.uleb128 0x3
 1221 0106 0E       		.uleb128 0xe
 1222 0107 3A       		.uleb128 0x3a
 1223 0108 0B       		.uleb128 0xb
 1224 0109 3B       		.uleb128 0x3b
 1225 010a 05       		.uleb128 0x5
 1226 010b 49       		.uleb128 0x49
 1227 010c 13       		.uleb128 0x13
 1228 010d 02       		.uleb128 0x2
 1229 010e 17       		.uleb128 0x17
 1230 010f 00       		.byte	0
 1231 0110 00       		.byte	0
 1232 0111 12       		.uleb128 0x12
 1233 0112 34       		.uleb128 0x34
 1234 0113 00       		.byte	0
 1235 0114 03       		.uleb128 0x3
 1236 0115 0E       		.uleb128 0xe
 1237 0116 3A       		.uleb128 0x3a
 1238 0117 0B       		.uleb128 0xb
 1239 0118 3B       		.uleb128 0x3b
 1240 0119 05       		.uleb128 0x5
 1241 011a 49       		.uleb128 0x49
 1242 011b 13       		.uleb128 0x13
 1243 011c 02       		.uleb128 0x2
 1244 011d 18       		.uleb128 0x18
 1245 011e 00       		.byte	0
 1246 011f 00       		.byte	0
 1247 0120 00       		.byte	0
 1248              		.section	.debug_loc,"",%progbits
 1249              	.Ldebug_loc0:
 1250              	.LLST0:
 1251 0000 2A000000 		.4byte	.LVL0
 1252 0004 5E000000 		.4byte	.LVL1
 1253 0008 0100     		.2byte	0x1
 1254 000a 52       		.byte	0x52
 1255 000b 00000000 		.4byte	0
 1256 000f 00000000 		.4byte	0
 1257              	.LLST1:
 1258 0013 00000000 		.4byte	.LVL3
 1259 0017 08000000 		.4byte	.LVL4
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 33


 1260 001b 0100     		.2byte	0x1
 1261 001d 50       		.byte	0x50
 1262 001e 08000000 		.4byte	.LVL4
 1263 0022 14000000 		.4byte	.LFE6
 1264 0026 0400     		.2byte	0x4
 1265 0028 F3       		.byte	0xf3
 1266 0029 01       		.uleb128 0x1
 1267 002a 50       		.byte	0x50
 1268 002b 9F       		.byte	0x9f
 1269 002c 00000000 		.4byte	0
 1270 0030 00000000 		.4byte	0
 1271              	.LLST2:
 1272 0034 00000000 		.4byte	.LVL5
 1273 0038 06000000 		.4byte	.LVL6
 1274 003c 0100     		.2byte	0x1
 1275 003e 50       		.byte	0x50
 1276 003f 06000000 		.4byte	.LVL6
 1277 0043 18000000 		.4byte	.LFE7
 1278 0047 0400     		.2byte	0x4
 1279 0049 F3       		.byte	0xf3
 1280 004a 01       		.uleb128 0x1
 1281 004b 50       		.byte	0x50
 1282 004c 9F       		.byte	0x9f
 1283 004d 00000000 		.4byte	0
 1284 0051 00000000 		.4byte	0
 1285              	.LLST3:
 1286 0055 00000000 		.4byte	.LVL7
 1287 0059 09000000 		.4byte	.LVL8-1
 1288 005d 0100     		.2byte	0x1
 1289 005f 50       		.byte	0x50
 1290 0060 09000000 		.4byte	.LVL8-1
 1291 0064 DC000000 		.4byte	.LFE4
 1292 0068 0400     		.2byte	0x4
 1293 006a F3       		.byte	0xf3
 1294 006b 01       		.uleb128 0x1
 1295 006c 50       		.byte	0x50
 1296 006d 9F       		.byte	0x9f
 1297 006e 00000000 		.4byte	0
 1298 0072 00000000 		.4byte	0
 1299              	.LLST4:
 1300 0076 00000000 		.4byte	.LVL7
 1301 007a 09000000 		.4byte	.LVL8-1
 1302 007e 0100     		.2byte	0x1
 1303 0080 51       		.byte	0x51
 1304 0081 09000000 		.4byte	.LVL8-1
 1305 0085 DC000000 		.4byte	.LFE4
 1306 0089 0400     		.2byte	0x4
 1307 008b F3       		.byte	0xf3
 1308 008c 01       		.uleb128 0x1
 1309 008d 51       		.byte	0x51
 1310 008e 9F       		.byte	0x9f
 1311 008f 00000000 		.4byte	0
 1312 0093 00000000 		.4byte	0
 1313              	.LLST5:
 1314 0097 1E000000 		.4byte	.LVL11
 1315 009b 2C000000 		.4byte	.LVL12
 1316 009f 0100     		.2byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 34


 1317 00a1 52       		.byte	0x52
 1318 00a2 36000000 		.4byte	.LVL13
 1319 00a6 38000000 		.4byte	.LVL14
 1320 00aa 0100     		.2byte	0x1
 1321 00ac 52       		.byte	0x52
 1322 00ad 38000000 		.4byte	.LVL14
 1323 00b1 3A000000 		.4byte	.LVL15
 1324 00b5 0100     		.2byte	0x1
 1325 00b7 53       		.byte	0x53
 1326 00b8 46000000 		.4byte	.LVL16
 1327 00bc A4000000 		.4byte	.LVL18
 1328 00c0 0100     		.2byte	0x1
 1329 00c2 52       		.byte	0x52
 1330 00c3 A6000000 		.4byte	.LVL19
 1331 00c7 A8000000 		.4byte	.LVL20
 1332 00cb 0100     		.2byte	0x1
 1333 00cd 52       		.byte	0x52
 1334 00ce B8000000 		.4byte	.LVL21
 1335 00d2 C4000000 		.4byte	.LVL22
 1336 00d6 0100     		.2byte	0x1
 1337 00d8 52       		.byte	0x52
 1338 00d9 00000000 		.4byte	0
 1339 00dd 00000000 		.4byte	0
 1340              	.LLST6:
 1341 00e1 0C000000 		.4byte	.LVL9
 1342 00e5 50000000 		.4byte	.LVL17
 1343 00e9 0100     		.2byte	0x1
 1344 00eb 56       		.byte	0x56
 1345 00ec 00000000 		.4byte	0
 1346 00f0 00000000 		.4byte	0
 1347              	.LLST7:
 1348 00f4 00000000 		.4byte	.LVL23
 1349 00f8 07000000 		.4byte	.LVL24-1
 1350 00fc 0100     		.2byte	0x1
 1351 00fe 50       		.byte	0x50
 1352 00ff 07000000 		.4byte	.LVL24-1
 1353 0103 5C000000 		.4byte	.LFE9
 1354 0107 0400     		.2byte	0x4
 1355 0109 F3       		.byte	0xf3
 1356 010a 01       		.uleb128 0x1
 1357 010b 50       		.byte	0x50
 1358 010c 9F       		.byte	0x9f
 1359 010d 00000000 		.4byte	0
 1360 0111 00000000 		.4byte	0
 1361              	.LLST8:
 1362 0115 0A000000 		.4byte	.LVL25
 1363 0119 56000000 		.4byte	.LVL29
 1364 011d 0100     		.2byte	0x1
 1365 011f 55       		.byte	0x55
 1366 0120 00000000 		.4byte	0
 1367 0124 00000000 		.4byte	0
 1368              	.LLST9:
 1369 0128 00000000 		.4byte	.LVL30
 1370 012c 04000000 		.4byte	.LVL31
 1371 0130 0100     		.2byte	0x1
 1372 0132 50       		.byte	0x50
 1373 0133 04000000 		.4byte	.LVL31
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 35


 1374 0137 10000000 		.4byte	.LFE11
 1375 013b 0400     		.2byte	0x4
 1376 013d F3       		.byte	0xf3
 1377 013e 01       		.uleb128 0x1
 1378 013f 50       		.byte	0x50
 1379 0140 9F       		.byte	0x9f
 1380 0141 00000000 		.4byte	0
 1381 0145 00000000 		.4byte	0
 1382              		.section	.debug_aranges,"",%progbits
 1383 0000 7C000000 		.4byte	0x7c
 1384 0004 0200     		.2byte	0x2
 1385 0006 00000000 		.4byte	.Ldebug_info0
 1386 000a 04       		.byte	0x4
 1387 000b 00       		.byte	0
 1388 000c 0000     		.2byte	0
 1389 000e 0000     		.2byte	0
 1390 0010 00000000 		.4byte	.LFB0
 1391 0014 1C000000 		.4byte	.LFE0-.LFB0
 1392 0018 00000000 		.4byte	.LFB1
 1393 001c 1C000000 		.4byte	.LFE1-.LFB1
 1394 0020 00000000 		.4byte	.LFB2
 1395 0024 70000000 		.4byte	.LFE2-.LFB2
 1396 0028 00000000 		.4byte	.LFB3
 1397 002c 20000000 		.4byte	.LFE3-.LFB3
 1398 0030 00000000 		.4byte	.LFB5
 1399 0034 0C000000 		.4byte	.LFE5-.LFB5
 1400 0038 00000000 		.4byte	.LFB6
 1401 003c 14000000 		.4byte	.LFE6-.LFB6
 1402 0040 00000000 		.4byte	.LFB7
 1403 0044 18000000 		.4byte	.LFE7-.LFB7
 1404 0048 00000000 		.4byte	.LFB8
 1405 004c 10000000 		.4byte	.LFE8-.LFB8
 1406 0050 00000000 		.4byte	.LFB10
 1407 0054 10000000 		.4byte	.LFE10-.LFB10
 1408 0058 00000000 		.4byte	.LFB4
 1409 005c DC000000 		.4byte	.LFE4-.LFB4
 1410 0060 00000000 		.4byte	.LFB9
 1411 0064 5C000000 		.4byte	.LFE9-.LFB9
 1412 0068 00000000 		.4byte	.LFB11
 1413 006c 10000000 		.4byte	.LFE11-.LFB11
 1414 0070 00000000 		.4byte	.LFB12
 1415 0074 10000000 		.4byte	.LFE12-.LFB12
 1416 0078 00000000 		.4byte	0
 1417 007c 00000000 		.4byte	0
 1418              		.section	.debug_ranges,"",%progbits
 1419              	.Ldebug_ranges0:
 1420 0000 00000000 		.4byte	.LFB0
 1421 0004 1C000000 		.4byte	.LFE0
 1422 0008 00000000 		.4byte	.LFB1
 1423 000c 1C000000 		.4byte	.LFE1
 1424 0010 00000000 		.4byte	.LFB2
 1425 0014 70000000 		.4byte	.LFE2
 1426 0018 00000000 		.4byte	.LFB3
 1427 001c 20000000 		.4byte	.LFE3
 1428 0020 00000000 		.4byte	.LFB5
 1429 0024 0C000000 		.4byte	.LFE5
 1430 0028 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 36


 1431 002c 14000000 		.4byte	.LFE6
 1432 0030 00000000 		.4byte	.LFB7
 1433 0034 18000000 		.4byte	.LFE7
 1434 0038 00000000 		.4byte	.LFB8
 1435 003c 10000000 		.4byte	.LFE8
 1436 0040 00000000 		.4byte	.LFB10
 1437 0044 10000000 		.4byte	.LFE10
 1438 0048 00000000 		.4byte	.LFB4
 1439 004c DC000000 		.4byte	.LFE4
 1440 0050 00000000 		.4byte	.LFB9
 1441 0054 5C000000 		.4byte	.LFE9
 1442 0058 00000000 		.4byte	.LFB11
 1443 005c 10000000 		.4byte	.LFE11
 1444 0060 00000000 		.4byte	.LFB12
 1445 0064 10000000 		.4byte	.LFE12
 1446 0068 00000000 		.4byte	0
 1447 006c 00000000 		.4byte	0
 1448              		.section	.debug_line,"",%progbits
 1449              	.Ldebug_line0:
 1450 0000 B2010000 		.section	.debug_str,"MS",%progbits,1
 1450      02006100 
 1450      00000201 
 1450      FB0E0D00 
 1450      01010101 
 1451              	.LASF11:
 1452 0000 666C6F61 		.ascii	"float\000"
 1452      7400
 1453              	.LASF35:
 1454 0006 63757272 		.ascii	"currDiv\000"
 1454      44697600 
 1455              	.LASF15:
 1456 000e 72656731 		.ascii	"reg16\000"
 1456      3600
 1457              	.LASF2:
 1458 0014 73686F72 		.ascii	"short int\000"
 1458      7420696E 
 1458      7400
 1459              	.LASF19:
 1460 001e 56495F4C 		.ascii	"VI_LO_clock_StandbyPower\000"
 1460      4F5F636C 
 1460      6F636B5F 
 1460      5374616E 
 1460      64627950 
 1461              	.LASF10:
 1462 0037 75696E74 		.ascii	"uint16\000"
 1462      313600
 1463              	.LASF29:
 1464 003e 72657374 		.ascii	"restart\000"
 1464      61727400 
 1465              	.LASF36:
 1466 0046 6F6C6453 		.ascii	"oldSrc\000"
 1466      726300
 1467              	.LASF9:
 1468 004d 75696E74 		.ascii	"uint8\000"
 1468      3800
 1469              	.LASF28:
 1470 0053 636C6B44 		.ascii	"clkDivider\000"
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 37


 1470      69766964 
 1470      657200
 1471              	.LASF33:
 1472 005e 56495F4C 		.ascii	"VI_LO_clock_SetSourceRegister\000"
 1472      4F5F636C 
 1472      6F636B5F 
 1472      53657453 
 1472      6F757263 
 1473              	.LASF20:
 1474 007c 56495F4C 		.ascii	"VI_LO_clock_SetModeRegister\000"
 1474      4F5F636C 
 1474      6F636B5F 
 1474      5365744D 
 1474      6F646552 
 1475              	.LASF42:
 1476 0098 453A5C50 		.ascii	"E:\\PSoC_Creator\\CY8CKIT-059\\CY8CKIT-059_SDR_AM_R"
 1476      536F435F 
 1476      43726561 
 1476      746F725C 
 1476      43593843 
 1477 00c8 6164696F 		.ascii	"adio\\CY8CKIT-059_SDR_AM_Radio.cydsn\000"
 1477      5C435938 
 1477      434B4954 
 1477      2D303539 
 1477      5F534452 
 1478              	.LASF6:
 1479 00ec 6C6F6E67 		.ascii	"long long int\000"
 1479      206C6F6E 
 1479      6720696E 
 1479      7400
 1480              	.LASF4:
 1481 00fa 6C6F6E67 		.ascii	"long int\000"
 1481      20696E74 
 1481      00
 1482              	.LASF27:
 1483 0103 56495F4C 		.ascii	"VI_LO_clock_SetDividerRegister\000"
 1483      4F5F636C 
 1483      6F636B5F 
 1483      53657444 
 1483      69766964 
 1484              	.LASF21:
 1485 0122 73746174 		.ascii	"state\000"
 1485      6500
 1486              	.LASF38:
 1487 0128 636C6B50 		.ascii	"clkPhase\000"
 1487      68617365 
 1487      00
 1488              	.LASF1:
 1489 0131 756E7369 		.ascii	"unsigned char\000"
 1489      676E6564 
 1489      20636861 
 1489      7200
 1490              	.LASF22:
 1491 013f 6D6F6465 		.ascii	"modeBitMask\000"
 1491      4269744D 
 1491      61736B00 
 1492              	.LASF18:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 38


 1493 014b 56495F4C 		.ascii	"VI_LO_clock_StopBlock\000"
 1493      4F5F636C 
 1493      6F636B5F 
 1493      53746F70 
 1493      426C6F63 
 1494              	.LASF0:
 1495 0161 7369676E 		.ascii	"signed char\000"
 1495      65642063 
 1495      68617200 
 1496              	.LASF16:
 1497 016d 56495F4C 		.ascii	"VI_LO_clock_Start\000"
 1497      4F5F636C 
 1497      6F636B5F 
 1497      53746172 
 1497      7400
 1498              	.LASF7:
 1499 017f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1499      206C6F6E 
 1499      6720756E 
 1499      7369676E 
 1499      65642069 
 1500              	.LASF8:
 1501 0196 756E7369 		.ascii	"unsigned int\000"
 1501      676E6564 
 1501      20696E74 
 1501      00
 1502              	.LASF3:
 1503 01a3 73686F72 		.ascii	"short unsigned int\000"
 1503      7420756E 
 1503      7369676E 
 1503      65642069 
 1503      6E7400
 1504              	.LASF13:
 1505 01b6 63686172 		.ascii	"char\000"
 1505      00
 1506              	.LASF40:
 1507 01bb 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1507      4320342E 
 1507      392E3320 
 1507      32303135 
 1507      30333033 
 1508 01ee 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1508      20726576 
 1508      6973696F 
 1508      6E203232 
 1508      31323230 
 1509 0221 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1509      66756E63 
 1509      74696F6E 
 1509      2D736563 
 1509      74696F6E 
 1510              	.LASF34:
 1511 0249 636C6B53 		.ascii	"clkSource\000"
 1511      6F757263 
 1511      6500
 1512              	.LASF32:
 1513 0253 63757272 		.ascii	"currSrc\000"
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 39


 1513      53726300 
 1514              	.LASF30:
 1515 025b 6F6C6444 		.ascii	"oldDivider\000"
 1515      69766964 
 1515      657200
 1516              	.LASF17:
 1517 0266 56495F4C 		.ascii	"VI_LO_clock_Stop\000"
 1517      4F5F636C 
 1517      6F636B5F 
 1517      53746F70 
 1517      00
 1518              	.LASF25:
 1519 0277 56495F4C 		.ascii	"VI_LO_clock_GetModeRegister\000"
 1519      4F5F636C 
 1519      6F636B5F 
 1519      4765744D 
 1519      6F646552 
 1520              	.LASF26:
 1521 0293 56495F4C 		.ascii	"VI_LO_clock_GetSourceRegister\000"
 1521      4F5F636C 
 1521      6F636B5F 
 1521      47657453 
 1521      6F757263 
 1522              	.LASF14:
 1523 02b1 72656738 		.ascii	"reg8\000"
 1523      00
 1524              	.LASF5:
 1525 02b6 6C6F6E67 		.ascii	"long unsigned int\000"
 1525      20756E73 
 1525      69676E65 
 1525      6420696E 
 1525      7400
 1526              	.LASF12:
 1527 02c8 646F7562 		.ascii	"double\000"
 1527      6C6500
 1528              	.LASF41:
 1529 02cf 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\VI_LO_clock.c\000"
 1529      6E657261 
 1529      7465645F 
 1529      536F7572 
 1529      63655C50 
 1530              	.LASF31:
 1531 02f6 656E6162 		.ascii	"enabled\000"
 1531      6C656400 
 1532              	.LASF39:
 1533 02fe 56495F4C 		.ascii	"VI_LO_clock_GetPhaseRegister\000"
 1533      4F5F636C 
 1533      6F636B5F 
 1533      47657450 
 1533      68617365 
 1534              	.LASF37:
 1535 031b 56495F4C 		.ascii	"VI_LO_clock_SetPhaseRegister\000"
 1535      4F5F636C 
 1535      6F636B5F 
 1535      53657450 
 1535      68617365 
 1536              	.LASF23:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccc7SrUq.s 			page 40


 1537 0338 56495F4C 		.ascii	"VI_LO_clock_ClearModeRegister\000"
 1537      4F5F636C 
 1537      6F636B5F 
 1537      436C6561 
 1537      724D6F64 
 1538              	.LASF24:
 1539 0356 56495F4C 		.ascii	"VI_LO_clock_GetDividerRegister\000"
 1539      4F5F636C 
 1539      6F636B5F 
 1539      47657444 
 1539      69766964 
 1540              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
