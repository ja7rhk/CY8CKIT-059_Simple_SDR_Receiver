ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"queue.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.prvIsQueueFull,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	prvIsQueueFull, %function
  23              	prvIsQueueFull:
  24              	.LFB85:
  25              		.file 1 "..\\FreeRTOS\\queue.c"
   1:..\FreeRTOS/queue.c **** /*
   2:..\FreeRTOS/queue.c ****     FreeRTOS V8.2.3 - Copyright (C) 2015 Real Time Engineers Ltd.
   3:..\FreeRTOS/queue.c ****     All rights reserved
   4:..\FreeRTOS/queue.c **** 
   5:..\FreeRTOS/queue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:..\FreeRTOS/queue.c **** 
   7:..\FreeRTOS/queue.c ****     This file is part of the FreeRTOS distribution.
   8:..\FreeRTOS/queue.c **** 
   9:..\FreeRTOS/queue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:..\FreeRTOS/queue.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:..\FreeRTOS/queue.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:..\FreeRTOS/queue.c **** 
  13:..\FreeRTOS/queue.c ****     ***************************************************************************
  14:..\FreeRTOS/queue.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:..\FreeRTOS/queue.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:..\FreeRTOS/queue.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:..\FreeRTOS/queue.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:..\FreeRTOS/queue.c ****     ***************************************************************************
  19:..\FreeRTOS/queue.c **** 
  20:..\FreeRTOS/queue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:..\FreeRTOS/queue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:..\FreeRTOS/queue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:..\FreeRTOS/queue.c ****     link: http://www.freertos.org/a00114.html
  24:..\FreeRTOS/queue.c **** 
  25:..\FreeRTOS/queue.c ****     ***************************************************************************
  26:..\FreeRTOS/queue.c ****      *                                                                       *
  27:..\FreeRTOS/queue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:..\FreeRTOS/queue.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:..\FreeRTOS/queue.c ****      *    platform software that is more than just the market leader, it     *
  30:..\FreeRTOS/queue.c ****      *    is the industry's de facto standard.                               *
  31:..\FreeRTOS/queue.c ****      *                                                                       *
  32:..\FreeRTOS/queue.c ****      *    Help yourself get started quickly while simultaneously helping     *
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 2


  33:..\FreeRTOS/queue.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:..\FreeRTOS/queue.c ****      *    tutorial book, reference manual, or both:                          *
  35:..\FreeRTOS/queue.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:..\FreeRTOS/queue.c ****      *                                                                       *
  37:..\FreeRTOS/queue.c ****     ***************************************************************************
  38:..\FreeRTOS/queue.c **** 
  39:..\FreeRTOS/queue.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:..\FreeRTOS/queue.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:..\FreeRTOS/queue.c ****     defined configASSERT()?
  42:..\FreeRTOS/queue.c **** 
  43:..\FreeRTOS/queue.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:..\FreeRTOS/queue.c ****     embedded software for free we request you assist our global community by
  45:..\FreeRTOS/queue.c ****     participating in the support forum.
  46:..\FreeRTOS/queue.c **** 
  47:..\FreeRTOS/queue.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:..\FreeRTOS/queue.c ****     be as productive as possible as early as possible.  Now you can receive
  49:..\FreeRTOS/queue.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:..\FreeRTOS/queue.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:..\FreeRTOS/queue.c **** 
  52:..\FreeRTOS/queue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:..\FreeRTOS/queue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:..\FreeRTOS/queue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:..\FreeRTOS/queue.c **** 
  56:..\FreeRTOS/queue.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:..\FreeRTOS/queue.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:..\FreeRTOS/queue.c **** 
  59:..\FreeRTOS/queue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:..\FreeRTOS/queue.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:..\FreeRTOS/queue.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:..\FreeRTOS/queue.c **** 
  63:..\FreeRTOS/queue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:..\FreeRTOS/queue.c ****     engineered and independently SIL3 certified version for use in safety and
  65:..\FreeRTOS/queue.c ****     mission critical applications that require provable dependability.
  66:..\FreeRTOS/queue.c **** 
  67:..\FreeRTOS/queue.c ****     1 tab == 4 spaces!
  68:..\FreeRTOS/queue.c **** */
  69:..\FreeRTOS/queue.c **** 
  70:..\FreeRTOS/queue.c **** #include <stdlib.h>
  71:..\FreeRTOS/queue.c **** #include <string.h>
  72:..\FreeRTOS/queue.c **** 
  73:..\FreeRTOS/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  74:..\FreeRTOS/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  75:..\FreeRTOS/queue.c **** task.h is included from an application file. */
  76:..\FreeRTOS/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:..\FreeRTOS/queue.c **** 
  78:..\FreeRTOS/queue.c **** #include "FreeRTOS.h"
  79:..\FreeRTOS/queue.c **** #include "task.h"
  80:..\FreeRTOS/queue.c **** #include "queue.h"
  81:..\FreeRTOS/queue.c **** 
  82:..\FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  83:..\FreeRTOS/queue.c **** 	#include "croutine.h"
  84:..\FreeRTOS/queue.c **** #endif
  85:..\FreeRTOS/queue.c **** 
  86:..\FreeRTOS/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  87:..\FreeRTOS/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  88:..\FreeRTOS/queue.c **** header files above, but not in this file, in order to generate the correct
  89:..\FreeRTOS/queue.c **** privileged Vs unprivileged linkage and placement. */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 3


  90:..\FreeRTOS/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  91:..\FreeRTOS/queue.c **** 
  92:..\FreeRTOS/queue.c **** 
  93:..\FreeRTOS/queue.c **** /* Constants used with the xRxLock and xTxLock structure members. */
  94:..\FreeRTOS/queue.c **** #define queueUNLOCKED					( ( BaseType_t ) -1 )
  95:..\FreeRTOS/queue.c **** #define queueLOCKED_UNMODIFIED			( ( BaseType_t ) 0 )
  96:..\FreeRTOS/queue.c **** 
  97:..\FreeRTOS/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  98:..\FreeRTOS/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  99:..\FreeRTOS/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
 100:..\FreeRTOS/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
 101:..\FreeRTOS/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
 102:..\FreeRTOS/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
 103:..\FreeRTOS/queue.c **** the code is maintained despite this dual use of two structure members.  An
 104:..\FreeRTOS/queue.c **** alternative implementation would be to use a union, but use of a union is
 105:..\FreeRTOS/queue.c **** against the coding standard (although an exception to the standard has been
 106:..\FreeRTOS/queue.c **** permitted where the dual use also significantly changes the type of the
 107:..\FreeRTOS/queue.c **** structure member). */
 108:..\FreeRTOS/queue.c **** #define pxMutexHolder					pcTail
 109:..\FreeRTOS/queue.c **** #define uxQueueType						pcHead
 110:..\FreeRTOS/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
 111:..\FreeRTOS/queue.c **** 
 112:..\FreeRTOS/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
 113:..\FreeRTOS/queue.c **** zero. */
 114:..\FreeRTOS/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
 115:..\FreeRTOS/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
 116:..\FreeRTOS/queue.c **** 
 117:..\FreeRTOS/queue.c **** #if( configUSE_PREEMPTION == 0 )
 118:..\FreeRTOS/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 119:..\FreeRTOS/queue.c **** 	performed just because a higher priority task has been woken. */
 120:..\FreeRTOS/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
 121:..\FreeRTOS/queue.c **** #else
 122:..\FreeRTOS/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 123:..\FreeRTOS/queue.c **** #endif
 124:..\FreeRTOS/queue.c **** 
 125:..\FreeRTOS/queue.c **** /*
 126:..\FreeRTOS/queue.c ****  * Definition of the queue used by the scheduler.
 127:..\FreeRTOS/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
 128:..\FreeRTOS/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
 129:..\FreeRTOS/queue.c ****  */
 130:..\FreeRTOS/queue.c **** typedef struct QueueDefinition
 131:..\FreeRTOS/queue.c **** {
 132:..\FreeRTOS/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 133:..\FreeRTOS/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
 134:..\FreeRTOS/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 135:..\FreeRTOS/queue.c **** 
 136:..\FreeRTOS/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
 137:..\FreeRTOS/queue.c **** 	{
 138:..\FreeRTOS/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
 139:..\FreeRTOS/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
 140:..\FreeRTOS/queue.c **** 	} u;
 141:..\FreeRTOS/queue.c **** 
 142:..\FreeRTOS/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 143:..\FreeRTOS/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 144:..\FreeRTOS/queue.c **** 
 145:..\FreeRTOS/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 146:..\FreeRTOS/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 4


 147:..\FreeRTOS/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 148:..\FreeRTOS/queue.c **** 
 149:..\FreeRTOS/queue.c **** 	volatile BaseType_t xRxLock;	/*< Stores the number of items received from the queue (removed from 
 150:..\FreeRTOS/queue.c **** 	volatile BaseType_t xTxLock;	/*< Stores the number of items transmitted to the queue (added to the
 151:..\FreeRTOS/queue.c **** 
 152:..\FreeRTOS/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 153:..\FreeRTOS/queue.c **** 		UBaseType_t uxQueueNumber;
 154:..\FreeRTOS/queue.c **** 		uint8_t ucQueueType;
 155:..\FreeRTOS/queue.c **** 	#endif
 156:..\FreeRTOS/queue.c **** 
 157:..\FreeRTOS/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 158:..\FreeRTOS/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 159:..\FreeRTOS/queue.c **** 	#endif
 160:..\FreeRTOS/queue.c **** 
 161:..\FreeRTOS/queue.c **** } xQUEUE;
 162:..\FreeRTOS/queue.c **** 
 163:..\FreeRTOS/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 164:..\FreeRTOS/queue.c **** name below to enable the use of older kernel aware debuggers. */
 165:..\FreeRTOS/queue.c **** typedef xQUEUE Queue_t;
 166:..\FreeRTOS/queue.c **** 
 167:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 168:..\FreeRTOS/queue.c **** 
 169:..\FreeRTOS/queue.c **** /*
 170:..\FreeRTOS/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 171:..\FreeRTOS/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 172:..\FreeRTOS/queue.c ****  */
 173:..\FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 174:..\FreeRTOS/queue.c **** 
 175:..\FreeRTOS/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 176:..\FreeRTOS/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 177:..\FreeRTOS/queue.c **** 	more user friendly. */
 178:..\FreeRTOS/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 179:..\FreeRTOS/queue.c **** 	{
 180:..\FreeRTOS/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 181:..\FreeRTOS/queue.c **** 		QueueHandle_t xHandle;
 182:..\FreeRTOS/queue.c **** 	} xQueueRegistryItem;
 183:..\FreeRTOS/queue.c **** 
 184:..\FreeRTOS/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 185:..\FreeRTOS/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 186:..\FreeRTOS/queue.c **** 	debuggers. */
 187:..\FreeRTOS/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 188:..\FreeRTOS/queue.c **** 
 189:..\FreeRTOS/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 190:..\FreeRTOS/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 191:..\FreeRTOS/queue.c **** 	array position being vacant. */
 192:..\FreeRTOS/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 193:..\FreeRTOS/queue.c **** 
 194:..\FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 195:..\FreeRTOS/queue.c **** 
 196:..\FreeRTOS/queue.c **** /*
 197:..\FreeRTOS/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 198:..\FreeRTOS/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 199:..\FreeRTOS/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 200:..\FreeRTOS/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 201:..\FreeRTOS/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 202:..\FreeRTOS/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 203:..\FreeRTOS/queue.c ****  */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 5


 204:..\FreeRTOS/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 205:..\FreeRTOS/queue.c **** 
 206:..\FreeRTOS/queue.c **** /*
 207:..\FreeRTOS/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 208:..\FreeRTOS/queue.c ****  *
 209:..\FreeRTOS/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 210:..\FreeRTOS/queue.c ****  */
 211:..\FreeRTOS/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 212:..\FreeRTOS/queue.c **** 
 213:..\FreeRTOS/queue.c **** /*
 214:..\FreeRTOS/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 215:..\FreeRTOS/queue.c ****  *
 216:..\FreeRTOS/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 217:..\FreeRTOS/queue.c ****  */
 218:..\FreeRTOS/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 219:..\FreeRTOS/queue.c **** 
 220:..\FreeRTOS/queue.c **** /*
 221:..\FreeRTOS/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 222:..\FreeRTOS/queue.c ****  * back of the queue.
 223:..\FreeRTOS/queue.c ****  */
 224:..\FreeRTOS/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 225:..\FreeRTOS/queue.c **** 
 226:..\FreeRTOS/queue.c **** /*
 227:..\FreeRTOS/queue.c ****  * Copies an item out of a queue.
 228:..\FreeRTOS/queue.c ****  */
 229:..\FreeRTOS/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 230:..\FreeRTOS/queue.c **** 
 231:..\FreeRTOS/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 232:..\FreeRTOS/queue.c **** 	/*
 233:..\FreeRTOS/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 234:..\FreeRTOS/queue.c **** 	 * the queue set that the queue contains data.
 235:..\FreeRTOS/queue.c **** 	 */
 236:..\FreeRTOS/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 237:..\FreeRTOS/queue.c **** #endif
 238:..\FreeRTOS/queue.c **** 
 239:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 240:..\FreeRTOS/queue.c **** 
 241:..\FreeRTOS/queue.c **** /*
 242:..\FreeRTOS/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 243:..\FreeRTOS/queue.c ****  * accessing the queue event lists.
 244:..\FreeRTOS/queue.c ****  */
 245:..\FreeRTOS/queue.c **** #define prvLockQueue( pxQueue )								\
 246:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();									\
 247:..\FreeRTOS/queue.c **** 	{														\
 248:..\FreeRTOS/queue.c **** 		if( ( pxQueue )->xRxLock == queueUNLOCKED )			\
 249:..\FreeRTOS/queue.c **** 		{													\
 250:..\FreeRTOS/queue.c **** 			( pxQueue )->xRxLock = queueLOCKED_UNMODIFIED;	\
 251:..\FreeRTOS/queue.c **** 		}													\
 252:..\FreeRTOS/queue.c **** 		if( ( pxQueue )->xTxLock == queueUNLOCKED )			\
 253:..\FreeRTOS/queue.c **** 		{													\
 254:..\FreeRTOS/queue.c **** 			( pxQueue )->xTxLock = queueLOCKED_UNMODIFIED;	\
 255:..\FreeRTOS/queue.c **** 		}													\
 256:..\FreeRTOS/queue.c **** 	}														\
 257:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL()
 258:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 259:..\FreeRTOS/queue.c **** 
 260:..\FreeRTOS/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 6


 261:..\FreeRTOS/queue.c **** {
 262:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 263:..\FreeRTOS/queue.c **** 
 264:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 265:..\FreeRTOS/queue.c **** 
 266:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 267:..\FreeRTOS/queue.c **** 	{
 268:..\FreeRTOS/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 269:..\FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 270:..\FreeRTOS/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 271:..\FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 272:..\FreeRTOS/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 273:..\FreeRTOS/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 274:..\FreeRTOS/queue.c **** 
 275:..\FreeRTOS/queue.c **** 		if( xNewQueue == pdFALSE )
 276:..\FreeRTOS/queue.c **** 		{
 277:..\FreeRTOS/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 278:..\FreeRTOS/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 279:..\FreeRTOS/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 280:..\FreeRTOS/queue.c **** 			the queue, then one should be unblocked as after this function exits
 281:..\FreeRTOS/queue.c **** 			it will be possible to write to it. */
 282:..\FreeRTOS/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 283:..\FreeRTOS/queue.c **** 			{
 284:..\FreeRTOS/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 285:..\FreeRTOS/queue.c **** 				{
 286:..\FreeRTOS/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 287:..\FreeRTOS/queue.c **** 				}
 288:..\FreeRTOS/queue.c **** 				else
 289:..\FreeRTOS/queue.c **** 				{
 290:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 291:..\FreeRTOS/queue.c **** 				}
 292:..\FreeRTOS/queue.c **** 			}
 293:..\FreeRTOS/queue.c **** 			else
 294:..\FreeRTOS/queue.c **** 			{
 295:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 296:..\FreeRTOS/queue.c **** 			}
 297:..\FreeRTOS/queue.c **** 		}
 298:..\FreeRTOS/queue.c **** 		else
 299:..\FreeRTOS/queue.c **** 		{
 300:..\FreeRTOS/queue.c **** 			/* Ensure the event queues start in the correct state. */
 301:..\FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 302:..\FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 303:..\FreeRTOS/queue.c **** 		}
 304:..\FreeRTOS/queue.c **** 	}
 305:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 306:..\FreeRTOS/queue.c **** 
 307:..\FreeRTOS/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 308:..\FreeRTOS/queue.c **** 	versions. */
 309:..\FreeRTOS/queue.c **** 	return pdPASS;
 310:..\FreeRTOS/queue.c **** }
 311:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 312:..\FreeRTOS/queue.c **** 
 313:..\FreeRTOS/queue.c **** QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, c
 314:..\FreeRTOS/queue.c **** {
 315:..\FreeRTOS/queue.c **** Queue_t *pxNewQueue;
 316:..\FreeRTOS/queue.c **** size_t xQueueSizeInBytes;
 317:..\FreeRTOS/queue.c **** QueueHandle_t xReturn = NULL;
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 7


 318:..\FreeRTOS/queue.c **** 
 319:..\FreeRTOS/queue.c **** 	/* Remove compiler warnings about unused parameters should
 320:..\FreeRTOS/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 321:..\FreeRTOS/queue.c **** 	( void ) ucQueueType;
 322:..\FreeRTOS/queue.c **** 
 323:..\FreeRTOS/queue.c **** 	configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 324:..\FreeRTOS/queue.c **** 
 325:..\FreeRTOS/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 326:..\FreeRTOS/queue.c **** 	{
 327:..\FreeRTOS/queue.c **** 		/* There is not going to be a queue storage area. */
 328:..\FreeRTOS/queue.c **** 		xQueueSizeInBytes = ( size_t ) 0;
 329:..\FreeRTOS/queue.c **** 	}
 330:..\FreeRTOS/queue.c **** 	else
 331:..\FreeRTOS/queue.c **** 	{
 332:..\FreeRTOS/queue.c **** 		/* The queue is one byte longer than asked for to make wrap checking
 333:..\FreeRTOS/queue.c **** 		easier/faster. */
 334:..\FreeRTOS/queue.c **** 		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1; /*lint !e961 MISRA 
 335:..\FreeRTOS/queue.c **** 	}
 336:..\FreeRTOS/queue.c **** 
 337:..\FreeRTOS/queue.c **** 	/* Allocate the new queue structure and storage area. */
 338:..\FreeRTOS/queue.c **** 	pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 339:..\FreeRTOS/queue.c **** 
 340:..\FreeRTOS/queue.c **** 	if( pxNewQueue != NULL )
 341:..\FreeRTOS/queue.c **** 	{
 342:..\FreeRTOS/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 343:..\FreeRTOS/queue.c **** 		{
 344:..\FreeRTOS/queue.c **** 			/* No RAM was allocated for the queue storage area, but PC head
 345:..\FreeRTOS/queue.c **** 			cannot be set to NULL because NULL is used as a key to say the queue
 346:..\FreeRTOS/queue.c **** 			is used as a mutex.  Therefore just set pcHead to point to the queue
 347:..\FreeRTOS/queue.c **** 			as a benign value that is known to be within the memory map. */
 348:..\FreeRTOS/queue.c **** 			pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 349:..\FreeRTOS/queue.c **** 		}
 350:..\FreeRTOS/queue.c **** 		else
 351:..\FreeRTOS/queue.c **** 		{
 352:..\FreeRTOS/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 353:..\FreeRTOS/queue.c **** 			storage area. */
 354:..\FreeRTOS/queue.c **** 			pxNewQueue->pcHead = ( ( int8_t * ) pxNewQueue ) + sizeof( Queue_t );
 355:..\FreeRTOS/queue.c **** 		}
 356:..\FreeRTOS/queue.c **** 
 357:..\FreeRTOS/queue.c **** 		/* Initialise the queue members as described above where the queue type
 358:..\FreeRTOS/queue.c **** 		is defined. */
 359:..\FreeRTOS/queue.c **** 		pxNewQueue->uxLength = uxQueueLength;
 360:..\FreeRTOS/queue.c **** 		pxNewQueue->uxItemSize = uxItemSize;
 361:..\FreeRTOS/queue.c **** 		( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 362:..\FreeRTOS/queue.c **** 
 363:..\FreeRTOS/queue.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
 364:..\FreeRTOS/queue.c **** 		{
 365:..\FreeRTOS/queue.c **** 			pxNewQueue->ucQueueType = ucQueueType;
 366:..\FreeRTOS/queue.c **** 		}
 367:..\FreeRTOS/queue.c **** 		#endif /* configUSE_TRACE_FACILITY */
 368:..\FreeRTOS/queue.c **** 
 369:..\FreeRTOS/queue.c **** 		#if( configUSE_QUEUE_SETS == 1 )
 370:..\FreeRTOS/queue.c **** 		{
 371:..\FreeRTOS/queue.c **** 			pxNewQueue->pxQueueSetContainer = NULL;
 372:..\FreeRTOS/queue.c **** 		}
 373:..\FreeRTOS/queue.c **** 		#endif /* configUSE_QUEUE_SETS */
 374:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 8


 375:..\FreeRTOS/queue.c **** 		traceQUEUE_CREATE( pxNewQueue );
 376:..\FreeRTOS/queue.c **** 		xReturn = pxNewQueue;
 377:..\FreeRTOS/queue.c **** 	}
 378:..\FreeRTOS/queue.c **** 	else
 379:..\FreeRTOS/queue.c **** 	{
 380:..\FreeRTOS/queue.c **** 		mtCOVERAGE_TEST_MARKER();
 381:..\FreeRTOS/queue.c **** 	}
 382:..\FreeRTOS/queue.c **** 
 383:..\FreeRTOS/queue.c **** 	configASSERT( xReturn );
 384:..\FreeRTOS/queue.c **** 
 385:..\FreeRTOS/queue.c **** 	return xReturn;
 386:..\FreeRTOS/queue.c **** }
 387:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 388:..\FreeRTOS/queue.c **** 
 389:..\FreeRTOS/queue.c **** #if ( configUSE_MUTEXES == 1 )
 390:..\FreeRTOS/queue.c **** 
 391:..\FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 392:..\FreeRTOS/queue.c **** 	{
 393:..\FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 394:..\FreeRTOS/queue.c **** 
 395:..\FreeRTOS/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 396:..\FreeRTOS/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 397:..\FreeRTOS/queue.c **** 		( void ) ucQueueType;
 398:..\FreeRTOS/queue.c **** 
 399:..\FreeRTOS/queue.c **** 		/* Allocate the new queue structure. */
 400:..\FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) );
 401:..\FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 402:..\FreeRTOS/queue.c **** 		{
 403:..\FreeRTOS/queue.c **** 			/* Information required for priority inheritance. */
 404:..\FreeRTOS/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 405:..\FreeRTOS/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 406:..\FreeRTOS/queue.c **** 
 407:..\FreeRTOS/queue.c **** 			/* Queues used as a mutex no data is actually copied into or out
 408:..\FreeRTOS/queue.c **** 			of the queue. */
 409:..\FreeRTOS/queue.c **** 			pxNewQueue->pcWriteTo = NULL;
 410:..\FreeRTOS/queue.c **** 			pxNewQueue->u.pcReadFrom = NULL;
 411:..\FreeRTOS/queue.c **** 
 412:..\FreeRTOS/queue.c **** 			/* Each mutex has a length of 1 (like a binary semaphore) and
 413:..\FreeRTOS/queue.c **** 			an item size of 0 as nothing is actually copied into or out
 414:..\FreeRTOS/queue.c **** 			of the mutex. */
 415:..\FreeRTOS/queue.c **** 			pxNewQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 416:..\FreeRTOS/queue.c **** 			pxNewQueue->uxLength = ( UBaseType_t ) 1U;
 417:..\FreeRTOS/queue.c **** 			pxNewQueue->uxItemSize = ( UBaseType_t ) 0U;
 418:..\FreeRTOS/queue.c **** 			pxNewQueue->xRxLock = queueUNLOCKED;
 419:..\FreeRTOS/queue.c **** 			pxNewQueue->xTxLock = queueUNLOCKED;
 420:..\FreeRTOS/queue.c **** 
 421:..\FreeRTOS/queue.c **** 			#if ( configUSE_TRACE_FACILITY == 1 )
 422:..\FreeRTOS/queue.c **** 			{
 423:..\FreeRTOS/queue.c **** 				pxNewQueue->ucQueueType = ucQueueType;
 424:..\FreeRTOS/queue.c **** 			}
 425:..\FreeRTOS/queue.c **** 			#endif
 426:..\FreeRTOS/queue.c **** 
 427:..\FreeRTOS/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
 428:..\FreeRTOS/queue.c **** 			{
 429:..\FreeRTOS/queue.c **** 				pxNewQueue->pxQueueSetContainer = NULL;
 430:..\FreeRTOS/queue.c **** 			}
 431:..\FreeRTOS/queue.c **** 			#endif
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 9


 432:..\FreeRTOS/queue.c **** 
 433:..\FreeRTOS/queue.c **** 			/* Ensure the event queues start with the correct state. */
 434:..\FreeRTOS/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToSend ) );
 435:..\FreeRTOS/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) );
 436:..\FreeRTOS/queue.c **** 
 437:..\FreeRTOS/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 438:..\FreeRTOS/queue.c **** 
 439:..\FreeRTOS/queue.c **** 			/* Start with the semaphore in the expected state. */
 440:..\FreeRTOS/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 441:..\FreeRTOS/queue.c **** 		}
 442:..\FreeRTOS/queue.c **** 		else
 443:..\FreeRTOS/queue.c **** 		{
 444:..\FreeRTOS/queue.c **** 			traceCREATE_MUTEX_FAILED();
 445:..\FreeRTOS/queue.c **** 		}
 446:..\FreeRTOS/queue.c **** 
 447:..\FreeRTOS/queue.c **** 		return pxNewQueue;
 448:..\FreeRTOS/queue.c **** 	}
 449:..\FreeRTOS/queue.c **** 
 450:..\FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
 451:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 452:..\FreeRTOS/queue.c **** 
 453:..\FreeRTOS/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 454:..\FreeRTOS/queue.c **** 
 455:..\FreeRTOS/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 456:..\FreeRTOS/queue.c **** 	{
 457:..\FreeRTOS/queue.c **** 	void *pxReturn;
 458:..\FreeRTOS/queue.c **** 
 459:..\FreeRTOS/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 460:..\FreeRTOS/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 461:..\FreeRTOS/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 462:..\FreeRTOS/queue.c **** 		identity of the mutex holder, as the holder may change between the
 463:..\FreeRTOS/queue.c **** 		following critical section exiting and the function returning. */
 464:..\FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 465:..\FreeRTOS/queue.c **** 		{
 466:..\FreeRTOS/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 467:..\FreeRTOS/queue.c **** 			{
 468:..\FreeRTOS/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 469:..\FreeRTOS/queue.c **** 			}
 470:..\FreeRTOS/queue.c **** 			else
 471:..\FreeRTOS/queue.c **** 			{
 472:..\FreeRTOS/queue.c **** 				pxReturn = NULL;
 473:..\FreeRTOS/queue.c **** 			}
 474:..\FreeRTOS/queue.c **** 		}
 475:..\FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 476:..\FreeRTOS/queue.c **** 
 477:..\FreeRTOS/queue.c **** 		return pxReturn;
 478:..\FreeRTOS/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 479:..\FreeRTOS/queue.c **** 
 480:..\FreeRTOS/queue.c **** #endif
 481:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 482:..\FreeRTOS/queue.c **** 
 483:..\FreeRTOS/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 484:..\FreeRTOS/queue.c **** 
 485:..\FreeRTOS/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 486:..\FreeRTOS/queue.c **** 	{
 487:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
 488:..\FreeRTOS/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 10


 489:..\FreeRTOS/queue.c **** 
 490:..\FreeRTOS/queue.c **** 		configASSERT( pxMutex );
 491:..\FreeRTOS/queue.c **** 
 492:..\FreeRTOS/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 493:..\FreeRTOS/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 494:..\FreeRTOS/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 495:..\FreeRTOS/queue.c **** 		this is the only condition we are interested in it does not matter if
 496:..\FreeRTOS/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 497:..\FreeRTOS/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 498:..\FreeRTOS/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 499:..\FreeRTOS/queue.c **** 		{
 500:..\FreeRTOS/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 501:..\FreeRTOS/queue.c **** 
 502:..\FreeRTOS/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 503:..\FreeRTOS/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 504:..\FreeRTOS/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 505:..\FreeRTOS/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 506:..\FreeRTOS/queue.c **** 			uxRecursiveCallCount member. */
 507:..\FreeRTOS/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 508:..\FreeRTOS/queue.c **** 
 509:..\FreeRTOS/queue.c **** 			/* Have we unwound the call count? */
 510:..\FreeRTOS/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 511:..\FreeRTOS/queue.c **** 			{
 512:..\FreeRTOS/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 513:..\FreeRTOS/queue.c **** 				task that might be waiting to access the mutex. */
 514:..\FreeRTOS/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 515:..\FreeRTOS/queue.c **** 			}
 516:..\FreeRTOS/queue.c **** 			else
 517:..\FreeRTOS/queue.c **** 			{
 518:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 519:..\FreeRTOS/queue.c **** 			}
 520:..\FreeRTOS/queue.c **** 
 521:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
 522:..\FreeRTOS/queue.c **** 		}
 523:..\FreeRTOS/queue.c **** 		else
 524:..\FreeRTOS/queue.c **** 		{
 525:..\FreeRTOS/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 526:..\FreeRTOS/queue.c **** 			holder. */
 527:..\FreeRTOS/queue.c **** 			xReturn = pdFAIL;
 528:..\FreeRTOS/queue.c **** 
 529:..\FreeRTOS/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 530:..\FreeRTOS/queue.c **** 		}
 531:..\FreeRTOS/queue.c **** 
 532:..\FreeRTOS/queue.c **** 		return xReturn;
 533:..\FreeRTOS/queue.c **** 	}
 534:..\FreeRTOS/queue.c **** 
 535:..\FreeRTOS/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 536:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 537:..\FreeRTOS/queue.c **** 
 538:..\FreeRTOS/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 539:..\FreeRTOS/queue.c **** 
 540:..\FreeRTOS/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 541:..\FreeRTOS/queue.c **** 	{
 542:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
 543:..\FreeRTOS/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 544:..\FreeRTOS/queue.c **** 
 545:..\FreeRTOS/queue.c **** 		configASSERT( pxMutex );
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 11


 546:..\FreeRTOS/queue.c **** 
 547:..\FreeRTOS/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 548:..\FreeRTOS/queue.c **** 		xQueueGiveMutexRecursive(). */
 549:..\FreeRTOS/queue.c **** 
 550:..\FreeRTOS/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 551:..\FreeRTOS/queue.c **** 
 552:..\FreeRTOS/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 553:..\FreeRTOS/queue.c **** 		{
 554:..\FreeRTOS/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 555:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
 556:..\FreeRTOS/queue.c **** 		}
 557:..\FreeRTOS/queue.c **** 		else
 558:..\FreeRTOS/queue.c **** 		{
 559:..\FreeRTOS/queue.c **** 			xReturn = xQueueGenericReceive( pxMutex, NULL, xTicksToWait, pdFALSE );
 560:..\FreeRTOS/queue.c **** 
 561:..\FreeRTOS/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 562:..\FreeRTOS/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 563:..\FreeRTOS/queue.c **** 			before reaching here. */
 564:..\FreeRTOS/queue.c **** 			if( xReturn == pdPASS )
 565:..\FreeRTOS/queue.c **** 			{
 566:..\FreeRTOS/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 567:..\FreeRTOS/queue.c **** 			}
 568:..\FreeRTOS/queue.c **** 			else
 569:..\FreeRTOS/queue.c **** 			{
 570:..\FreeRTOS/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 571:..\FreeRTOS/queue.c **** 			}
 572:..\FreeRTOS/queue.c **** 		}
 573:..\FreeRTOS/queue.c **** 
 574:..\FreeRTOS/queue.c **** 		return xReturn;
 575:..\FreeRTOS/queue.c **** 	}
 576:..\FreeRTOS/queue.c **** 
 577:..\FreeRTOS/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 578:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 579:..\FreeRTOS/queue.c **** 
 580:..\FreeRTOS/queue.c **** #if ( configUSE_COUNTING_SEMAPHORES == 1 )
 581:..\FreeRTOS/queue.c **** 
 582:..\FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 583:..\FreeRTOS/queue.c **** 	{
 584:..\FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 585:..\FreeRTOS/queue.c **** 
 586:..\FreeRTOS/queue.c **** 		configASSERT( uxMaxCount != 0 );
 587:..\FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 588:..\FreeRTOS/queue.c **** 
 589:..\FreeRTOS/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 590:..\FreeRTOS/queue.c **** 
 591:..\FreeRTOS/queue.c **** 		if( xHandle != NULL )
 592:..\FreeRTOS/queue.c **** 		{
 593:..\FreeRTOS/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 594:..\FreeRTOS/queue.c **** 
 595:..\FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 596:..\FreeRTOS/queue.c **** 		}
 597:..\FreeRTOS/queue.c **** 		else
 598:..\FreeRTOS/queue.c **** 		{
 599:..\FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 600:..\FreeRTOS/queue.c **** 		}
 601:..\FreeRTOS/queue.c **** 
 602:..\FreeRTOS/queue.c **** 		configASSERT( xHandle );
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 12


 603:..\FreeRTOS/queue.c **** 		return xHandle;
 604:..\FreeRTOS/queue.c **** 	}
 605:..\FreeRTOS/queue.c **** 
 606:..\FreeRTOS/queue.c **** #endif /* configUSE_COUNTING_SEMAPHORES */
 607:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 608:..\FreeRTOS/queue.c **** 
 609:..\FreeRTOS/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 610:..\FreeRTOS/queue.c **** {
 611:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 612:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 613:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 614:..\FreeRTOS/queue.c **** 
 615:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 616:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 617:..\FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 618:..\FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 619:..\FreeRTOS/queue.c **** 	{
 620:..\FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 621:..\FreeRTOS/queue.c **** 	}
 622:..\FreeRTOS/queue.c **** 	#endif
 623:..\FreeRTOS/queue.c **** 
 624:..\FreeRTOS/queue.c **** 
 625:..\FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 626:..\FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
 627:..\FreeRTOS/queue.c **** 	of execution time efficiency. */
 628:..\FreeRTOS/queue.c **** 	for( ;; )
 629:..\FreeRTOS/queue.c **** 	{
 630:..\FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 631:..\FreeRTOS/queue.c **** 		{
 632:..\FreeRTOS/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 633:..\FreeRTOS/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 634:..\FreeRTOS/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 635:..\FreeRTOS/queue.c **** 			queue is full. */
 636:..\FreeRTOS/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 637:..\FreeRTOS/queue.c **** 			{
 638:..\FreeRTOS/queue.c **** 				traceQUEUE_SEND( pxQueue );
 639:..\FreeRTOS/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 640:..\FreeRTOS/queue.c **** 
 641:..\FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 642:..\FreeRTOS/queue.c **** 				{
 643:..\FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 644:..\FreeRTOS/queue.c **** 					{
 645:..\FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
 646:..\FreeRTOS/queue.c **** 						{
 647:..\FreeRTOS/queue.c **** 							/* The queue is a member of a queue set, and posting
 648:..\FreeRTOS/queue.c **** 							to the queue set caused a higher priority task to
 649:..\FreeRTOS/queue.c **** 							unblock. A context switch is required. */
 650:..\FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 651:..\FreeRTOS/queue.c **** 						}
 652:..\FreeRTOS/queue.c **** 						else
 653:..\FreeRTOS/queue.c **** 						{
 654:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 655:..\FreeRTOS/queue.c **** 						}
 656:..\FreeRTOS/queue.c **** 					}
 657:..\FreeRTOS/queue.c **** 					else
 658:..\FreeRTOS/queue.c **** 					{
 659:..\FreeRTOS/queue.c **** 						/* If there was a task waiting for data to arrive on the
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 13


 660:..\FreeRTOS/queue.c **** 						queue then unblock it now. */
 661:..\FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 662:..\FreeRTOS/queue.c **** 						{
 663:..\FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 664:..\FreeRTOS/queue.c **** 							{
 665:..\FreeRTOS/queue.c **** 								/* The unblocked task has a priority higher than
 666:..\FreeRTOS/queue.c **** 								our own so yield immediately.  Yes it is ok to
 667:..\FreeRTOS/queue.c **** 								do this from within the critical section - the
 668:..\FreeRTOS/queue.c **** 								kernel takes care of that. */
 669:..\FreeRTOS/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 670:..\FreeRTOS/queue.c **** 							}
 671:..\FreeRTOS/queue.c **** 							else
 672:..\FreeRTOS/queue.c **** 							{
 673:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 674:..\FreeRTOS/queue.c **** 							}
 675:..\FreeRTOS/queue.c **** 						}
 676:..\FreeRTOS/queue.c **** 						else if( xYieldRequired != pdFALSE )
 677:..\FreeRTOS/queue.c **** 						{
 678:..\FreeRTOS/queue.c **** 							/* This path is a special case that will only get
 679:..\FreeRTOS/queue.c **** 							executed if the task was holding multiple mutexes
 680:..\FreeRTOS/queue.c **** 							and the mutexes were given back in an order that is
 681:..\FreeRTOS/queue.c **** 							different to that in which they were taken. */
 682:..\FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 683:..\FreeRTOS/queue.c **** 						}
 684:..\FreeRTOS/queue.c **** 						else
 685:..\FreeRTOS/queue.c **** 						{
 686:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 687:..\FreeRTOS/queue.c **** 						}
 688:..\FreeRTOS/queue.c **** 					}
 689:..\FreeRTOS/queue.c **** 				}
 690:..\FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 691:..\FreeRTOS/queue.c **** 				{
 692:..\FreeRTOS/queue.c **** 					/* If there was a task waiting for data to arrive on the
 693:..\FreeRTOS/queue.c **** 					queue then unblock it now. */
 694:..\FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 695:..\FreeRTOS/queue.c **** 					{
 696:..\FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 697:..\FreeRTOS/queue.c **** 						{
 698:..\FreeRTOS/queue.c **** 							/* The unblocked task has a priority higher than
 699:..\FreeRTOS/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 700:..\FreeRTOS/queue.c **** 							this from within the critical section - the kernel
 701:..\FreeRTOS/queue.c **** 							takes care of that. */
 702:..\FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 703:..\FreeRTOS/queue.c **** 						}
 704:..\FreeRTOS/queue.c **** 						else
 705:..\FreeRTOS/queue.c **** 						{
 706:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 707:..\FreeRTOS/queue.c **** 						}
 708:..\FreeRTOS/queue.c **** 					}
 709:..\FreeRTOS/queue.c **** 					else if( xYieldRequired != pdFALSE )
 710:..\FreeRTOS/queue.c **** 					{
 711:..\FreeRTOS/queue.c **** 						/* This path is a special case that will only get
 712:..\FreeRTOS/queue.c **** 						executed if the task was holding multiple mutexes and
 713:..\FreeRTOS/queue.c **** 						the mutexes were given back in an order that is
 714:..\FreeRTOS/queue.c **** 						different to that in which they were taken. */
 715:..\FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 716:..\FreeRTOS/queue.c **** 					}
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 14


 717:..\FreeRTOS/queue.c **** 					else
 718:..\FreeRTOS/queue.c **** 					{
 719:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 720:..\FreeRTOS/queue.c **** 					}
 721:..\FreeRTOS/queue.c **** 				}
 722:..\FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 723:..\FreeRTOS/queue.c **** 
 724:..\FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
 725:..\FreeRTOS/queue.c **** 				return pdPASS;
 726:..\FreeRTOS/queue.c **** 			}
 727:..\FreeRTOS/queue.c **** 			else
 728:..\FreeRTOS/queue.c **** 			{
 729:..\FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 730:..\FreeRTOS/queue.c **** 				{
 731:..\FreeRTOS/queue.c **** 					/* The queue was full and no block time is specified (or
 732:..\FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
 733:..\FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 734:..\FreeRTOS/queue.c **** 
 735:..\FreeRTOS/queue.c **** 					/* Return to the original privilege level before exiting
 736:..\FreeRTOS/queue.c **** 					the function. */
 737:..\FreeRTOS/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 738:..\FreeRTOS/queue.c **** 					return errQUEUE_FULL;
 739:..\FreeRTOS/queue.c **** 				}
 740:..\FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 741:..\FreeRTOS/queue.c **** 				{
 742:..\FreeRTOS/queue.c **** 					/* The queue was full and a block time was specified so
 743:..\FreeRTOS/queue.c **** 					configure the timeout structure. */
 744:..\FreeRTOS/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 745:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 746:..\FreeRTOS/queue.c **** 				}
 747:..\FreeRTOS/queue.c **** 				else
 748:..\FreeRTOS/queue.c **** 				{
 749:..\FreeRTOS/queue.c **** 					/* Entry time was already set. */
 750:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 751:..\FreeRTOS/queue.c **** 				}
 752:..\FreeRTOS/queue.c **** 			}
 753:..\FreeRTOS/queue.c **** 		}
 754:..\FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 755:..\FreeRTOS/queue.c **** 
 756:..\FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 757:..\FreeRTOS/queue.c **** 		now the critical section has been exited. */
 758:..\FreeRTOS/queue.c **** 
 759:..\FreeRTOS/queue.c **** 		vTaskSuspendAll();
 760:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 761:..\FreeRTOS/queue.c **** 
 762:..\FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 763:..\FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 764:..\FreeRTOS/queue.c **** 		{
 765:..\FreeRTOS/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 766:..\FreeRTOS/queue.c **** 			{
 767:..\FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 768:..\FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 769:..\FreeRTOS/queue.c **** 
 770:..\FreeRTOS/queue.c **** 				/* Unlocking the queue means queue events can effect the
 771:..\FreeRTOS/queue.c **** 				event list.  It is possible	that interrupts occurring now
 772:..\FreeRTOS/queue.c **** 				remove this task from the event	list again - but as the
 773:..\FreeRTOS/queue.c **** 				scheduler is suspended the task will go onto the pending
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 15


 774:..\FreeRTOS/queue.c **** 				ready last instead of the actual ready list. */
 775:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 776:..\FreeRTOS/queue.c **** 
 777:..\FreeRTOS/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 778:..\FreeRTOS/queue.c **** 				ready list into the ready list - so it is feasible that this
 779:..\FreeRTOS/queue.c **** 				task is already in a ready list before it yields - in which
 780:..\FreeRTOS/queue.c **** 				case the yield will not cause a context switch unless there
 781:..\FreeRTOS/queue.c **** 				is also a higher priority task in the pending ready list. */
 782:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 783:..\FreeRTOS/queue.c **** 				{
 784:..\FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
 785:..\FreeRTOS/queue.c **** 				}
 786:..\FreeRTOS/queue.c **** 			}
 787:..\FreeRTOS/queue.c **** 			else
 788:..\FreeRTOS/queue.c **** 			{
 789:..\FreeRTOS/queue.c **** 				/* Try again. */
 790:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 791:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 792:..\FreeRTOS/queue.c **** 			}
 793:..\FreeRTOS/queue.c **** 		}
 794:..\FreeRTOS/queue.c **** 		else
 795:..\FreeRTOS/queue.c **** 		{
 796:..\FreeRTOS/queue.c **** 			/* The timeout has expired. */
 797:..\FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
 798:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 799:..\FreeRTOS/queue.c **** 
 800:..\FreeRTOS/queue.c **** 			/* Return to the original privilege level before exiting the
 801:..\FreeRTOS/queue.c **** 			function. */
 802:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 803:..\FreeRTOS/queue.c **** 			return errQUEUE_FULL;
 804:..\FreeRTOS/queue.c **** 		}
 805:..\FreeRTOS/queue.c **** 	}
 806:..\FreeRTOS/queue.c **** }
 807:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 808:..\FreeRTOS/queue.c **** 
 809:..\FreeRTOS/queue.c **** #if ( configUSE_ALTERNATIVE_API == 1 )
 810:..\FreeRTOS/queue.c **** 
 811:..\FreeRTOS/queue.c **** 	BaseType_t xQueueAltGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_
 812:..\FreeRTOS/queue.c **** 	{
 813:..\FreeRTOS/queue.c **** 	BaseType_t xEntryTimeSet = pdFALSE;
 814:..\FreeRTOS/queue.c **** 	TimeOut_t xTimeOut;
 815:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 816:..\FreeRTOS/queue.c **** 
 817:..\FreeRTOS/queue.c **** 		configASSERT( pxQueue );
 818:..\FreeRTOS/queue.c **** 		configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 819:..\FreeRTOS/queue.c **** 
 820:..\FreeRTOS/queue.c **** 		for( ;; )
 821:..\FreeRTOS/queue.c **** 		{
 822:..\FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
 823:..\FreeRTOS/queue.c **** 			{
 824:..\FreeRTOS/queue.c **** 				/* Is there room on the queue now?  To be running we must be
 825:..\FreeRTOS/queue.c **** 				the highest priority task wanting to access the queue. */
 826:..\FreeRTOS/queue.c **** 				if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 827:..\FreeRTOS/queue.c **** 				{
 828:..\FreeRTOS/queue.c **** 					traceQUEUE_SEND( pxQueue );
 829:..\FreeRTOS/queue.c **** 					prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 830:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 16


 831:..\FreeRTOS/queue.c **** 					/* If there was a task waiting for data to arrive on the
 832:..\FreeRTOS/queue.c **** 					queue then unblock it now. */
 833:..\FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 834:..\FreeRTOS/queue.c **** 					{
 835:..\FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 836:..\FreeRTOS/queue.c **** 						{
 837:..\FreeRTOS/queue.c **** 							/* The unblocked task has a priority higher than
 838:..\FreeRTOS/queue.c **** 							our own so yield immediately. */
 839:..\FreeRTOS/queue.c **** 							portYIELD_WITHIN_API();
 840:..\FreeRTOS/queue.c **** 						}
 841:..\FreeRTOS/queue.c **** 						else
 842:..\FreeRTOS/queue.c **** 						{
 843:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 844:..\FreeRTOS/queue.c **** 						}
 845:..\FreeRTOS/queue.c **** 					}
 846:..\FreeRTOS/queue.c **** 					else
 847:..\FreeRTOS/queue.c **** 					{
 848:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 849:..\FreeRTOS/queue.c **** 					}
 850:..\FreeRTOS/queue.c **** 
 851:..\FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 852:..\FreeRTOS/queue.c **** 					return pdPASS;
 853:..\FreeRTOS/queue.c **** 				}
 854:..\FreeRTOS/queue.c **** 				else
 855:..\FreeRTOS/queue.c **** 				{
 856:..\FreeRTOS/queue.c **** 					if( xTicksToWait == ( TickType_t ) 0 )
 857:..\FreeRTOS/queue.c **** 					{
 858:..\FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
 859:..\FreeRTOS/queue.c **** 						return errQUEUE_FULL;
 860:..\FreeRTOS/queue.c **** 					}
 861:..\FreeRTOS/queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 862:..\FreeRTOS/queue.c **** 					{
 863:..\FreeRTOS/queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
 864:..\FreeRTOS/queue.c **** 						xEntryTimeSet = pdTRUE;
 865:..\FreeRTOS/queue.c **** 					}
 866:..\FreeRTOS/queue.c **** 				}
 867:..\FreeRTOS/queue.c **** 			}
 868:..\FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
 869:..\FreeRTOS/queue.c **** 
 870:..\FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
 871:..\FreeRTOS/queue.c **** 			{
 872:..\FreeRTOS/queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 873:..\FreeRTOS/queue.c **** 				{
 874:..\FreeRTOS/queue.c **** 					if( prvIsQueueFull( pxQueue ) != pdFALSE )
 875:..\FreeRTOS/queue.c **** 					{
 876:..\FreeRTOS/queue.c **** 						traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 877:..\FreeRTOS/queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 878:..\FreeRTOS/queue.c **** 						portYIELD_WITHIN_API();
 879:..\FreeRTOS/queue.c **** 					}
 880:..\FreeRTOS/queue.c **** 					else
 881:..\FreeRTOS/queue.c **** 					{
 882:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 883:..\FreeRTOS/queue.c **** 					}
 884:..\FreeRTOS/queue.c **** 				}
 885:..\FreeRTOS/queue.c **** 				else
 886:..\FreeRTOS/queue.c **** 				{
 887:..\FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 17


 888:..\FreeRTOS/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 889:..\FreeRTOS/queue.c **** 					return errQUEUE_FULL;
 890:..\FreeRTOS/queue.c **** 				}
 891:..\FreeRTOS/queue.c **** 			}
 892:..\FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
 893:..\FreeRTOS/queue.c **** 		}
 894:..\FreeRTOS/queue.c **** 	}
 895:..\FreeRTOS/queue.c **** 
 896:..\FreeRTOS/queue.c **** #endif /* configUSE_ALTERNATIVE_API */
 897:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 898:..\FreeRTOS/queue.c **** 
 899:..\FreeRTOS/queue.c **** #if ( configUSE_ALTERNATIVE_API == 1 )
 900:..\FreeRTOS/queue.c **** 
 901:..\FreeRTOS/queue.c **** 	BaseType_t xQueueAltGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicks
 902:..\FreeRTOS/queue.c **** 	{
 903:..\FreeRTOS/queue.c **** 	BaseType_t xEntryTimeSet = pdFALSE;
 904:..\FreeRTOS/queue.c **** 	TimeOut_t xTimeOut;
 905:..\FreeRTOS/queue.c **** 	int8_t *pcOriginalReadPosition;
 906:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 907:..\FreeRTOS/queue.c **** 
 908:..\FreeRTOS/queue.c **** 		configASSERT( pxQueue );
 909:..\FreeRTOS/queue.c **** 		configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 910:..\FreeRTOS/queue.c **** 
 911:..\FreeRTOS/queue.c **** 		for( ;; )
 912:..\FreeRTOS/queue.c **** 		{
 913:..\FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
 914:..\FreeRTOS/queue.c **** 			{
 915:..\FreeRTOS/queue.c **** 				if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
 916:..\FreeRTOS/queue.c **** 				{
 917:..\FreeRTOS/queue.c **** 					/* Remember our read position in case we are just peeking. */
 918:..\FreeRTOS/queue.c **** 					pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 919:..\FreeRTOS/queue.c **** 
 920:..\FreeRTOS/queue.c **** 					prvCopyDataFromQueue( pxQueue, pvBuffer );
 921:..\FreeRTOS/queue.c **** 
 922:..\FreeRTOS/queue.c **** 					if( xJustPeeking == pdFALSE )
 923:..\FreeRTOS/queue.c **** 					{
 924:..\FreeRTOS/queue.c **** 						traceQUEUE_RECEIVE( pxQueue );
 925:..\FreeRTOS/queue.c **** 
 926:..\FreeRTOS/queue.c **** 						/* Data is actually being removed (not just peeked). */
 927:..\FreeRTOS/queue.c **** 						--( pxQueue->uxMessagesWaiting );
 928:..\FreeRTOS/queue.c **** 
 929:..\FreeRTOS/queue.c **** 						#if ( configUSE_MUTEXES == 1 )
 930:..\FreeRTOS/queue.c **** 						{
 931:..\FreeRTOS/queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 932:..\FreeRTOS/queue.c **** 							{
 933:..\FreeRTOS/queue.c **** 								/* Record the information required to implement
 934:..\FreeRTOS/queue.c **** 								priority inheritance should it become necessary. */
 935:..\FreeRTOS/queue.c **** 								pxQueue->pxMutexHolder = ( int8_t * ) xTaskGetCurrentTaskHandle();
 936:..\FreeRTOS/queue.c **** 							}
 937:..\FreeRTOS/queue.c **** 							else
 938:..\FreeRTOS/queue.c **** 							{
 939:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 940:..\FreeRTOS/queue.c **** 							}
 941:..\FreeRTOS/queue.c **** 						}
 942:..\FreeRTOS/queue.c **** 						#endif
 943:..\FreeRTOS/queue.c **** 
 944:..\FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 18


 945:..\FreeRTOS/queue.c **** 						{
 946:..\FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 947:..\FreeRTOS/queue.c **** 							{
 948:..\FreeRTOS/queue.c **** 								portYIELD_WITHIN_API();
 949:..\FreeRTOS/queue.c **** 							}
 950:..\FreeRTOS/queue.c **** 							else
 951:..\FreeRTOS/queue.c **** 							{
 952:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 953:..\FreeRTOS/queue.c **** 							}
 954:..\FreeRTOS/queue.c **** 						}
 955:..\FreeRTOS/queue.c **** 					}
 956:..\FreeRTOS/queue.c **** 					else
 957:..\FreeRTOS/queue.c **** 					{
 958:..\FreeRTOS/queue.c **** 						traceQUEUE_PEEK( pxQueue );
 959:..\FreeRTOS/queue.c **** 
 960:..\FreeRTOS/queue.c **** 						/* The data is not being removed, so reset our read
 961:..\FreeRTOS/queue.c **** 						pointer. */
 962:..\FreeRTOS/queue.c **** 						pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 963:..\FreeRTOS/queue.c **** 
 964:..\FreeRTOS/queue.c **** 						/* The data is being left in the queue, so see if there are
 965:..\FreeRTOS/queue.c **** 						any other tasks waiting for the data. */
 966:..\FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 967:..\FreeRTOS/queue.c **** 						{
 968:..\FreeRTOS/queue.c **** 							/* Tasks that are removed from the event list will get added to
 969:..\FreeRTOS/queue.c **** 							the pending ready list as the scheduler is still suspended. */
 970:..\FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 971:..\FreeRTOS/queue.c **** 							{
 972:..\FreeRTOS/queue.c **** 								/* The task waiting has a higher priority than this task. */
 973:..\FreeRTOS/queue.c **** 								portYIELD_WITHIN_API();
 974:..\FreeRTOS/queue.c **** 							}
 975:..\FreeRTOS/queue.c **** 							else
 976:..\FreeRTOS/queue.c **** 							{
 977:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 978:..\FreeRTOS/queue.c **** 							}
 979:..\FreeRTOS/queue.c **** 						}
 980:..\FreeRTOS/queue.c **** 						else
 981:..\FreeRTOS/queue.c **** 						{
 982:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 983:..\FreeRTOS/queue.c **** 						}
 984:..\FreeRTOS/queue.c **** 					}
 985:..\FreeRTOS/queue.c **** 
 986:..\FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 987:..\FreeRTOS/queue.c **** 					return pdPASS;
 988:..\FreeRTOS/queue.c **** 				}
 989:..\FreeRTOS/queue.c **** 				else
 990:..\FreeRTOS/queue.c **** 				{
 991:..\FreeRTOS/queue.c **** 					if( xTicksToWait == ( TickType_t ) 0 )
 992:..\FreeRTOS/queue.c **** 					{
 993:..\FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
 994:..\FreeRTOS/queue.c **** 						traceQUEUE_RECEIVE_FAILED( pxQueue );
 995:..\FreeRTOS/queue.c **** 						return errQUEUE_EMPTY;
 996:..\FreeRTOS/queue.c **** 					}
 997:..\FreeRTOS/queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 998:..\FreeRTOS/queue.c **** 					{
 999:..\FreeRTOS/queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
1000:..\FreeRTOS/queue.c **** 						xEntryTimeSet = pdTRUE;
1001:..\FreeRTOS/queue.c **** 					}
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 19


1002:..\FreeRTOS/queue.c **** 				}
1003:..\FreeRTOS/queue.c **** 			}
1004:..\FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
1005:..\FreeRTOS/queue.c **** 
1006:..\FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
1007:..\FreeRTOS/queue.c **** 			{
1008:..\FreeRTOS/queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1009:..\FreeRTOS/queue.c **** 				{
1010:..\FreeRTOS/queue.c **** 					if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1011:..\FreeRTOS/queue.c **** 					{
1012:..\FreeRTOS/queue.c **** 						traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1013:..\FreeRTOS/queue.c **** 
1014:..\FreeRTOS/queue.c **** 						#if ( configUSE_MUTEXES == 1 )
1015:..\FreeRTOS/queue.c **** 						{
1016:..\FreeRTOS/queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1017:..\FreeRTOS/queue.c **** 							{
1018:..\FreeRTOS/queue.c **** 								taskENTER_CRITICAL();
1019:..\FreeRTOS/queue.c **** 								{
1020:..\FreeRTOS/queue.c **** 									vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1021:..\FreeRTOS/queue.c **** 								}
1022:..\FreeRTOS/queue.c **** 								taskEXIT_CRITICAL();
1023:..\FreeRTOS/queue.c **** 							}
1024:..\FreeRTOS/queue.c **** 							else
1025:..\FreeRTOS/queue.c **** 							{
1026:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1027:..\FreeRTOS/queue.c **** 							}
1028:..\FreeRTOS/queue.c **** 						}
1029:..\FreeRTOS/queue.c **** 						#endif
1030:..\FreeRTOS/queue.c **** 
1031:..\FreeRTOS/queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1032:..\FreeRTOS/queue.c **** 						portYIELD_WITHIN_API();
1033:..\FreeRTOS/queue.c **** 					}
1034:..\FreeRTOS/queue.c **** 					else
1035:..\FreeRTOS/queue.c **** 					{
1036:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1037:..\FreeRTOS/queue.c **** 					}
1038:..\FreeRTOS/queue.c **** 				}
1039:..\FreeRTOS/queue.c **** 				else
1040:..\FreeRTOS/queue.c **** 				{
1041:..\FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
1042:..\FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1043:..\FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
1044:..\FreeRTOS/queue.c **** 				}
1045:..\FreeRTOS/queue.c **** 			}
1046:..\FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
1047:..\FreeRTOS/queue.c **** 		}
1048:..\FreeRTOS/queue.c **** 	}
1049:..\FreeRTOS/queue.c **** 
1050:..\FreeRTOS/queue.c **** 
1051:..\FreeRTOS/queue.c **** #endif /* configUSE_ALTERNATIVE_API */
1052:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1053:..\FreeRTOS/queue.c **** 
1054:..\FreeRTOS/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
1055:..\FreeRTOS/queue.c **** {
1056:..\FreeRTOS/queue.c **** BaseType_t xReturn;
1057:..\FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
1058:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 20


1059:..\FreeRTOS/queue.c **** 
1060:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1061:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1062:..\FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
1063:..\FreeRTOS/queue.c **** 
1064:..\FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1065:..\FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1066:..\FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1067:..\FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1068:..\FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1069:..\FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1070:..\FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1071:..\FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1072:..\FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1073:..\FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1074:..\FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1075:..\FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1076:..\FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1077:..\FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1078:..\FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1079:..\FreeRTOS/queue.c **** 
1080:..\FreeRTOS/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
1081:..\FreeRTOS/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
1082:..\FreeRTOS/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1083:..\FreeRTOS/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1084:..\FreeRTOS/queue.c **** 	post). */
1085:..\FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1086:..\FreeRTOS/queue.c **** 	{
1087:..\FreeRTOS/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
1088:..\FreeRTOS/queue.c **** 		{
1089:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1090:..\FreeRTOS/queue.c **** 
1091:..\FreeRTOS/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
1092:..\FreeRTOS/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
1093:..\FreeRTOS/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
1094:..\FreeRTOS/queue.c **** 			called here even though the disinherit function does not check if
1095:..\FreeRTOS/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
1096:..\FreeRTOS/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
1097:..\FreeRTOS/queue.c **** 
1098:..\FreeRTOS/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1099:..\FreeRTOS/queue.c **** 			be done when the queue is unlocked later. */
1100:..\FreeRTOS/queue.c **** 			if( pxQueue->xTxLock == queueUNLOCKED )
1101:..\FreeRTOS/queue.c **** 			{
1102:..\FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1103:..\FreeRTOS/queue.c **** 				{
1104:..\FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1105:..\FreeRTOS/queue.c **** 					{
1106:..\FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
1107:..\FreeRTOS/queue.c **** 						{
1108:..\FreeRTOS/queue.c **** 							/* The queue is a member of a queue set, and posting
1109:..\FreeRTOS/queue.c **** 							to the queue set caused a higher priority task to
1110:..\FreeRTOS/queue.c **** 							unblock.  A context switch is required. */
1111:..\FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1112:..\FreeRTOS/queue.c **** 							{
1113:..\FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1114:..\FreeRTOS/queue.c **** 							}
1115:..\FreeRTOS/queue.c **** 							else
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 21


1116:..\FreeRTOS/queue.c **** 							{
1117:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1118:..\FreeRTOS/queue.c **** 							}
1119:..\FreeRTOS/queue.c **** 						}
1120:..\FreeRTOS/queue.c **** 						else
1121:..\FreeRTOS/queue.c **** 						{
1122:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1123:..\FreeRTOS/queue.c **** 						}
1124:..\FreeRTOS/queue.c **** 					}
1125:..\FreeRTOS/queue.c **** 					else
1126:..\FreeRTOS/queue.c **** 					{
1127:..\FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1128:..\FreeRTOS/queue.c **** 						{
1129:..\FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1130:..\FreeRTOS/queue.c **** 							{
1131:..\FreeRTOS/queue.c **** 								/* The task waiting has a higher priority so
1132:..\FreeRTOS/queue.c **** 								record that a context switch is required. */
1133:..\FreeRTOS/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1134:..\FreeRTOS/queue.c **** 								{
1135:..\FreeRTOS/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1136:..\FreeRTOS/queue.c **** 								}
1137:..\FreeRTOS/queue.c **** 								else
1138:..\FreeRTOS/queue.c **** 								{
1139:..\FreeRTOS/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1140:..\FreeRTOS/queue.c **** 								}
1141:..\FreeRTOS/queue.c **** 							}
1142:..\FreeRTOS/queue.c **** 							else
1143:..\FreeRTOS/queue.c **** 							{
1144:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1145:..\FreeRTOS/queue.c **** 							}
1146:..\FreeRTOS/queue.c **** 						}
1147:..\FreeRTOS/queue.c **** 						else
1148:..\FreeRTOS/queue.c **** 						{
1149:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1150:..\FreeRTOS/queue.c **** 						}
1151:..\FreeRTOS/queue.c **** 					}
1152:..\FreeRTOS/queue.c **** 				}
1153:..\FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1154:..\FreeRTOS/queue.c **** 				{
1155:..\FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1156:..\FreeRTOS/queue.c **** 					{
1157:..\FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1158:..\FreeRTOS/queue.c **** 						{
1159:..\FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
1160:..\FreeRTOS/queue.c **** 							context	switch is required. */
1161:..\FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1162:..\FreeRTOS/queue.c **** 							{
1163:..\FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1164:..\FreeRTOS/queue.c **** 							}
1165:..\FreeRTOS/queue.c **** 							else
1166:..\FreeRTOS/queue.c **** 							{
1167:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1168:..\FreeRTOS/queue.c **** 							}
1169:..\FreeRTOS/queue.c **** 						}
1170:..\FreeRTOS/queue.c **** 						else
1171:..\FreeRTOS/queue.c **** 						{
1172:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 22


1173:..\FreeRTOS/queue.c **** 						}
1174:..\FreeRTOS/queue.c **** 					}
1175:..\FreeRTOS/queue.c **** 					else
1176:..\FreeRTOS/queue.c **** 					{
1177:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1178:..\FreeRTOS/queue.c **** 					}
1179:..\FreeRTOS/queue.c **** 				}
1180:..\FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1181:..\FreeRTOS/queue.c **** 			}
1182:..\FreeRTOS/queue.c **** 			else
1183:..\FreeRTOS/queue.c **** 			{
1184:..\FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1185:..\FreeRTOS/queue.c **** 				knows that data was posted while it was locked. */
1186:..\FreeRTOS/queue.c **** 				++( pxQueue->xTxLock );
1187:..\FreeRTOS/queue.c **** 			}
1188:..\FreeRTOS/queue.c **** 
1189:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
1190:..\FreeRTOS/queue.c **** 		}
1191:..\FreeRTOS/queue.c **** 		else
1192:..\FreeRTOS/queue.c **** 		{
1193:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1194:..\FreeRTOS/queue.c **** 			xReturn = errQUEUE_FULL;
1195:..\FreeRTOS/queue.c **** 		}
1196:..\FreeRTOS/queue.c **** 	}
1197:..\FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1198:..\FreeRTOS/queue.c **** 
1199:..\FreeRTOS/queue.c **** 	return xReturn;
1200:..\FreeRTOS/queue.c **** }
1201:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1202:..\FreeRTOS/queue.c **** 
1203:..\FreeRTOS/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1204:..\FreeRTOS/queue.c **** {
1205:..\FreeRTOS/queue.c **** BaseType_t xReturn;
1206:..\FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
1207:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1208:..\FreeRTOS/queue.c **** 
1209:..\FreeRTOS/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1210:..\FreeRTOS/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1211:..\FreeRTOS/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1212:..\FreeRTOS/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1213:..\FreeRTOS/queue.c **** 	post). */
1214:..\FreeRTOS/queue.c **** 
1215:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1216:..\FreeRTOS/queue.c **** 
1217:..\FreeRTOS/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1218:..\FreeRTOS/queue.c **** 	if the item size is not 0. */
1219:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1220:..\FreeRTOS/queue.c **** 
1221:..\FreeRTOS/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1222:..\FreeRTOS/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1223:..\FreeRTOS/queue.c **** 	interrupts, only tasks. */
1224:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1225:..\FreeRTOS/queue.c **** 
1226:..\FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1227:..\FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1228:..\FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1229:..\FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 23


1230:..\FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1231:..\FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1232:..\FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1233:..\FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1234:..\FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1235:..\FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1236:..\FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1237:..\FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1238:..\FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1239:..\FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1240:..\FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1241:..\FreeRTOS/queue.c **** 
1242:..\FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1243:..\FreeRTOS/queue.c **** 	{
1244:..\FreeRTOS/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1245:..\FreeRTOS/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1246:..\FreeRTOS/queue.c **** 		space'. */
1247:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
1248:..\FreeRTOS/queue.c **** 		{
1249:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1250:..\FreeRTOS/queue.c **** 
1251:..\FreeRTOS/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1252:..\FreeRTOS/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1253:..\FreeRTOS/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1254:..\FreeRTOS/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1255:..\FreeRTOS/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1256:..\FreeRTOS/queue.c **** 			messages (semaphores) available. */
1257:..\FreeRTOS/queue.c **** 			++( pxQueue->uxMessagesWaiting );
1258:..\FreeRTOS/queue.c **** 
1259:..\FreeRTOS/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1260:..\FreeRTOS/queue.c **** 			be done when the queue is unlocked later. */
1261:..\FreeRTOS/queue.c **** 			if( pxQueue->xTxLock == queueUNLOCKED )
1262:..\FreeRTOS/queue.c **** 			{
1263:..\FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1264:..\FreeRTOS/queue.c **** 				{
1265:..\FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1266:..\FreeRTOS/queue.c **** 					{
1267:..\FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) == pdTRUE )
1268:..\FreeRTOS/queue.c **** 						{
1269:..\FreeRTOS/queue.c **** 							/* The semaphore is a member of a queue set, and
1270:..\FreeRTOS/queue.c **** 							posting	to the queue set caused a higher priority
1271:..\FreeRTOS/queue.c **** 							task to	unblock.  A context switch is required. */
1272:..\FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1273:..\FreeRTOS/queue.c **** 							{
1274:..\FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1275:..\FreeRTOS/queue.c **** 							}
1276:..\FreeRTOS/queue.c **** 							else
1277:..\FreeRTOS/queue.c **** 							{
1278:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1279:..\FreeRTOS/queue.c **** 							}
1280:..\FreeRTOS/queue.c **** 						}
1281:..\FreeRTOS/queue.c **** 						else
1282:..\FreeRTOS/queue.c **** 						{
1283:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1284:..\FreeRTOS/queue.c **** 						}
1285:..\FreeRTOS/queue.c **** 					}
1286:..\FreeRTOS/queue.c **** 					else
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 24


1287:..\FreeRTOS/queue.c **** 					{
1288:..\FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1289:..\FreeRTOS/queue.c **** 						{
1290:..\FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1291:..\FreeRTOS/queue.c **** 							{
1292:..\FreeRTOS/queue.c **** 								/* The task waiting has a higher priority so
1293:..\FreeRTOS/queue.c **** 								record that a context switch is required. */
1294:..\FreeRTOS/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1295:..\FreeRTOS/queue.c **** 								{
1296:..\FreeRTOS/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1297:..\FreeRTOS/queue.c **** 								}
1298:..\FreeRTOS/queue.c **** 								else
1299:..\FreeRTOS/queue.c **** 								{
1300:..\FreeRTOS/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1301:..\FreeRTOS/queue.c **** 								}
1302:..\FreeRTOS/queue.c **** 							}
1303:..\FreeRTOS/queue.c **** 							else
1304:..\FreeRTOS/queue.c **** 							{
1305:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1306:..\FreeRTOS/queue.c **** 							}
1307:..\FreeRTOS/queue.c **** 						}
1308:..\FreeRTOS/queue.c **** 						else
1309:..\FreeRTOS/queue.c **** 						{
1310:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1311:..\FreeRTOS/queue.c **** 						}
1312:..\FreeRTOS/queue.c **** 					}
1313:..\FreeRTOS/queue.c **** 				}
1314:..\FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1315:..\FreeRTOS/queue.c **** 				{
1316:..\FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1317:..\FreeRTOS/queue.c **** 					{
1318:..\FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1319:..\FreeRTOS/queue.c **** 						{
1320:..\FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
1321:..\FreeRTOS/queue.c **** 							context	switch is required. */
1322:..\FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1323:..\FreeRTOS/queue.c **** 							{
1324:..\FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1325:..\FreeRTOS/queue.c **** 							}
1326:..\FreeRTOS/queue.c **** 							else
1327:..\FreeRTOS/queue.c **** 							{
1328:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1329:..\FreeRTOS/queue.c **** 							}
1330:..\FreeRTOS/queue.c **** 						}
1331:..\FreeRTOS/queue.c **** 						else
1332:..\FreeRTOS/queue.c **** 						{
1333:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1334:..\FreeRTOS/queue.c **** 						}
1335:..\FreeRTOS/queue.c **** 					}
1336:..\FreeRTOS/queue.c **** 					else
1337:..\FreeRTOS/queue.c **** 					{
1338:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1339:..\FreeRTOS/queue.c **** 					}
1340:..\FreeRTOS/queue.c **** 				}
1341:..\FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1342:..\FreeRTOS/queue.c **** 			}
1343:..\FreeRTOS/queue.c **** 			else
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 25


1344:..\FreeRTOS/queue.c **** 			{
1345:..\FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1346:..\FreeRTOS/queue.c **** 				knows that data was posted while it was locked. */
1347:..\FreeRTOS/queue.c **** 				++( pxQueue->xTxLock );
1348:..\FreeRTOS/queue.c **** 			}
1349:..\FreeRTOS/queue.c **** 
1350:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
1351:..\FreeRTOS/queue.c **** 		}
1352:..\FreeRTOS/queue.c **** 		else
1353:..\FreeRTOS/queue.c **** 		{
1354:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1355:..\FreeRTOS/queue.c **** 			xReturn = errQUEUE_FULL;
1356:..\FreeRTOS/queue.c **** 		}
1357:..\FreeRTOS/queue.c **** 	}
1358:..\FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1359:..\FreeRTOS/queue.c **** 
1360:..\FreeRTOS/queue.c **** 	return xReturn;
1361:..\FreeRTOS/queue.c **** }
1362:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1363:..\FreeRTOS/queue.c **** 
1364:..\FreeRTOS/queue.c **** BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWa
1365:..\FreeRTOS/queue.c **** {
1366:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1367:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
1368:..\FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
1369:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1370:..\FreeRTOS/queue.c **** 
1371:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1372:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1373:..\FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1374:..\FreeRTOS/queue.c **** 	{
1375:..\FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1376:..\FreeRTOS/queue.c **** 	}
1377:..\FreeRTOS/queue.c **** 	#endif
1378:..\FreeRTOS/queue.c **** 
1379:..\FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1380:..\FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
1381:..\FreeRTOS/queue.c **** 	of execution time efficiency. */
1382:..\FreeRTOS/queue.c **** 
1383:..\FreeRTOS/queue.c **** 	for( ;; )
1384:..\FreeRTOS/queue.c **** 	{
1385:..\FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
1386:..\FreeRTOS/queue.c **** 		{
1387:..\FreeRTOS/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1388:..\FreeRTOS/queue.c **** 			must be	the highest priority task wanting to access the queue. */
1389:..\FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1390:..\FreeRTOS/queue.c **** 			{
1391:..\FreeRTOS/queue.c **** 				/* Remember the read position in case the queue is only being
1392:..\FreeRTOS/queue.c **** 				peeked. */
1393:..\FreeRTOS/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1394:..\FreeRTOS/queue.c **** 
1395:..\FreeRTOS/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1396:..\FreeRTOS/queue.c **** 
1397:..\FreeRTOS/queue.c **** 				if( xJustPeeking == pdFALSE )
1398:..\FreeRTOS/queue.c **** 				{
1399:..\FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE( pxQueue );
1400:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 26


1401:..\FreeRTOS/queue.c **** 					/* Actually removing data, not just peeking. */
1402:..\FreeRTOS/queue.c **** 					--( pxQueue->uxMessagesWaiting );
1403:..\FreeRTOS/queue.c **** 
1404:..\FreeRTOS/queue.c **** 					#if ( configUSE_MUTEXES == 1 )
1405:..\FreeRTOS/queue.c **** 					{
1406:..\FreeRTOS/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1407:..\FreeRTOS/queue.c **** 						{
1408:..\FreeRTOS/queue.c **** 							/* Record the information required to implement
1409:..\FreeRTOS/queue.c **** 							priority inheritance should it become necessary. */
1410:..\FreeRTOS/queue.c **** 							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is 
1411:..\FreeRTOS/queue.c **** 						}
1412:..\FreeRTOS/queue.c **** 						else
1413:..\FreeRTOS/queue.c **** 						{
1414:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1415:..\FreeRTOS/queue.c **** 						}
1416:..\FreeRTOS/queue.c **** 					}
1417:..\FreeRTOS/queue.c **** 					#endif /* configUSE_MUTEXES */
1418:..\FreeRTOS/queue.c **** 
1419:..\FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1420:..\FreeRTOS/queue.c **** 					{
1421:..\FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
1422:..\FreeRTOS/queue.c **** 						{
1423:..\FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1424:..\FreeRTOS/queue.c **** 						}
1425:..\FreeRTOS/queue.c **** 						else
1426:..\FreeRTOS/queue.c **** 						{
1427:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1428:..\FreeRTOS/queue.c **** 						}
1429:..\FreeRTOS/queue.c **** 					}
1430:..\FreeRTOS/queue.c **** 					else
1431:..\FreeRTOS/queue.c **** 					{
1432:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1433:..\FreeRTOS/queue.c **** 					}
1434:..\FreeRTOS/queue.c **** 				}
1435:..\FreeRTOS/queue.c **** 				else
1436:..\FreeRTOS/queue.c **** 				{
1437:..\FreeRTOS/queue.c **** 					traceQUEUE_PEEK( pxQueue );
1438:..\FreeRTOS/queue.c **** 
1439:..\FreeRTOS/queue.c **** 					/* The data is not being removed, so reset the read
1440:..\FreeRTOS/queue.c **** 					pointer. */
1441:..\FreeRTOS/queue.c **** 					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1442:..\FreeRTOS/queue.c **** 
1443:..\FreeRTOS/queue.c **** 					/* The data is being left in the queue, so see if there are
1444:..\FreeRTOS/queue.c **** 					any other tasks waiting for the data. */
1445:..\FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1446:..\FreeRTOS/queue.c **** 					{
1447:..\FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1448:..\FreeRTOS/queue.c **** 						{
1449:..\FreeRTOS/queue.c **** 							/* The task waiting has a higher priority than this task. */
1450:..\FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1451:..\FreeRTOS/queue.c **** 						}
1452:..\FreeRTOS/queue.c **** 						else
1453:..\FreeRTOS/queue.c **** 						{
1454:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1455:..\FreeRTOS/queue.c **** 						}
1456:..\FreeRTOS/queue.c **** 					}
1457:..\FreeRTOS/queue.c **** 					else
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 27


1458:..\FreeRTOS/queue.c **** 					{
1459:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1460:..\FreeRTOS/queue.c **** 					}
1461:..\FreeRTOS/queue.c **** 				}
1462:..\FreeRTOS/queue.c **** 
1463:..\FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
1464:..\FreeRTOS/queue.c **** 				return pdPASS;
1465:..\FreeRTOS/queue.c **** 			}
1466:..\FreeRTOS/queue.c **** 			else
1467:..\FreeRTOS/queue.c **** 			{
1468:..\FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1469:..\FreeRTOS/queue.c **** 				{
1470:..\FreeRTOS/queue.c **** 					/* The queue was empty and no block time is specified (or
1471:..\FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
1472:..\FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
1473:..\FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1474:..\FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
1475:..\FreeRTOS/queue.c **** 				}
1476:..\FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1477:..\FreeRTOS/queue.c **** 				{
1478:..\FreeRTOS/queue.c **** 					/* The queue was empty and a block time was specified so
1479:..\FreeRTOS/queue.c **** 					configure the timeout structure. */
1480:..\FreeRTOS/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
1481:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
1482:..\FreeRTOS/queue.c **** 				}
1483:..\FreeRTOS/queue.c **** 				else
1484:..\FreeRTOS/queue.c **** 				{
1485:..\FreeRTOS/queue.c **** 					/* Entry time was already set. */
1486:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1487:..\FreeRTOS/queue.c **** 				}
1488:..\FreeRTOS/queue.c **** 			}
1489:..\FreeRTOS/queue.c **** 		}
1490:..\FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
1491:..\FreeRTOS/queue.c **** 
1492:..\FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1493:..\FreeRTOS/queue.c **** 		now the critical section has been exited. */
1494:..\FreeRTOS/queue.c **** 
1495:..\FreeRTOS/queue.c **** 		vTaskSuspendAll();
1496:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
1497:..\FreeRTOS/queue.c **** 
1498:..\FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1499:..\FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1500:..\FreeRTOS/queue.c **** 		{
1501:..\FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1502:..\FreeRTOS/queue.c **** 			{
1503:..\FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1504:..\FreeRTOS/queue.c **** 
1505:..\FreeRTOS/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1506:..\FreeRTOS/queue.c **** 				{
1507:..\FreeRTOS/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1508:..\FreeRTOS/queue.c **** 					{
1509:..\FreeRTOS/queue.c **** 						taskENTER_CRITICAL();
1510:..\FreeRTOS/queue.c **** 						{
1511:..\FreeRTOS/queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1512:..\FreeRTOS/queue.c **** 						}
1513:..\FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
1514:..\FreeRTOS/queue.c **** 					}
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 28


1515:..\FreeRTOS/queue.c **** 					else
1516:..\FreeRTOS/queue.c **** 					{
1517:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1518:..\FreeRTOS/queue.c **** 					}
1519:..\FreeRTOS/queue.c **** 				}
1520:..\FreeRTOS/queue.c **** 				#endif
1521:..\FreeRTOS/queue.c **** 
1522:..\FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1523:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1524:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1525:..\FreeRTOS/queue.c **** 				{
1526:..\FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
1527:..\FreeRTOS/queue.c **** 				}
1528:..\FreeRTOS/queue.c **** 				else
1529:..\FreeRTOS/queue.c **** 				{
1530:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1531:..\FreeRTOS/queue.c **** 				}
1532:..\FreeRTOS/queue.c **** 			}
1533:..\FreeRTOS/queue.c **** 			else
1534:..\FreeRTOS/queue.c **** 			{
1535:..\FreeRTOS/queue.c **** 				/* Try again. */
1536:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1537:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
1538:..\FreeRTOS/queue.c **** 			}
1539:..\FreeRTOS/queue.c **** 		}
1540:..\FreeRTOS/queue.c **** 		else
1541:..\FreeRTOS/queue.c **** 		{
1542:..\FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
1543:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
1544:..\FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FAILED( pxQueue );
1545:..\FreeRTOS/queue.c **** 			return errQUEUE_EMPTY;
1546:..\FreeRTOS/queue.c **** 		}
1547:..\FreeRTOS/queue.c **** 	}
1548:..\FreeRTOS/queue.c **** }
1549:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1550:..\FreeRTOS/queue.c **** 
1551:..\FreeRTOS/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1552:..\FreeRTOS/queue.c **** {
1553:..\FreeRTOS/queue.c **** BaseType_t xReturn;
1554:..\FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
1555:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1556:..\FreeRTOS/queue.c **** 
1557:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1558:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1559:..\FreeRTOS/queue.c **** 
1560:..\FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1561:..\FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1562:..\FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1563:..\FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1564:..\FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1565:..\FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1566:..\FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1567:..\FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1568:..\FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1569:..\FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1570:..\FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1571:..\FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 29


1572:..\FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1573:..\FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1574:..\FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1575:..\FreeRTOS/queue.c **** 
1576:..\FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1577:..\FreeRTOS/queue.c **** 	{
1578:..\FreeRTOS/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1579:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1580:..\FreeRTOS/queue.c **** 		{
1581:..\FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1582:..\FreeRTOS/queue.c **** 
1583:..\FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1584:..\FreeRTOS/queue.c **** 			--( pxQueue->uxMessagesWaiting );
1585:..\FreeRTOS/queue.c **** 
1586:..\FreeRTOS/queue.c **** 			/* If the queue is locked the event list will not be modified.
1587:..\FreeRTOS/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1588:..\FreeRTOS/queue.c **** 			will know that an ISR has removed data while the queue was
1589:..\FreeRTOS/queue.c **** 			locked. */
1590:..\FreeRTOS/queue.c **** 			if( pxQueue->xRxLock == queueUNLOCKED )
1591:..\FreeRTOS/queue.c **** 			{
1592:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1593:..\FreeRTOS/queue.c **** 				{
1594:..\FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1595:..\FreeRTOS/queue.c **** 					{
1596:..\FreeRTOS/queue.c **** 						/* The task waiting has a higher priority than us so
1597:..\FreeRTOS/queue.c **** 						force a context switch. */
1598:..\FreeRTOS/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1599:..\FreeRTOS/queue.c **** 						{
1600:..\FreeRTOS/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1601:..\FreeRTOS/queue.c **** 						}
1602:..\FreeRTOS/queue.c **** 						else
1603:..\FreeRTOS/queue.c **** 						{
1604:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1605:..\FreeRTOS/queue.c **** 						}
1606:..\FreeRTOS/queue.c **** 					}
1607:..\FreeRTOS/queue.c **** 					else
1608:..\FreeRTOS/queue.c **** 					{
1609:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1610:..\FreeRTOS/queue.c **** 					}
1611:..\FreeRTOS/queue.c **** 				}
1612:..\FreeRTOS/queue.c **** 				else
1613:..\FreeRTOS/queue.c **** 				{
1614:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1615:..\FreeRTOS/queue.c **** 				}
1616:..\FreeRTOS/queue.c **** 			}
1617:..\FreeRTOS/queue.c **** 			else
1618:..\FreeRTOS/queue.c **** 			{
1619:..\FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1620:..\FreeRTOS/queue.c **** 				knows that data was removed while it was locked. */
1621:..\FreeRTOS/queue.c **** 				++( pxQueue->xRxLock );
1622:..\FreeRTOS/queue.c **** 			}
1623:..\FreeRTOS/queue.c **** 
1624:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
1625:..\FreeRTOS/queue.c **** 		}
1626:..\FreeRTOS/queue.c **** 		else
1627:..\FreeRTOS/queue.c **** 		{
1628:..\FreeRTOS/queue.c **** 			xReturn = pdFAIL;
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 30


1629:..\FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1630:..\FreeRTOS/queue.c **** 		}
1631:..\FreeRTOS/queue.c **** 	}
1632:..\FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1633:..\FreeRTOS/queue.c **** 
1634:..\FreeRTOS/queue.c **** 	return xReturn;
1635:..\FreeRTOS/queue.c **** }
1636:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1637:..\FreeRTOS/queue.c **** 
1638:..\FreeRTOS/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1639:..\FreeRTOS/queue.c **** {
1640:..\FreeRTOS/queue.c **** BaseType_t xReturn;
1641:..\FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
1642:..\FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
1643:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1644:..\FreeRTOS/queue.c **** 
1645:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1646:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1647:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1648:..\FreeRTOS/queue.c **** 
1649:..\FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1650:..\FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1651:..\FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1652:..\FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1653:..\FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1654:..\FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1655:..\FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1656:..\FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1657:..\FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1658:..\FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1659:..\FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1660:..\FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1661:..\FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1662:..\FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1663:..\FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1664:..\FreeRTOS/queue.c **** 
1665:..\FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1666:..\FreeRTOS/queue.c **** 	{
1667:..\FreeRTOS/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1668:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1669:..\FreeRTOS/queue.c **** 		{
1670:..\FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1671:..\FreeRTOS/queue.c **** 
1672:..\FreeRTOS/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1673:..\FreeRTOS/queue.c **** 			actually being removed from the queue. */
1674:..\FreeRTOS/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1675:..\FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1676:..\FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1677:..\FreeRTOS/queue.c **** 
1678:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
1679:..\FreeRTOS/queue.c **** 		}
1680:..\FreeRTOS/queue.c **** 		else
1681:..\FreeRTOS/queue.c **** 		{
1682:..\FreeRTOS/queue.c **** 			xReturn = pdFAIL;
1683:..\FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1684:..\FreeRTOS/queue.c **** 		}
1685:..\FreeRTOS/queue.c **** 	}
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 31


1686:..\FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1687:..\FreeRTOS/queue.c **** 
1688:..\FreeRTOS/queue.c **** 	return xReturn;
1689:..\FreeRTOS/queue.c **** }
1690:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1691:..\FreeRTOS/queue.c **** 
1692:..\FreeRTOS/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1693:..\FreeRTOS/queue.c **** {
1694:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
1695:..\FreeRTOS/queue.c **** 
1696:..\FreeRTOS/queue.c **** 	configASSERT( xQueue );
1697:..\FreeRTOS/queue.c **** 
1698:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
1699:..\FreeRTOS/queue.c **** 	{
1700:..\FreeRTOS/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1701:..\FreeRTOS/queue.c **** 	}
1702:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
1703:..\FreeRTOS/queue.c **** 
1704:..\FreeRTOS/queue.c **** 	return uxReturn;
1705:..\FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1706:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1707:..\FreeRTOS/queue.c **** 
1708:..\FreeRTOS/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1709:..\FreeRTOS/queue.c **** {
1710:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
1711:..\FreeRTOS/queue.c **** Queue_t *pxQueue;
1712:..\FreeRTOS/queue.c **** 
1713:..\FreeRTOS/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
1714:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1715:..\FreeRTOS/queue.c **** 
1716:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
1717:..\FreeRTOS/queue.c **** 	{
1718:..\FreeRTOS/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1719:..\FreeRTOS/queue.c **** 	}
1720:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
1721:..\FreeRTOS/queue.c **** 
1722:..\FreeRTOS/queue.c **** 	return uxReturn;
1723:..\FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1724:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1725:..\FreeRTOS/queue.c **** 
1726:..\FreeRTOS/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1727:..\FreeRTOS/queue.c **** {
1728:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
1729:..\FreeRTOS/queue.c **** 
1730:..\FreeRTOS/queue.c **** 	configASSERT( xQueue );
1731:..\FreeRTOS/queue.c **** 
1732:..\FreeRTOS/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1733:..\FreeRTOS/queue.c **** 
1734:..\FreeRTOS/queue.c **** 	return uxReturn;
1735:..\FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1736:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1737:..\FreeRTOS/queue.c **** 
1738:..\FreeRTOS/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1739:..\FreeRTOS/queue.c **** {
1740:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1741:..\FreeRTOS/queue.c **** 
1742:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 32


1743:..\FreeRTOS/queue.c **** 
1744:..\FreeRTOS/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1745:..\FreeRTOS/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1746:..\FreeRTOS/queue.c **** 	{
1747:..\FreeRTOS/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1748:..\FreeRTOS/queue.c **** 	}
1749:..\FreeRTOS/queue.c **** 	#endif
1750:..\FreeRTOS/queue.c **** 	vPortFree( pxQueue );
1751:..\FreeRTOS/queue.c **** }
1752:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1753:..\FreeRTOS/queue.c **** 
1754:..\FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1755:..\FreeRTOS/queue.c **** 
1756:..\FreeRTOS/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1757:..\FreeRTOS/queue.c **** 	{
1758:..\FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1759:..\FreeRTOS/queue.c **** 	}
1760:..\FreeRTOS/queue.c **** 
1761:..\FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1762:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1763:..\FreeRTOS/queue.c **** 
1764:..\FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1765:..\FreeRTOS/queue.c **** 
1766:..\FreeRTOS/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1767:..\FreeRTOS/queue.c **** 	{
1768:..\FreeRTOS/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1769:..\FreeRTOS/queue.c **** 	}
1770:..\FreeRTOS/queue.c **** 
1771:..\FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1772:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1773:..\FreeRTOS/queue.c **** 
1774:..\FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1775:..\FreeRTOS/queue.c **** 
1776:..\FreeRTOS/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
1777:..\FreeRTOS/queue.c **** 	{
1778:..\FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
1779:..\FreeRTOS/queue.c **** 	}
1780:..\FreeRTOS/queue.c **** 
1781:..\FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1782:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1783:..\FreeRTOS/queue.c **** 
1784:..\FreeRTOS/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
1785:..\FreeRTOS/queue.c **** {
1786:..\FreeRTOS/queue.c **** BaseType_t xReturn = pdFALSE;
1787:..\FreeRTOS/queue.c **** 
1788:..\FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
1789:..\FreeRTOS/queue.c **** 	{
1790:..\FreeRTOS/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
1791:..\FreeRTOS/queue.c **** 		{
1792:..\FreeRTOS/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1793:..\FreeRTOS/queue.c **** 			{
1794:..\FreeRTOS/queue.c **** 				/* The mutex is no longer being held. */
1795:..\FreeRTOS/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
1796:..\FreeRTOS/queue.c **** 				pxQueue->pxMutexHolder = NULL;
1797:..\FreeRTOS/queue.c **** 			}
1798:..\FreeRTOS/queue.c **** 			else
1799:..\FreeRTOS/queue.c **** 			{
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 33


1800:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1801:..\FreeRTOS/queue.c **** 			}
1802:..\FreeRTOS/queue.c **** 		}
1803:..\FreeRTOS/queue.c **** 		#endif /* configUSE_MUTEXES */
1804:..\FreeRTOS/queue.c **** 	}
1805:..\FreeRTOS/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
1806:..\FreeRTOS/queue.c **** 	{
1807:..\FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
1808:..\FreeRTOS/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
1809:..\FreeRTOS/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
1810:..\FreeRTOS/queue.c **** 		{
1811:..\FreeRTOS/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
1812:..\FreeRTOS/queue.c **** 		}
1813:..\FreeRTOS/queue.c **** 		else
1814:..\FreeRTOS/queue.c **** 		{
1815:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1816:..\FreeRTOS/queue.c **** 		}
1817:..\FreeRTOS/queue.c **** 	}
1818:..\FreeRTOS/queue.c **** 	else
1819:..\FreeRTOS/queue.c **** 	{
1820:..\FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
1821:..\FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
1822:..\FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
1823:..\FreeRTOS/queue.c **** 		{
1824:..\FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
1825:..\FreeRTOS/queue.c **** 		}
1826:..\FreeRTOS/queue.c **** 		else
1827:..\FreeRTOS/queue.c **** 		{
1828:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1829:..\FreeRTOS/queue.c **** 		}
1830:..\FreeRTOS/queue.c **** 
1831:..\FreeRTOS/queue.c **** 		if( xPosition == queueOVERWRITE )
1832:..\FreeRTOS/queue.c **** 		{
1833:..\FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1834:..\FreeRTOS/queue.c **** 			{
1835:..\FreeRTOS/queue.c **** 				/* An item is not being added but overwritten, so subtract
1836:..\FreeRTOS/queue.c **** 				one from the recorded number of items in the queue so when
1837:..\FreeRTOS/queue.c **** 				one is added again below the number of recorded items remains
1838:..\FreeRTOS/queue.c **** 				correct. */
1839:..\FreeRTOS/queue.c **** 				--( pxQueue->uxMessagesWaiting );
1840:..\FreeRTOS/queue.c **** 			}
1841:..\FreeRTOS/queue.c **** 			else
1842:..\FreeRTOS/queue.c **** 			{
1843:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1844:..\FreeRTOS/queue.c **** 			}
1845:..\FreeRTOS/queue.c **** 		}
1846:..\FreeRTOS/queue.c **** 		else
1847:..\FreeRTOS/queue.c **** 		{
1848:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1849:..\FreeRTOS/queue.c **** 		}
1850:..\FreeRTOS/queue.c **** 	}
1851:..\FreeRTOS/queue.c **** 
1852:..\FreeRTOS/queue.c **** 	++( pxQueue->uxMessagesWaiting );
1853:..\FreeRTOS/queue.c **** 
1854:..\FreeRTOS/queue.c **** 	return xReturn;
1855:..\FreeRTOS/queue.c **** }
1856:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 34


1857:..\FreeRTOS/queue.c **** 
1858:..\FreeRTOS/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
1859:..\FreeRTOS/queue.c **** {
1860:..\FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
1861:..\FreeRTOS/queue.c **** 	{
1862:..\FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
1863:..\FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
1864:..\FreeRTOS/queue.c **** 		{
1865:..\FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
1866:..\FreeRTOS/queue.c **** 		}
1867:..\FreeRTOS/queue.c **** 		else
1868:..\FreeRTOS/queue.c **** 		{
1869:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1870:..\FreeRTOS/queue.c **** 		}
1871:..\FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
1872:..\FreeRTOS/queue.c **** 	}
1873:..\FreeRTOS/queue.c **** }
1874:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1875:..\FreeRTOS/queue.c **** 
1876:..\FreeRTOS/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
1877:..\FreeRTOS/queue.c **** {
1878:..\FreeRTOS/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
1879:..\FreeRTOS/queue.c **** 
1880:..\FreeRTOS/queue.c **** 	/* The lock counts contains the number of extra data items placed or
1881:..\FreeRTOS/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
1882:..\FreeRTOS/queue.c **** 	locked items can be added or removed, but the event lists cannot be
1883:..\FreeRTOS/queue.c **** 	updated. */
1884:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
1885:..\FreeRTOS/queue.c **** 	{
1886:..\FreeRTOS/queue.c **** 		/* See if data was added to the queue while it was locked. */
1887:..\FreeRTOS/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
1888:..\FreeRTOS/queue.c **** 		{
1889:..\FreeRTOS/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
1890:..\FreeRTOS/queue.c **** 			blocked waiting for data to become available? */
1891:..\FreeRTOS/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
1892:..\FreeRTOS/queue.c **** 			{
1893:..\FreeRTOS/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
1894:..\FreeRTOS/queue.c **** 				{
1895:..\FreeRTOS/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) == pdTRUE )
1896:..\FreeRTOS/queue.c **** 					{
1897:..\FreeRTOS/queue.c **** 						/* The queue is a member of a queue set, and posting to
1898:..\FreeRTOS/queue.c **** 						the queue set caused a higher priority task to unblock.
1899:..\FreeRTOS/queue.c **** 						A context switch is required. */
1900:..\FreeRTOS/queue.c **** 						vTaskMissedYield();
1901:..\FreeRTOS/queue.c **** 					}
1902:..\FreeRTOS/queue.c **** 					else
1903:..\FreeRTOS/queue.c **** 					{
1904:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1905:..\FreeRTOS/queue.c **** 					}
1906:..\FreeRTOS/queue.c **** 				}
1907:..\FreeRTOS/queue.c **** 				else
1908:..\FreeRTOS/queue.c **** 				{
1909:..\FreeRTOS/queue.c **** 					/* Tasks that are removed from the event list will get added to
1910:..\FreeRTOS/queue.c **** 					the pending ready list as the scheduler is still suspended. */
1911:..\FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1912:..\FreeRTOS/queue.c **** 					{
1913:..\FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 35


1914:..\FreeRTOS/queue.c **** 						{
1915:..\FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
1916:..\FreeRTOS/queue.c **** 							context	switch is required. */
1917:..\FreeRTOS/queue.c **** 							vTaskMissedYield();
1918:..\FreeRTOS/queue.c **** 						}
1919:..\FreeRTOS/queue.c **** 						else
1920:..\FreeRTOS/queue.c **** 						{
1921:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1922:..\FreeRTOS/queue.c **** 						}
1923:..\FreeRTOS/queue.c **** 					}
1924:..\FreeRTOS/queue.c **** 					else
1925:..\FreeRTOS/queue.c **** 					{
1926:..\FreeRTOS/queue.c **** 						break;
1927:..\FreeRTOS/queue.c **** 					}
1928:..\FreeRTOS/queue.c **** 				}
1929:..\FreeRTOS/queue.c **** 			}
1930:..\FreeRTOS/queue.c **** 			#else /* configUSE_QUEUE_SETS */
1931:..\FreeRTOS/queue.c **** 			{
1932:..\FreeRTOS/queue.c **** 				/* Tasks that are removed from the event list will get added to
1933:..\FreeRTOS/queue.c **** 				the pending ready list as the scheduler is still suspended. */
1934:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1935:..\FreeRTOS/queue.c **** 				{
1936:..\FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1937:..\FreeRTOS/queue.c **** 					{
1938:..\FreeRTOS/queue.c **** 						/* The task waiting has a higher priority so record that a
1939:..\FreeRTOS/queue.c **** 						context	switch is required. */
1940:..\FreeRTOS/queue.c **** 						vTaskMissedYield();
1941:..\FreeRTOS/queue.c **** 					}
1942:..\FreeRTOS/queue.c **** 					else
1943:..\FreeRTOS/queue.c **** 					{
1944:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1945:..\FreeRTOS/queue.c **** 					}
1946:..\FreeRTOS/queue.c **** 				}
1947:..\FreeRTOS/queue.c **** 				else
1948:..\FreeRTOS/queue.c **** 				{
1949:..\FreeRTOS/queue.c **** 					break;
1950:..\FreeRTOS/queue.c **** 				}
1951:..\FreeRTOS/queue.c **** 			}
1952:..\FreeRTOS/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
1953:..\FreeRTOS/queue.c **** 
1954:..\FreeRTOS/queue.c **** 			--( pxQueue->xTxLock );
1955:..\FreeRTOS/queue.c **** 		}
1956:..\FreeRTOS/queue.c **** 
1957:..\FreeRTOS/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
1958:..\FreeRTOS/queue.c **** 	}
1959:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
1960:..\FreeRTOS/queue.c **** 
1961:..\FreeRTOS/queue.c **** 	/* Do the same for the Rx lock. */
1962:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
1963:..\FreeRTOS/queue.c **** 	{
1964:..\FreeRTOS/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
1965:..\FreeRTOS/queue.c **** 		{
1966:..\FreeRTOS/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1967:..\FreeRTOS/queue.c **** 			{
1968:..\FreeRTOS/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1969:..\FreeRTOS/queue.c **** 				{
1970:..\FreeRTOS/queue.c **** 					vTaskMissedYield();
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 36


1971:..\FreeRTOS/queue.c **** 				}
1972:..\FreeRTOS/queue.c **** 				else
1973:..\FreeRTOS/queue.c **** 				{
1974:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1975:..\FreeRTOS/queue.c **** 				}
1976:..\FreeRTOS/queue.c **** 
1977:..\FreeRTOS/queue.c **** 				--( pxQueue->xRxLock );
1978:..\FreeRTOS/queue.c **** 			}
1979:..\FreeRTOS/queue.c **** 			else
1980:..\FreeRTOS/queue.c **** 			{
1981:..\FreeRTOS/queue.c **** 				break;
1982:..\FreeRTOS/queue.c **** 			}
1983:..\FreeRTOS/queue.c **** 		}
1984:..\FreeRTOS/queue.c **** 
1985:..\FreeRTOS/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
1986:..\FreeRTOS/queue.c **** 	}
1987:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
1988:..\FreeRTOS/queue.c **** }
1989:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1990:..\FreeRTOS/queue.c **** 
1991:..\FreeRTOS/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
1992:..\FreeRTOS/queue.c **** {
1993:..\FreeRTOS/queue.c **** BaseType_t xReturn;
1994:..\FreeRTOS/queue.c **** 
1995:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
1996:..\FreeRTOS/queue.c **** 	{
1997:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
1998:..\FreeRTOS/queue.c **** 		{
1999:..\FreeRTOS/queue.c **** 			xReturn = pdTRUE;
2000:..\FreeRTOS/queue.c **** 		}
2001:..\FreeRTOS/queue.c **** 		else
2002:..\FreeRTOS/queue.c **** 		{
2003:..\FreeRTOS/queue.c **** 			xReturn = pdFALSE;
2004:..\FreeRTOS/queue.c **** 		}
2005:..\FreeRTOS/queue.c **** 	}
2006:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
2007:..\FreeRTOS/queue.c **** 
2008:..\FreeRTOS/queue.c **** 	return xReturn;
2009:..\FreeRTOS/queue.c **** }
2010:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2011:..\FreeRTOS/queue.c **** 
2012:..\FreeRTOS/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2013:..\FreeRTOS/queue.c **** {
2014:..\FreeRTOS/queue.c **** BaseType_t xReturn;
2015:..\FreeRTOS/queue.c **** 
2016:..\FreeRTOS/queue.c **** 	configASSERT( xQueue );
2017:..\FreeRTOS/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
2018:..\FreeRTOS/queue.c **** 	{
2019:..\FreeRTOS/queue.c **** 		xReturn = pdTRUE;
2020:..\FreeRTOS/queue.c **** 	}
2021:..\FreeRTOS/queue.c **** 	else
2022:..\FreeRTOS/queue.c **** 	{
2023:..\FreeRTOS/queue.c **** 		xReturn = pdFALSE;
2024:..\FreeRTOS/queue.c **** 	}
2025:..\FreeRTOS/queue.c **** 
2026:..\FreeRTOS/queue.c **** 	return xReturn;
2027:..\FreeRTOS/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 37


2028:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2029:..\FreeRTOS/queue.c **** 
2030:..\FreeRTOS/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2031:..\FreeRTOS/queue.c **** {
  26              		.loc 1 2031 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 10B5     		push	{r4, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 0446     		mov	r4, r0
2032:..\FreeRTOS/queue.c **** BaseType_t xReturn;
2033:..\FreeRTOS/queue.c **** 
2034:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
  36              		.loc 1 2034 0
  37 0004 FFF7FEFF 		bl	vPortEnterCritical
  38              	.LVL1:
2035:..\FreeRTOS/queue.c **** 	{
2036:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  39              		.loc 1 2036 0
  40 0008 A26B     		ldr	r2, [r4, #56]
  41 000a E36B     		ldr	r3, [r4, #60]
  42 000c 9A42     		cmp	r2, r3
  43 000e 01D1     		bne	.L3
2037:..\FreeRTOS/queue.c **** 		{
2038:..\FreeRTOS/queue.c **** 			xReturn = pdTRUE;
  44              		.loc 1 2038 0
  45 0010 0124     		movs	r4, #1
  46              	.LVL2:
  47 0012 00E0     		b	.L2
  48              	.LVL3:
  49              	.L3:
2039:..\FreeRTOS/queue.c **** 		}
2040:..\FreeRTOS/queue.c **** 		else
2041:..\FreeRTOS/queue.c **** 		{
2042:..\FreeRTOS/queue.c **** 			xReturn = pdFALSE;
  50              		.loc 1 2042 0
  51 0014 0024     		movs	r4, #0
  52              	.LVL4:
  53              	.L2:
2043:..\FreeRTOS/queue.c **** 		}
2044:..\FreeRTOS/queue.c **** 	}
2045:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
  54              		.loc 1 2045 0
  55 0016 FFF7FEFF 		bl	vPortExitCritical
  56              	.LVL5:
2046:..\FreeRTOS/queue.c **** 
2047:..\FreeRTOS/queue.c **** 	return xReturn;
2048:..\FreeRTOS/queue.c **** }
  57              		.loc 1 2048 0
  58 001a 2046     		mov	r0, r4
  59 001c 10BD     		pop	{r4, pc}
  60              		.cfi_endproc
  61              	.LFE85:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 38


  62              		.size	prvIsQueueFull, .-prvIsQueueFull
  63 001e 00BF     		.section	.text.prvIsQueueEmpty,"ax",%progbits
  64              		.align	2
  65              		.thumb
  66              		.thumb_func
  67              		.type	prvIsQueueEmpty, %function
  68              	prvIsQueueEmpty:
  69              	.LFB83:
1992:..\FreeRTOS/queue.c **** BaseType_t xReturn;
  70              		.loc 1 1992 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              	.LVL6:
  75 0000 10B5     		push	{r4, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 4, -8
  78              		.cfi_offset 14, -4
  79 0002 0446     		mov	r4, r0
1995:..\FreeRTOS/queue.c **** 	{
  80              		.loc 1 1995 0
  81 0004 FFF7FEFF 		bl	vPortEnterCritical
  82              	.LVL7:
1997:..\FreeRTOS/queue.c **** 		{
  83              		.loc 1 1997 0
  84 0008 A36B     		ldr	r3, [r4, #56]
  85 000a 0BB9     		cbnz	r3, .L7
1999:..\FreeRTOS/queue.c **** 		}
  86              		.loc 1 1999 0
  87 000c 0124     		movs	r4, #1
  88              	.LVL8:
  89 000e 00E0     		b	.L6
  90              	.LVL9:
  91              	.L7:
2003:..\FreeRTOS/queue.c **** 		}
  92              		.loc 1 2003 0
  93 0010 0024     		movs	r4, #0
  94              	.LVL10:
  95              	.L6:
2006:..\FreeRTOS/queue.c **** 
  96              		.loc 1 2006 0
  97 0012 FFF7FEFF 		bl	vPortExitCritical
  98              	.LVL11:
2009:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
  99              		.loc 1 2009 0
 100 0016 2046     		mov	r0, r4
 101 0018 10BD     		pop	{r4, pc}
 102              		.cfi_endproc
 103              	.LFE83:
 104              		.size	prvIsQueueEmpty, .-prvIsQueueEmpty
 105 001a 00BF     		.section	.text.prvCopyDataToQueue,"ax",%progbits
 106              		.align	2
 107              		.thumb
 108              		.thumb_func
 109              		.type	prvCopyDataToQueue, %function
 110              	prvCopyDataToQueue:
 111              	.LFB80:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 39


1785:..\FreeRTOS/queue.c **** BaseType_t xReturn = pdFALSE;
 112              		.loc 1 1785 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              	.LVL12:
 117 0000 38B5     		push	{r3, r4, r5, lr}
 118              		.cfi_def_cfa_offset 16
 119              		.cfi_offset 3, -16
 120              		.cfi_offset 4, -12
 121              		.cfi_offset 5, -8
 122              		.cfi_offset 14, -4
 123 0002 0446     		mov	r4, r0
 124 0004 1546     		mov	r5, r2
 125              	.LVL13:
1788:..\FreeRTOS/queue.c **** 	{
 126              		.loc 1 1788 0
 127 0006 026C     		ldr	r2, [r0, #64]
 128              	.LVL14:
 129 0008 3AB9     		cbnz	r2, .L10
1792:..\FreeRTOS/queue.c **** 			{
 130              		.loc 1 1792 0
 131 000a 0368     		ldr	r3, [r0]
 132 000c 5BBB     		cbnz	r3, .L14
1795:..\FreeRTOS/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 133              		.loc 1 1795 0
 134 000e 4068     		ldr	r0, [r0, #4]
 135              	.LVL15:
 136 0010 FFF7FEFF 		bl	xTaskPriorityDisinherit
 137              	.LVL16:
1796:..\FreeRTOS/queue.c **** 			}
 138              		.loc 1 1796 0
 139 0014 0023     		movs	r3, #0
 140 0016 6360     		str	r3, [r4, #4]
 141 0018 2CE0     		b	.L11
 142              	.LVL17:
 143              	.L10:
1805:..\FreeRTOS/queue.c **** 	{
 144              		.loc 1 1805 0
 145 001a 6DB9     		cbnz	r5, .L12
1807:..\FreeRTOS/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 146              		.loc 1 1807 0
 147 001c 8068     		ldr	r0, [r0, #8]
 148              	.LVL18:
 149 001e FFF7FEFF 		bl	memcpy
 150              	.LVL19:
1808:..\FreeRTOS/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 151              		.loc 1 1808 0
 152 0022 A268     		ldr	r2, [r4, #8]
 153 0024 236C     		ldr	r3, [r4, #64]
 154 0026 1344     		add	r3, r3, r2
 155 0028 A360     		str	r3, [r4, #8]
1809:..\FreeRTOS/queue.c **** 		{
 156              		.loc 1 1809 0
 157 002a 6268     		ldr	r2, [r4, #4]
 158 002c 9342     		cmp	r3, r2
 159 002e 1CD3     		bcc	.L15
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 40


1811:..\FreeRTOS/queue.c **** 		}
 160              		.loc 1 1811 0
 161 0030 2368     		ldr	r3, [r4]
 162 0032 A360     		str	r3, [r4, #8]
1786:..\FreeRTOS/queue.c **** 
 163              		.loc 1 1786 0
 164 0034 0020     		movs	r0, #0
 165 0036 1DE0     		b	.L11
 166              	.LVL20:
 167              	.L12:
1820:..\FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 168              		.loc 1 1820 0
 169 0038 C068     		ldr	r0, [r0, #12]
 170              	.LVL21:
 171 003a FFF7FEFF 		bl	memcpy
 172              	.LVL22:
1821:..\FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 173              		.loc 1 1821 0
 174 003e 236C     		ldr	r3, [r4, #64]
 175 0040 5B42     		negs	r3, r3
 176 0042 E268     		ldr	r2, [r4, #12]
 177 0044 1A44     		add	r2, r2, r3
 178 0046 E260     		str	r2, [r4, #12]
1822:..\FreeRTOS/queue.c **** 		{
 179              		.loc 1 1822 0
 180 0048 2168     		ldr	r1, [r4]
 181 004a 8A42     		cmp	r2, r1
 182 004c 02D2     		bcs	.L13
1824:..\FreeRTOS/queue.c **** 		}
 183              		.loc 1 1824 0
 184 004e 6268     		ldr	r2, [r4, #4]
 185 0050 1344     		add	r3, r3, r2
 186 0052 E360     		str	r3, [r4, #12]
 187              	.L13:
1831:..\FreeRTOS/queue.c **** 		{
 188              		.loc 1 1831 0
 189 0054 022D     		cmp	r5, #2
 190 0056 0AD1     		bne	.L16
1833:..\FreeRTOS/queue.c **** 			{
 191              		.loc 1 1833 0
 192 0058 A36B     		ldr	r3, [r4, #56]
 193 005a 53B1     		cbz	r3, .L17
1839:..\FreeRTOS/queue.c **** 			}
 194              		.loc 1 1839 0
 195 005c A36B     		ldr	r3, [r4, #56]
 196 005e 013B     		subs	r3, r3, #1
 197 0060 A363     		str	r3, [r4, #56]
1786:..\FreeRTOS/queue.c **** 
 198              		.loc 1 1786 0
 199 0062 0020     		movs	r0, #0
 200 0064 06E0     		b	.L11
 201              	.LVL23:
 202              	.L14:
 203 0066 0020     		movs	r0, #0
 204              	.LVL24:
 205 0068 04E0     		b	.L11
 206              	.LVL25:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 41


 207              	.L15:
 208 006a 0020     		movs	r0, #0
 209 006c 02E0     		b	.L11
 210              	.L16:
 211 006e 0020     		movs	r0, #0
 212 0070 00E0     		b	.L11
 213              	.L17:
 214 0072 0020     		movs	r0, #0
 215              	.LVL26:
 216              	.L11:
1852:..\FreeRTOS/queue.c **** 
 217              		.loc 1 1852 0
 218 0074 A36B     		ldr	r3, [r4, #56]
 219 0076 0133     		adds	r3, r3, #1
 220 0078 A363     		str	r3, [r4, #56]
1855:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 221              		.loc 1 1855 0
 222 007a 38BD     		pop	{r3, r4, r5, pc}
 223              		.cfi_endproc
 224              	.LFE80:
 225              		.size	prvCopyDataToQueue, .-prvCopyDataToQueue
 226              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 227              		.align	2
 228              		.thumb
 229              		.thumb_func
 230              		.type	prvCopyDataFromQueue, %function
 231              	prvCopyDataFromQueue:
 232              	.LFB81:
1859:..\FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 233              		.loc 1 1859 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              	.LVL27:
1860:..\FreeRTOS/queue.c **** 	{
 238              		.loc 1 1860 0
 239 0000 026C     		ldr	r2, [r0, #64]
 240 0002 72B1     		cbz	r2, .L23
1859:..\FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 241              		.loc 1 1859 0
 242 0004 10B5     		push	{r4, lr}
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 4, -8
 245              		.cfi_offset 14, -4
1862:..\FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 246              		.loc 1 1862 0
 247 0006 C368     		ldr	r3, [r0, #12]
 248 0008 1344     		add	r3, r3, r2
 249 000a C360     		str	r3, [r0, #12]
1863:..\FreeRTOS/queue.c **** 		{
 250              		.loc 1 1863 0
 251 000c 4468     		ldr	r4, [r0, #4]
 252 000e A342     		cmp	r3, r4
 253 0010 01D3     		bcc	.L21
1865:..\FreeRTOS/queue.c **** 		}
 254              		.loc 1 1865 0
 255 0012 0368     		ldr	r3, [r0]
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 42


 256 0014 C360     		str	r3, [r0, #12]
 257              	.L21:
 258 0016 0346     		mov	r3, r0
1871:..\FreeRTOS/queue.c **** 	}
 259              		.loc 1 1871 0
 260 0018 0846     		mov	r0, r1
 261              	.LVL28:
 262 001a D968     		ldr	r1, [r3, #12]
 263              	.LVL29:
 264 001c FFF7FEFF 		bl	memcpy
 265              	.LVL30:
 266 0020 10BD     		pop	{r4, pc}
 267              	.LVL31:
 268              	.L23:
 269              		.cfi_def_cfa_offset 0
 270              		.cfi_restore 4
 271              		.cfi_restore 14
 272 0022 7047     		bx	lr
 273              		.cfi_endproc
 274              	.LFE81:
 275              		.size	prvCopyDataFromQueue, .-prvCopyDataFromQueue
 276              		.section	.text.prvUnlockQueue,"ax",%progbits
 277              		.align	2
 278              		.thumb
 279              		.thumb_func
 280              		.type	prvUnlockQueue, %function
 281              	prvUnlockQueue:
 282              	.LFB82:
1877:..\FreeRTOS/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 283              		.loc 1 1877 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              	.LVL32:
 288 0000 10B5     		push	{r4, lr}
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 4, -8
 291              		.cfi_offset 14, -4
 292 0002 0446     		mov	r4, r0
1884:..\FreeRTOS/queue.c **** 	{
 293              		.loc 1 1884 0
 294 0004 FFF7FEFF 		bl	vPortEnterCritical
 295              	.LVL33:
1887:..\FreeRTOS/queue.c **** 		{
 296              		.loc 1 1887 0
 297 0008 0BE0     		b	.L25
 298              	.L28:
1934:..\FreeRTOS/queue.c **** 				{
 299              		.loc 1 1934 0
 300 000a 636A     		ldr	r3, [r4, #36]
 301 000c 63B1     		cbz	r3, .L26
1936:..\FreeRTOS/queue.c **** 					{
 302              		.loc 1 1936 0
 303 000e 04F12400 		add	r0, r4, #36
 304 0012 FFF7FEFF 		bl	xTaskRemoveFromEventList
 305              	.LVL34:
 306 0016 08B1     		cbz	r0, .L27
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 43


1940:..\FreeRTOS/queue.c **** 					}
 307              		.loc 1 1940 0
 308 0018 FFF7FEFF 		bl	vTaskMissedYield
 309              	.LVL35:
 310              	.L27:
1954:..\FreeRTOS/queue.c **** 		}
 311              		.loc 1 1954 0
 312 001c A36C     		ldr	r3, [r4, #72]
 313 001e 013B     		subs	r3, r3, #1
 314 0020 A364     		str	r3, [r4, #72]
 315              	.L25:
1887:..\FreeRTOS/queue.c **** 		{
 316              		.loc 1 1887 0
 317 0022 A36C     		ldr	r3, [r4, #72]
 318 0024 002B     		cmp	r3, #0
 319 0026 F0DC     		bgt	.L28
 320              	.L26:
1957:..\FreeRTOS/queue.c **** 	}
 321              		.loc 1 1957 0
 322 0028 4FF0FF33 		mov	r3, #-1
 323 002c A364     		str	r3, [r4, #72]
1959:..\FreeRTOS/queue.c **** 
 324              		.loc 1 1959 0
 325 002e FFF7FEFF 		bl	vPortExitCritical
 326              	.LVL36:
1962:..\FreeRTOS/queue.c **** 	{
 327              		.loc 1 1962 0
 328 0032 FFF7FEFF 		bl	vPortEnterCritical
 329              	.LVL37:
1964:..\FreeRTOS/queue.c **** 		{
 330              		.loc 1 1964 0
 331 0036 0BE0     		b	.L29
 332              	.L32:
1966:..\FreeRTOS/queue.c **** 			{
 333              		.loc 1 1966 0
 334 0038 2369     		ldr	r3, [r4, #16]
 335 003a 63B1     		cbz	r3, .L30
1968:..\FreeRTOS/queue.c **** 				{
 336              		.loc 1 1968 0
 337 003c 04F11000 		add	r0, r4, #16
 338 0040 FFF7FEFF 		bl	xTaskRemoveFromEventList
 339              	.LVL38:
 340 0044 08B1     		cbz	r0, .L31
1970:..\FreeRTOS/queue.c **** 				}
 341              		.loc 1 1970 0
 342 0046 FFF7FEFF 		bl	vTaskMissedYield
 343              	.LVL39:
 344              	.L31:
1977:..\FreeRTOS/queue.c **** 			}
 345              		.loc 1 1977 0
 346 004a 636C     		ldr	r3, [r4, #68]
 347 004c 013B     		subs	r3, r3, #1
 348 004e 6364     		str	r3, [r4, #68]
 349              	.L29:
1964:..\FreeRTOS/queue.c **** 		{
 350              		.loc 1 1964 0
 351 0050 636C     		ldr	r3, [r4, #68]
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 44


 352 0052 002B     		cmp	r3, #0
 353 0054 F0DC     		bgt	.L32
 354              	.L30:
1985:..\FreeRTOS/queue.c **** 	}
 355              		.loc 1 1985 0
 356 0056 4FF0FF33 		mov	r3, #-1
 357 005a 6364     		str	r3, [r4, #68]
1987:..\FreeRTOS/queue.c **** }
 358              		.loc 1 1987 0
 359 005c FFF7FEFF 		bl	vPortExitCritical
 360              	.LVL40:
 361 0060 10BD     		pop	{r4, pc}
 362              		.cfi_endproc
 363              	.LFE82:
 364              		.size	prvUnlockQueue, .-prvUnlockQueue
 365 0062 00BF     		.section	.text.xQueueGenericReset,"ax",%progbits
 366              		.align	2
 367              		.global	xQueueGenericReset
 368              		.thumb
 369              		.thumb_func
 370              		.type	xQueueGenericReset, %function
 371              	xQueueGenericReset:
 372              	.LFB64:
 261:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 373              		.loc 1 261 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              	.LVL41:
 378 0000 38B5     		push	{r3, r4, r5, lr}
 379              		.cfi_def_cfa_offset 16
 380              		.cfi_offset 3, -16
 381              		.cfi_offset 4, -12
 382              		.cfi_offset 5, -8
 383              		.cfi_offset 14, -4
 384 0002 0446     		mov	r4, r0
 385 0004 0D46     		mov	r5, r1
 386              	.LVL42:
 266:..\FreeRTOS/queue.c **** 	{
 387              		.loc 1 266 0
 388 0006 FFF7FEFF 		bl	vPortEnterCritical
 389              	.LVL43:
 268:..\FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 390              		.loc 1 268 0
 391 000a 2168     		ldr	r1, [r4]
 392 000c E26B     		ldr	r2, [r4, #60]
 393 000e 236C     		ldr	r3, [r4, #64]
 394 0010 03FB0210 		mla	r0, r3, r2, r1
 395 0014 6060     		str	r0, [r4, #4]
 269:..\FreeRTOS/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 396              		.loc 1 269 0
 397 0016 0020     		movs	r0, #0
 398 0018 A063     		str	r0, [r4, #56]
 270:..\FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 399              		.loc 1 270 0
 400 001a A160     		str	r1, [r4, #8]
 271:..\FreeRTOS/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 45


 401              		.loc 1 271 0
 402 001c 013A     		subs	r2, r2, #1
 403 001e 02FB0313 		mla	r3, r2, r3, r1
 404 0022 E360     		str	r3, [r4, #12]
 272:..\FreeRTOS/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 405              		.loc 1 272 0
 406 0024 4FF0FF33 		mov	r3, #-1
 407 0028 6364     		str	r3, [r4, #68]
 273:..\FreeRTOS/queue.c **** 
 408              		.loc 1 273 0
 409 002a A364     		str	r3, [r4, #72]
 275:..\FreeRTOS/queue.c **** 		{
 410              		.loc 1 275 0
 411 002c 55B9     		cbnz	r5, .L35
 282:..\FreeRTOS/queue.c **** 			{
 412              		.loc 1 282 0
 413 002e 2369     		ldr	r3, [r4, #16]
 414 0030 83B1     		cbz	r3, .L36
 284:..\FreeRTOS/queue.c **** 				{
 415              		.loc 1 284 0
 416 0032 04F11000 		add	r0, r4, #16
 417 0036 FFF7FEFF 		bl	xTaskRemoveFromEventList
 418              	.LVL44:
 419 003a 0128     		cmp	r0, #1
 420 003c 0AD1     		bne	.L36
 286:..\FreeRTOS/queue.c **** 				}
 421              		.loc 1 286 0
 422 003e FFF7FEFF 		bl	vPortYield
 423              	.LVL45:
 424 0042 07E0     		b	.L36
 425              	.L35:
 301:..\FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 426              		.loc 1 301 0
 427 0044 04F11000 		add	r0, r4, #16
 428 0048 FFF7FEFF 		bl	vListInitialise
 429              	.LVL46:
 302:..\FreeRTOS/queue.c **** 		}
 430              		.loc 1 302 0
 431 004c 04F12400 		add	r0, r4, #36
 432 0050 FFF7FEFF 		bl	vListInitialise
 433              	.LVL47:
 434              	.L36:
 305:..\FreeRTOS/queue.c **** 
 435              		.loc 1 305 0
 436 0054 FFF7FEFF 		bl	vPortExitCritical
 437              	.LVL48:
 310:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 438              		.loc 1 310 0
 439 0058 0120     		movs	r0, #1
 440 005a 38BD     		pop	{r3, r4, r5, pc}
 441              		.cfi_endproc
 442              	.LFE64:
 443              		.size	xQueueGenericReset, .-xQueueGenericReset
 444              		.section	.text.xQueueGenericCreate,"ax",%progbits
 445              		.align	2
 446              		.global	xQueueGenericCreate
 447              		.thumb
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 46


 448              		.thumb_func
 449              		.type	xQueueGenericCreate, %function
 450              	xQueueGenericCreate:
 451              	.LFB65:
 314:..\FreeRTOS/queue.c **** Queue_t *pxNewQueue;
 452              		.loc 1 314 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              	.LVL49:
 457 0000 70B5     		push	{r4, r5, r6, lr}
 458              		.cfi_def_cfa_offset 16
 459              		.cfi_offset 4, -16
 460              		.cfi_offset 5, -12
 461              		.cfi_offset 6, -8
 462              		.cfi_offset 14, -4
 463 0002 0646     		mov	r6, r0
 464              	.LVL50:
 325:..\FreeRTOS/queue.c **** 	{
 465              		.loc 1 325 0
 466 0004 0D46     		mov	r5, r1
 467 0006 19B1     		cbz	r1, .L43
 334:..\FreeRTOS/queue.c **** 	}
 468              		.loc 1 334 0
 469 0008 01FB00F0 		mul	r0, r1, r0
 470              	.LVL51:
 471 000c 0130     		adds	r0, r0, #1
 472              	.LVL52:
 473 000e 00E0     		b	.L39
 474              	.LVL53:
 475              	.L43:
 328:..\FreeRTOS/queue.c **** 	}
 476              		.loc 1 328 0
 477 0010 0020     		movs	r0, #0
 478              	.LVL54:
 479              	.L39:
 338:..\FreeRTOS/queue.c **** 
 480              		.loc 1 338 0
 481 0012 4C30     		adds	r0, r0, #76
 482              	.LVL55:
 483 0014 FFF7FEFF 		bl	pvPortMalloc
 484              	.LVL56:
 340:..\FreeRTOS/queue.c **** 	{
 485              		.loc 1 340 0
 486 0018 0446     		mov	r4, r0
 487 001a 58B1     		cbz	r0, .L40
 342:..\FreeRTOS/queue.c **** 		{
 488              		.loc 1 342 0
 489 001c 0DB9     		cbnz	r5, .L41
 348:..\FreeRTOS/queue.c **** 		}
 490              		.loc 1 348 0
 491 001e 2060     		str	r0, [r4]
 492 0020 02E0     		b	.L42
 493              	.L41:
 354:..\FreeRTOS/queue.c **** 		}
 494              		.loc 1 354 0
 495 0022 00F14C03 		add	r3, r0, #76
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 47


 496 0026 0360     		str	r3, [r0]
 497              	.L42:
 359:..\FreeRTOS/queue.c **** 		pxNewQueue->uxItemSize = uxItemSize;
 498              		.loc 1 359 0
 499 0028 E663     		str	r6, [r4, #60]
 360:..\FreeRTOS/queue.c **** 		( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 500              		.loc 1 360 0
 501 002a 2564     		str	r5, [r4, #64]
 361:..\FreeRTOS/queue.c **** 
 502              		.loc 1 361 0
 503 002c 2046     		mov	r0, r4
 504              	.LVL57:
 505 002e 0121     		movs	r1, #1
 506 0030 FFF7FEFF 		bl	xQueueGenericReset
 507              	.LVL58:
 508              	.L40:
 386:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 509              		.loc 1 386 0
 510 0034 2046     		mov	r0, r4
 511 0036 70BD     		pop	{r4, r5, r6, pc}
 512              		.cfi_endproc
 513              	.LFE65:
 514              		.size	xQueueGenericCreate, .-xQueueGenericCreate
 515              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 516              		.align	2
 517              		.global	xQueueCreateCountingSemaphore
 518              		.thumb
 519              		.thumb_func
 520              		.type	xQueueCreateCountingSemaphore, %function
 521              	xQueueCreateCountingSemaphore:
 522              	.LFB69:
 583:..\FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 523              		.loc 1 583 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527              	.LVL59:
 528 0000 10B5     		push	{r4, lr}
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 4, -8
 531              		.cfi_offset 14, -4
 532 0002 0C46     		mov	r4, r1
 589:..\FreeRTOS/queue.c **** 
 533              		.loc 1 589 0
 534 0004 0021     		movs	r1, #0
 535              	.LVL60:
 536 0006 0222     		movs	r2, #2
 537 0008 FFF7FEFF 		bl	xQueueGenericCreate
 538              	.LVL61:
 591:..\FreeRTOS/queue.c **** 		{
 539              		.loc 1 591 0
 540 000c 0346     		mov	r3, r0
 541 000e 00B1     		cbz	r0, .L46
 593:..\FreeRTOS/queue.c **** 
 542              		.loc 1 593 0
 543 0010 8463     		str	r4, [r0, #56]
 544              	.L46:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 48


 604:..\FreeRTOS/queue.c **** 
 545              		.loc 1 604 0
 546 0012 1846     		mov	r0, r3
 547              	.LVL62:
 548 0014 10BD     		pop	{r4, pc}
 549              		.cfi_endproc
 550              	.LFE69:
 551              		.size	xQueueCreateCountingSemaphore, .-xQueueCreateCountingSemaphore
 552 0016 00BF     		.section	.text.xQueueGenericSend,"ax",%progbits
 553              		.align	2
 554              		.global	xQueueGenericSend
 555              		.thumb
 556              		.thumb_func
 557              		.type	xQueueGenericSend, %function
 558              	xQueueGenericSend:
 559              	.LFB70:
 610:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 560              		.loc 1 610 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 16
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564              	.LVL63:
 565 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 566              		.cfi_def_cfa_offset 20
 567              		.cfi_offset 4, -20
 568              		.cfi_offset 5, -16
 569              		.cfi_offset 6, -12
 570              		.cfi_offset 7, -8
 571              		.cfi_offset 14, -4
 572 0002 85B0     		sub	sp, sp, #20
 573              		.cfi_def_cfa_offset 40
 574 0004 0446     		mov	r4, r0
 575 0006 0F46     		mov	r7, r1
 576 0008 0192     		str	r2, [sp, #4]
 577 000a 1E46     		mov	r6, r3
 578              	.LVL64:
 611:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 579              		.loc 1 611 0
 580 000c 0025     		movs	r5, #0
 581              	.LVL65:
 582              	.L49:
 630:..\FreeRTOS/queue.c **** 		{
 583              		.loc 1 630 0
 584 000e FFF7FEFF 		bl	vPortEnterCritical
 585              	.LVL66:
 636:..\FreeRTOS/queue.c **** 			{
 586              		.loc 1 636 0
 587 0012 A26B     		ldr	r2, [r4, #56]
 588 0014 E36B     		ldr	r3, [r4, #60]
 589 0016 9A42     		cmp	r2, r3
 590 0018 01D3     		bcc	.L50
 636:..\FreeRTOS/queue.c **** 			{
 591              		.loc 1 636 0 is_stmt 0 discriminator 1
 592 001a 022E     		cmp	r6, #2
 593 001c 16D1     		bne	.L51
 594              	.L50:
 639:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 49


 595              		.loc 1 639 0 is_stmt 1
 596 001e 2046     		mov	r0, r4
 597 0020 3946     		mov	r1, r7
 598 0022 3246     		mov	r2, r6
 599 0024 FFF7FEFF 		bl	prvCopyDataToQueue
 600              	.LVL67:
 694:..\FreeRTOS/queue.c **** 					{
 601              		.loc 1 694 0
 602 0028 636A     		ldr	r3, [r4, #36]
 603 002a 43B1     		cbz	r3, .L52
 696:..\FreeRTOS/queue.c **** 						{
 604              		.loc 1 696 0
 605 002c 04F12400 		add	r0, r4, #36
 606              	.LVL68:
 607 0030 FFF7FEFF 		bl	xTaskRemoveFromEventList
 608              	.LVL69:
 609 0034 0128     		cmp	r0, #1
 610 0036 05D1     		bne	.L53
 702:..\FreeRTOS/queue.c **** 						}
 611              		.loc 1 702 0
 612 0038 FFF7FEFF 		bl	vPortYield
 613              	.LVL70:
 614 003c 02E0     		b	.L53
 615              	.LVL71:
 616              	.L52:
 709:..\FreeRTOS/queue.c **** 					{
 617              		.loc 1 709 0
 618 003e 08B1     		cbz	r0, .L53
 715:..\FreeRTOS/queue.c **** 					}
 619              		.loc 1 715 0
 620 0040 FFF7FEFF 		bl	vPortYield
 621              	.LVL72:
 622              	.L53:
 724:..\FreeRTOS/queue.c **** 				return pdPASS;
 623              		.loc 1 724 0
 624 0044 FFF7FEFF 		bl	vPortExitCritical
 625              	.LVL73:
 725:..\FreeRTOS/queue.c **** 			}
 626              		.loc 1 725 0
 627 0048 0120     		movs	r0, #1
 628 004a 42E0     		b	.L54
 629              	.L51:
 729:..\FreeRTOS/queue.c **** 				{
 630              		.loc 1 729 0
 631 004c 019B     		ldr	r3, [sp, #4]
 632 004e 1BB9     		cbnz	r3, .L55
 733:..\FreeRTOS/queue.c **** 
 633              		.loc 1 733 0
 634 0050 FFF7FEFF 		bl	vPortExitCritical
 635              	.LVL74:
 738:..\FreeRTOS/queue.c **** 				}
 636              		.loc 1 738 0
 637 0054 0020     		movs	r0, #0
 638 0056 3CE0     		b	.L54
 639              	.L55:
 740:..\FreeRTOS/queue.c **** 				{
 640              		.loc 1 740 0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 50


 641 0058 1DB9     		cbnz	r5, .L56
 744:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 642              		.loc 1 744 0
 643 005a 02A8     		add	r0, sp, #8
 644 005c FFF7FEFF 		bl	vTaskSetTimeOutState
 645              	.LVL75:
 745:..\FreeRTOS/queue.c **** 				}
 646              		.loc 1 745 0
 647 0060 0125     		movs	r5, #1
 648              	.LVL76:
 649              	.L56:
 754:..\FreeRTOS/queue.c **** 
 650              		.loc 1 754 0
 651 0062 FFF7FEFF 		bl	vPortExitCritical
 652              	.LVL77:
 759:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 653              		.loc 1 759 0
 654 0066 FFF7FEFF 		bl	vTaskSuspendAll
 655              	.LVL78:
 760:..\FreeRTOS/queue.c **** 
 656              		.loc 1 760 0
 657 006a FFF7FEFF 		bl	vPortEnterCritical
 658              	.LVL79:
 659 006e 636C     		ldr	r3, [r4, #68]
 660 0070 B3F1FF3F 		cmp	r3, #-1
 661 0074 01D1     		bne	.L57
 760:..\FreeRTOS/queue.c **** 
 662              		.loc 1 760 0 is_stmt 0 discriminator 1
 663 0076 0023     		movs	r3, #0
 664 0078 6364     		str	r3, [r4, #68]
 665              	.L57:
 760:..\FreeRTOS/queue.c **** 
 666              		.loc 1 760 0 discriminator 3
 667 007a A36C     		ldr	r3, [r4, #72]
 668 007c B3F1FF3F 		cmp	r3, #-1
 669 0080 01D1     		bne	.L58
 760:..\FreeRTOS/queue.c **** 
 670              		.loc 1 760 0 discriminator 4
 671 0082 0023     		movs	r3, #0
 672 0084 A364     		str	r3, [r4, #72]
 673              	.L58:
 760:..\FreeRTOS/queue.c **** 
 674              		.loc 1 760 0 discriminator 6
 675 0086 FFF7FEFF 		bl	vPortExitCritical
 676              	.LVL80:
 763:..\FreeRTOS/queue.c **** 		{
 677              		.loc 1 763 0 is_stmt 1 discriminator 6
 678 008a 02A8     		add	r0, sp, #8
 679 008c 01A9     		add	r1, sp, #4
 680              	.LVL81:
 681 008e FFF7FEFF 		bl	xTaskCheckForTimeOut
 682              	.LVL82:
 683 0092 C0B9     		cbnz	r0, .L59
 765:..\FreeRTOS/queue.c **** 			{
 684              		.loc 1 765 0
 685 0094 2046     		mov	r0, r4
 686 0096 FFF7FEFF 		bl	prvIsQueueFull
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 51


 687              	.LVL83:
 688 009a 70B1     		cbz	r0, .L60
 768:..\FreeRTOS/queue.c **** 
 689              		.loc 1 768 0
 690 009c 04F11000 		add	r0, r4, #16
 691 00a0 0199     		ldr	r1, [sp, #4]
 692 00a2 FFF7FEFF 		bl	vTaskPlaceOnEventList
 693              	.LVL84:
 775:..\FreeRTOS/queue.c **** 
 694              		.loc 1 775 0
 695 00a6 2046     		mov	r0, r4
 696 00a8 FFF7FEFF 		bl	prvUnlockQueue
 697              	.LVL85:
 782:..\FreeRTOS/queue.c **** 				{
 698              		.loc 1 782 0
 699 00ac FFF7FEFF 		bl	xTaskResumeAll
 700              	.LVL86:
 701 00b0 0028     		cmp	r0, #0
 702 00b2 ACD1     		bne	.L49
 784:..\FreeRTOS/queue.c **** 				}
 703              		.loc 1 784 0
 704 00b4 FFF7FEFF 		bl	vPortYield
 705              	.LVL87:
 706 00b8 A9E7     		b	.L49
 707              	.L60:
 790:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 708              		.loc 1 790 0
 709 00ba 2046     		mov	r0, r4
 710 00bc FFF7FEFF 		bl	prvUnlockQueue
 711              	.LVL88:
 791:..\FreeRTOS/queue.c **** 			}
 712              		.loc 1 791 0
 713 00c0 FFF7FEFF 		bl	xTaskResumeAll
 714              	.LVL89:
 715 00c4 A3E7     		b	.L49
 716              	.L59:
 797:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 717              		.loc 1 797 0
 718 00c6 2046     		mov	r0, r4
 719 00c8 FFF7FEFF 		bl	prvUnlockQueue
 720              	.LVL90:
 798:..\FreeRTOS/queue.c **** 
 721              		.loc 1 798 0
 722 00cc FFF7FEFF 		bl	xTaskResumeAll
 723              	.LVL91:
 803:..\FreeRTOS/queue.c **** 		}
 724              		.loc 1 803 0
 725 00d0 0020     		movs	r0, #0
 726              	.L54:
 806:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 727              		.loc 1 806 0
 728 00d2 05B0     		add	sp, sp, #20
 729              		.cfi_def_cfa_offset 20
 730              		@ sp needed
 731 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 732              		.cfi_endproc
 733              	.LFE70:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 52


 734              		.size	xQueueGenericSend, .-xQueueGenericSend
 735 00d6 00BF     		.section	.text.xQueueCreateMutex,"ax",%progbits
 736              		.align	2
 737              		.global	xQueueCreateMutex
 738              		.thumb
 739              		.thumb_func
 740              		.type	xQueueCreateMutex, %function
 741              	xQueueCreateMutex:
 742              	.LFB66:
 392:..\FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 743              		.loc 1 392 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              	.LVL92:
 748 0000 38B5     		push	{r3, r4, r5, lr}
 749              		.cfi_def_cfa_offset 16
 750              		.cfi_offset 3, -16
 751              		.cfi_offset 4, -12
 752              		.cfi_offset 5, -8
 753              		.cfi_offset 14, -4
 400:..\FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 754              		.loc 1 400 0
 755 0002 4C20     		movs	r0, #76
 756              	.LVL93:
 757 0004 FFF7FEFF 		bl	pvPortMalloc
 758              	.LVL94:
 401:..\FreeRTOS/queue.c **** 		{
 759              		.loc 1 401 0
 760 0008 0446     		mov	r4, r0
 761 000a C8B1     		cbz	r0, .L64
 404:..\FreeRTOS/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 762              		.loc 1 404 0
 763 000c 0025     		movs	r5, #0
 764 000e 4560     		str	r5, [r0, #4]
 405:..\FreeRTOS/queue.c **** 
 765              		.loc 1 405 0
 766 0010 0560     		str	r5, [r0]
 409:..\FreeRTOS/queue.c **** 			pxNewQueue->u.pcReadFrom = NULL;
 767              		.loc 1 409 0
 768 0012 8560     		str	r5, [r0, #8]
 410:..\FreeRTOS/queue.c **** 
 769              		.loc 1 410 0
 770 0014 C560     		str	r5, [r0, #12]
 415:..\FreeRTOS/queue.c **** 			pxNewQueue->uxLength = ( UBaseType_t ) 1U;
 771              		.loc 1 415 0
 772 0016 8563     		str	r5, [r0, #56]
 416:..\FreeRTOS/queue.c **** 			pxNewQueue->uxItemSize = ( UBaseType_t ) 0U;
 773              		.loc 1 416 0
 774 0018 0123     		movs	r3, #1
 775 001a C363     		str	r3, [r0, #60]
 417:..\FreeRTOS/queue.c **** 			pxNewQueue->xRxLock = queueUNLOCKED;
 776              		.loc 1 417 0
 777 001c 0564     		str	r5, [r0, #64]
 418:..\FreeRTOS/queue.c **** 			pxNewQueue->xTxLock = queueUNLOCKED;
 778              		.loc 1 418 0
 779 001e 4FF0FF33 		mov	r3, #-1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 53


 780 0022 4364     		str	r3, [r0, #68]
 419:..\FreeRTOS/queue.c **** 
 781              		.loc 1 419 0
 782 0024 8364     		str	r3, [r0, #72]
 434:..\FreeRTOS/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) );
 783              		.loc 1 434 0
 784 0026 1030     		adds	r0, r0, #16
 785              	.LVL95:
 786 0028 FFF7FEFF 		bl	vListInitialise
 787              	.LVL96:
 435:..\FreeRTOS/queue.c **** 
 788              		.loc 1 435 0
 789 002c 04F12400 		add	r0, r4, #36
 790 0030 FFF7FEFF 		bl	vListInitialise
 791              	.LVL97:
 440:..\FreeRTOS/queue.c **** 		}
 792              		.loc 1 440 0
 793 0034 2046     		mov	r0, r4
 794 0036 2946     		mov	r1, r5
 795 0038 2A46     		mov	r2, r5
 796 003a 2B46     		mov	r3, r5
 797 003c FFF7FEFF 		bl	xQueueGenericSend
 798              	.LVL98:
 799              	.L64:
 448:..\FreeRTOS/queue.c **** 
 800              		.loc 1 448 0
 801 0040 2046     		mov	r0, r4
 802 0042 38BD     		pop	{r3, r4, r5, pc}
 803              		.cfi_endproc
 804              	.LFE66:
 805              		.size	xQueueCreateMutex, .-xQueueCreateMutex
 806              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 807              		.align	2
 808              		.global	xQueueGiveMutexRecursive
 809              		.thumb
 810              		.thumb_func
 811              		.type	xQueueGiveMutexRecursive, %function
 812              	xQueueGiveMutexRecursive:
 813              	.LFB67:
 486:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
 814              		.loc 1 486 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 0, uses_anonymous_args = 0
 818              	.LVL99:
 819 0000 38B5     		push	{r3, r4, r5, lr}
 820              		.cfi_def_cfa_offset 16
 821              		.cfi_offset 3, -16
 822              		.cfi_offset 4, -12
 823              		.cfi_offset 5, -8
 824              		.cfi_offset 14, -4
 825 0002 0446     		mov	r4, r0
 826              	.LVL100:
 498:..\FreeRTOS/queue.c **** 		{
 827              		.loc 1 498 0
 828 0004 4568     		ldr	r5, [r0, #4]
 829 0006 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 54


 830              	.LVL101:
 831 000a 8542     		cmp	r5, r0
 832 000c 0BD1     		bne	.L68
 507:..\FreeRTOS/queue.c **** 
 833              		.loc 1 507 0
 834 000e E368     		ldr	r3, [r4, #12]
 835 0010 013B     		subs	r3, r3, #1
 836 0012 E360     		str	r3, [r4, #12]
 510:..\FreeRTOS/queue.c **** 			{
 837              		.loc 1 510 0
 838 0014 4BB9     		cbnz	r3, .L69
 514:..\FreeRTOS/queue.c **** 			}
 839              		.loc 1 514 0
 840 0016 2046     		mov	r0, r4
 841 0018 0021     		movs	r1, #0
 842 001a 0A46     		mov	r2, r1
 843 001c 0B46     		mov	r3, r1
 844 001e FFF7FEFF 		bl	xQueueGenericSend
 845              	.LVL102:
 521:..\FreeRTOS/queue.c **** 		}
 846              		.loc 1 521 0
 847 0022 0120     		movs	r0, #1
 848 0024 38BD     		pop	{r3, r4, r5, pc}
 849              	.LVL103:
 850              	.L68:
 527:..\FreeRTOS/queue.c **** 
 851              		.loc 1 527 0
 852 0026 0020     		movs	r0, #0
 853 0028 38BD     		pop	{r3, r4, r5, pc}
 854              	.LVL104:
 855              	.L69:
 521:..\FreeRTOS/queue.c **** 		}
 856              		.loc 1 521 0
 857 002a 0120     		movs	r0, #1
 858              	.LVL105:
 533:..\FreeRTOS/queue.c **** 
 859              		.loc 1 533 0
 860 002c 38BD     		pop	{r3, r4, r5, pc}
 861              		.cfi_endproc
 862              	.LFE67:
 863              		.size	xQueueGiveMutexRecursive, .-xQueueGiveMutexRecursive
 864 002e 00BF     		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 865              		.align	2
 866              		.global	xQueueGenericSendFromISR
 867              		.thumb
 868              		.thumb_func
 869              		.type	xQueueGenericSendFromISR, %function
 870              	xQueueGenericSendFromISR:
 871              	.LFB71:
1055:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 872              		.loc 1 1055 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876              	.LVL106:
 877 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 878              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 55


 879              		.cfi_offset 4, -24
 880              		.cfi_offset 5, -20
 881              		.cfi_offset 6, -16
 882              		.cfi_offset 7, -12
 883              		.cfi_offset 8, -8
 884              		.cfi_offset 14, -4
 885 0004 0446     		mov	r4, r0
 886 0006 0F46     		mov	r7, r1
 887 0008 9046     		mov	r8, r2
 888 000a 1D46     		mov	r5, r3
 889              	.LVL107:
1085:..\FreeRTOS/queue.c **** 	{
 890              		.loc 1 1085 0
 891 000c FFF7FEFF 		bl	ulPortSetInterruptMask
 892              	.LVL108:
 893 0010 0646     		mov	r6, r0
 894              	.LVL109:
1087:..\FreeRTOS/queue.c **** 		{
 895              		.loc 1 1087 0
 896 0012 A26B     		ldr	r2, [r4, #56]
 897 0014 E36B     		ldr	r3, [r4, #60]
 898 0016 9A42     		cmp	r2, r3
 899 0018 01D3     		bcc	.L72
1087:..\FreeRTOS/queue.c **** 		{
 900              		.loc 1 1087 0 is_stmt 0 discriminator 1
 901 001a 022D     		cmp	r5, #2
 902 001c 1BD1     		bne	.L75
 903              	.L72:
1096:..\FreeRTOS/queue.c **** 
 904              		.loc 1 1096 0 is_stmt 1
 905 001e 2046     		mov	r0, r4
 906              	.LVL110:
 907 0020 3946     		mov	r1, r7
 908 0022 2A46     		mov	r2, r5
 909 0024 FFF7FEFF 		bl	prvCopyDataToQueue
 910              	.LVL111:
1100:..\FreeRTOS/queue.c **** 			{
 911              		.loc 1 1100 0
 912 0028 A36C     		ldr	r3, [r4, #72]
 913 002a B3F1FF3F 		cmp	r3, #-1
 914 002e 0DD1     		bne	.L74
1155:..\FreeRTOS/queue.c **** 					{
 915              		.loc 1 1155 0
 916 0030 636A     		ldr	r3, [r4, #36]
 917 0032 93B1     		cbz	r3, .L76
1157:..\FreeRTOS/queue.c **** 						{
 918              		.loc 1 1157 0
 919 0034 04F12400 		add	r0, r4, #36
 920 0038 FFF7FEFF 		bl	xTaskRemoveFromEventList
 921              	.LVL112:
 922 003c 78B1     		cbz	r0, .L77
1161:..\FreeRTOS/queue.c **** 							{
 923              		.loc 1 1161 0
 924 003e B8F1000F 		cmp	r8, #0
 925 0042 0ED0     		beq	.L78
1163:..\FreeRTOS/queue.c **** 							}
 926              		.loc 1 1163 0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 56


 927 0044 0124     		movs	r4, #1
 928              	.LVL113:
 929 0046 C8F80040 		str	r4, [r8]
 930 004a 0BE0     		b	.L73
 931              	.LVL114:
 932              	.L74:
1186:..\FreeRTOS/queue.c **** 			}
 933              		.loc 1 1186 0
 934 004c A36C     		ldr	r3, [r4, #72]
 935 004e 0133     		adds	r3, r3, #1
 936 0050 A364     		str	r3, [r4, #72]
1189:..\FreeRTOS/queue.c **** 		}
 937              		.loc 1 1189 0
 938 0052 0124     		movs	r4, #1
 939              	.LVL115:
 940 0054 06E0     		b	.L73
 941              	.LVL116:
 942              	.L75:
1194:..\FreeRTOS/queue.c **** 		}
 943              		.loc 1 1194 0
 944 0056 0024     		movs	r4, #0
 945              	.LVL117:
 946 0058 04E0     		b	.L73
 947              	.LVL118:
 948              	.L76:
1189:..\FreeRTOS/queue.c **** 		}
 949              		.loc 1 1189 0
 950 005a 0124     		movs	r4, #1
 951              	.LVL119:
 952 005c 02E0     		b	.L73
 953              	.LVL120:
 954              	.L77:
 955 005e 0124     		movs	r4, #1
 956              	.LVL121:
 957 0060 00E0     		b	.L73
 958              	.LVL122:
 959              	.L78:
 960 0062 0124     		movs	r4, #1
 961              	.LVL123:
 962              	.L73:
1197:..\FreeRTOS/queue.c **** 
 963              		.loc 1 1197 0
 964 0064 3046     		mov	r0, r6
 965 0066 FFF7FEFF 		bl	vPortClearInterruptMask
 966              	.LVL124:
1200:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 967              		.loc 1 1200 0
 968 006a 2046     		mov	r0, r4
 969 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 970              		.cfi_endproc
 971              	.LFE71:
 972              		.size	xQueueGenericSendFromISR, .-xQueueGenericSendFromISR
 973              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 974              		.align	2
 975              		.global	xQueueGiveFromISR
 976              		.thumb
 977              		.thumb_func
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 57


 978              		.type	xQueueGiveFromISR, %function
 979              	xQueueGiveFromISR:
 980              	.LFB72:
1204:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 981              		.loc 1 1204 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985              	.LVL125:
 986 0000 70B5     		push	{r4, r5, r6, lr}
 987              		.cfi_def_cfa_offset 16
 988              		.cfi_offset 4, -16
 989              		.cfi_offset 5, -12
 990              		.cfi_offset 6, -8
 991              		.cfi_offset 14, -4
 992 0002 0446     		mov	r4, r0
 993 0004 0E46     		mov	r6, r1
 994              	.LVL126:
1242:..\FreeRTOS/queue.c **** 	{
 995              		.loc 1 1242 0
 996 0006 FFF7FEFF 		bl	ulPortSetInterruptMask
 997              	.LVL127:
 998 000a 0546     		mov	r5, r0
 999              	.LVL128:
1247:..\FreeRTOS/queue.c **** 		{
 1000              		.loc 1 1247 0
 1001 000c A26B     		ldr	r2, [r4, #56]
 1002 000e E36B     		ldr	r3, [r4, #60]
 1003 0010 9A42     		cmp	r2, r3
 1004 0012 16D2     		bcs	.L83
1257:..\FreeRTOS/queue.c **** 
 1005              		.loc 1 1257 0
 1006 0014 A36B     		ldr	r3, [r4, #56]
 1007 0016 0133     		adds	r3, r3, #1
 1008 0018 A363     		str	r3, [r4, #56]
1261:..\FreeRTOS/queue.c **** 			{
 1009              		.loc 1 1261 0
 1010 001a A36C     		ldr	r3, [r4, #72]
 1011 001c B3F1FF3F 		cmp	r3, #-1
 1012 0020 0AD1     		bne	.L82
1316:..\FreeRTOS/queue.c **** 					{
 1013              		.loc 1 1316 0
 1014 0022 636A     		ldr	r3, [r4, #36]
 1015 0024 7BB1     		cbz	r3, .L84
1318:..\FreeRTOS/queue.c **** 						{
 1016              		.loc 1 1318 0
 1017 0026 04F12400 		add	r0, r4, #36
 1018              	.LVL129:
 1019 002a FFF7FEFF 		bl	xTaskRemoveFromEventList
 1020              	.LVL130:
 1021 002e 60B1     		cbz	r0, .L85
1322:..\FreeRTOS/queue.c **** 							{
 1022              		.loc 1 1322 0
 1023 0030 6EB1     		cbz	r6, .L86
1324:..\FreeRTOS/queue.c **** 							}
 1024              		.loc 1 1324 0
 1025 0032 0124     		movs	r4, #1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 58


 1026              	.LVL131:
 1027 0034 3460     		str	r4, [r6]
 1028 0036 0BE0     		b	.L81
 1029              	.LVL132:
 1030              	.L82:
1347:..\FreeRTOS/queue.c **** 			}
 1031              		.loc 1 1347 0
 1032 0038 A36C     		ldr	r3, [r4, #72]
 1033 003a 0133     		adds	r3, r3, #1
 1034 003c A364     		str	r3, [r4, #72]
1350:..\FreeRTOS/queue.c **** 		}
 1035              		.loc 1 1350 0
 1036 003e 0124     		movs	r4, #1
 1037              	.LVL133:
 1038 0040 06E0     		b	.L81
 1039              	.LVL134:
 1040              	.L83:
1355:..\FreeRTOS/queue.c **** 		}
 1041              		.loc 1 1355 0
 1042 0042 0024     		movs	r4, #0
 1043              	.LVL135:
 1044 0044 04E0     		b	.L81
 1045              	.LVL136:
 1046              	.L84:
1350:..\FreeRTOS/queue.c **** 		}
 1047              		.loc 1 1350 0
 1048 0046 0124     		movs	r4, #1
 1049              	.LVL137:
 1050 0048 02E0     		b	.L81
 1051              	.LVL138:
 1052              	.L85:
 1053 004a 0124     		movs	r4, #1
 1054              	.LVL139:
 1055 004c 00E0     		b	.L81
 1056              	.LVL140:
 1057              	.L86:
 1058 004e 0124     		movs	r4, #1
 1059              	.LVL141:
 1060              	.L81:
1358:..\FreeRTOS/queue.c **** 
 1061              		.loc 1 1358 0
 1062 0050 2846     		mov	r0, r5
 1063 0052 FFF7FEFF 		bl	vPortClearInterruptMask
 1064              	.LVL142:
1361:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1065              		.loc 1 1361 0
 1066 0056 2046     		mov	r0, r4
 1067 0058 70BD     		pop	{r4, r5, r6, pc}
 1068              		.cfi_endproc
 1069              	.LFE72:
 1070              		.size	xQueueGiveFromISR, .-xQueueGiveFromISR
 1071 005a 00BF     		.section	.text.xQueueGenericReceive,"ax",%progbits
 1072              		.align	2
 1073              		.global	xQueueGenericReceive
 1074              		.thumb
 1075              		.thumb_func
 1076              		.type	xQueueGenericReceive, %function
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 59


 1077              	xQueueGenericReceive:
 1078              	.LFB73:
1365:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1079              		.loc 1 1365 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 16
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083              	.LVL143:
 1084 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1085              		.cfi_def_cfa_offset 20
 1086              		.cfi_offset 4, -20
 1087              		.cfi_offset 5, -16
 1088              		.cfi_offset 6, -12
 1089              		.cfi_offset 7, -8
 1090              		.cfi_offset 14, -4
 1091 0002 85B0     		sub	sp, sp, #20
 1092              		.cfi_def_cfa_offset 40
 1093 0004 0446     		mov	r4, r0
 1094 0006 0F46     		mov	r7, r1
 1095 0008 0192     		str	r2, [sp, #4]
 1096 000a 1E46     		mov	r6, r3
 1097              	.LVL144:
1366:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 1098              		.loc 1 1366 0
 1099 000c 0025     		movs	r5, #0
 1100              	.LVL145:
 1101              	.L89:
1385:..\FreeRTOS/queue.c **** 		{
 1102              		.loc 1 1385 0
 1103 000e FFF7FEFF 		bl	vPortEnterCritical
 1104              	.LVL146:
1389:..\FreeRTOS/queue.c **** 			{
 1105              		.loc 1 1389 0
 1106 0012 A36B     		ldr	r3, [r4, #56]
 1107 0014 33B3     		cbz	r3, .L90
1393:..\FreeRTOS/queue.c **** 
 1108              		.loc 1 1393 0
 1109 0016 E568     		ldr	r5, [r4, #12]
 1110              	.LVL147:
1395:..\FreeRTOS/queue.c **** 
 1111              		.loc 1 1395 0
 1112 0018 2046     		mov	r0, r4
 1113 001a 3946     		mov	r1, r7
 1114 001c FFF7FEFF 		bl	prvCopyDataFromQueue
 1115              	.LVL148:
1397:..\FreeRTOS/queue.c **** 				{
 1116              		.loc 1 1397 0
 1117 0020 96B9     		cbnz	r6, .L91
1402:..\FreeRTOS/queue.c **** 
 1118              		.loc 1 1402 0
 1119 0022 A36B     		ldr	r3, [r4, #56]
 1120 0024 013B     		subs	r3, r3, #1
 1121 0026 A363     		str	r3, [r4, #56]
1406:..\FreeRTOS/queue.c **** 						{
 1122              		.loc 1 1406 0
 1123 0028 2368     		ldr	r3, [r4]
 1124 002a 13B9     		cbnz	r3, .L92
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 60


1410:..\FreeRTOS/queue.c **** 						}
 1125              		.loc 1 1410 0
 1126 002c FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 1127              	.LVL149:
 1128 0030 6060     		str	r0, [r4, #4]
 1129              	.L92:
1419:..\FreeRTOS/queue.c **** 					{
 1130              		.loc 1 1419 0
 1131 0032 2369     		ldr	r3, [r4, #16]
 1132 0034 93B1     		cbz	r3, .L93
1421:..\FreeRTOS/queue.c **** 						{
 1133              		.loc 1 1421 0
 1134 0036 04F11000 		add	r0, r4, #16
 1135 003a FFF7FEFF 		bl	xTaskRemoveFromEventList
 1136              	.LVL150:
 1137 003e 0128     		cmp	r0, #1
 1138 0040 0CD1     		bne	.L93
1423:..\FreeRTOS/queue.c **** 						}
 1139              		.loc 1 1423 0
 1140 0042 FFF7FEFF 		bl	vPortYield
 1141              	.LVL151:
 1142 0046 09E0     		b	.L93
 1143              	.L91:
1441:..\FreeRTOS/queue.c **** 
 1144              		.loc 1 1441 0
 1145 0048 E560     		str	r5, [r4, #12]
1445:..\FreeRTOS/queue.c **** 					{
 1146              		.loc 1 1445 0
 1147 004a 636A     		ldr	r3, [r4, #36]
 1148 004c 33B1     		cbz	r3, .L93
1447:..\FreeRTOS/queue.c **** 						{
 1149              		.loc 1 1447 0
 1150 004e 04F12400 		add	r0, r4, #36
 1151 0052 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1152              	.LVL152:
 1153 0056 08B1     		cbz	r0, .L93
1450:..\FreeRTOS/queue.c **** 						}
 1154              		.loc 1 1450 0
 1155 0058 FFF7FEFF 		bl	vPortYield
 1156              	.LVL153:
 1157              	.L93:
1463:..\FreeRTOS/queue.c **** 				return pdPASS;
 1158              		.loc 1 1463 0
 1159 005c FFF7FEFF 		bl	vPortExitCritical
 1160              	.LVL154:
1464:..\FreeRTOS/queue.c **** 			}
 1161              		.loc 1 1464 0
 1162 0060 0120     		movs	r0, #1
 1163 0062 4BE0     		b	.L94
 1164              	.LVL155:
 1165              	.L90:
1468:..\FreeRTOS/queue.c **** 				{
 1166              		.loc 1 1468 0
 1167 0064 019B     		ldr	r3, [sp, #4]
 1168 0066 1BB9     		cbnz	r3, .L95
1472:..\FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1169              		.loc 1 1472 0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 61


 1170 0068 FFF7FEFF 		bl	vPortExitCritical
 1171              	.LVL156:
1474:..\FreeRTOS/queue.c **** 				}
 1172              		.loc 1 1474 0
 1173 006c 0020     		movs	r0, #0
 1174 006e 45E0     		b	.L94
 1175              	.L95:
1476:..\FreeRTOS/queue.c **** 				{
 1176              		.loc 1 1476 0
 1177 0070 1DB9     		cbnz	r5, .L96
1480:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 1178              		.loc 1 1480 0
 1179 0072 02A8     		add	r0, sp, #8
 1180 0074 FFF7FEFF 		bl	vTaskSetTimeOutState
 1181              	.LVL157:
1481:..\FreeRTOS/queue.c **** 				}
 1182              		.loc 1 1481 0
 1183 0078 0125     		movs	r5, #1
 1184              	.LVL158:
 1185              	.L96:
1490:..\FreeRTOS/queue.c **** 
 1186              		.loc 1 1490 0
 1187 007a FFF7FEFF 		bl	vPortExitCritical
 1188              	.LVL159:
1495:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 1189              		.loc 1 1495 0
 1190 007e FFF7FEFF 		bl	vTaskSuspendAll
 1191              	.LVL160:
1496:..\FreeRTOS/queue.c **** 
 1192              		.loc 1 1496 0
 1193 0082 FFF7FEFF 		bl	vPortEnterCritical
 1194              	.LVL161:
 1195 0086 636C     		ldr	r3, [r4, #68]
 1196 0088 B3F1FF3F 		cmp	r3, #-1
 1197 008c 01D1     		bne	.L97
1496:..\FreeRTOS/queue.c **** 
 1198              		.loc 1 1496 0 is_stmt 0 discriminator 1
 1199 008e 0023     		movs	r3, #0
 1200 0090 6364     		str	r3, [r4, #68]
 1201              	.L97:
1496:..\FreeRTOS/queue.c **** 
 1202              		.loc 1 1496 0 discriminator 3
 1203 0092 A36C     		ldr	r3, [r4, #72]
 1204 0094 B3F1FF3F 		cmp	r3, #-1
 1205 0098 01D1     		bne	.L98
1496:..\FreeRTOS/queue.c **** 
 1206              		.loc 1 1496 0 discriminator 4
 1207 009a 0023     		movs	r3, #0
 1208 009c A364     		str	r3, [r4, #72]
 1209              	.L98:
1496:..\FreeRTOS/queue.c **** 
 1210              		.loc 1 1496 0 discriminator 6
 1211 009e FFF7FEFF 		bl	vPortExitCritical
 1212              	.LVL162:
1499:..\FreeRTOS/queue.c **** 		{
 1213              		.loc 1 1499 0 is_stmt 1 discriminator 6
 1214 00a2 02A8     		add	r0, sp, #8
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 62


 1215 00a4 01A9     		add	r1, sp, #4
 1216              	.LVL163:
 1217 00a6 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1218              	.LVL164:
 1219 00aa 08BB     		cbnz	r0, .L99
1501:..\FreeRTOS/queue.c **** 			{
 1220              		.loc 1 1501 0
 1221 00ac 2046     		mov	r0, r4
 1222 00ae FFF7FEFF 		bl	prvIsQueueEmpty
 1223              	.LVL165:
 1224 00b2 B8B1     		cbz	r0, .L100
1507:..\FreeRTOS/queue.c **** 					{
 1225              		.loc 1 1507 0
 1226 00b4 2368     		ldr	r3, [r4]
 1227 00b6 33B9     		cbnz	r3, .L101
1509:..\FreeRTOS/queue.c **** 						{
 1228              		.loc 1 1509 0
 1229 00b8 FFF7FEFF 		bl	vPortEnterCritical
 1230              	.LVL166:
1511:..\FreeRTOS/queue.c **** 						}
 1231              		.loc 1 1511 0
 1232 00bc 6068     		ldr	r0, [r4, #4]
 1233 00be FFF7FEFF 		bl	vTaskPriorityInherit
 1234              	.LVL167:
1513:..\FreeRTOS/queue.c **** 					}
 1235              		.loc 1 1513 0
 1236 00c2 FFF7FEFF 		bl	vPortExitCritical
 1237              	.LVL168:
 1238              	.L101:
1522:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 1239              		.loc 1 1522 0
 1240 00c6 04F12400 		add	r0, r4, #36
 1241 00ca 0199     		ldr	r1, [sp, #4]
 1242 00cc FFF7FEFF 		bl	vTaskPlaceOnEventList
 1243              	.LVL169:
1523:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1244              		.loc 1 1523 0
 1245 00d0 2046     		mov	r0, r4
 1246 00d2 FFF7FEFF 		bl	prvUnlockQueue
 1247              	.LVL170:
1524:..\FreeRTOS/queue.c **** 				{
 1248              		.loc 1 1524 0
 1249 00d6 FFF7FEFF 		bl	xTaskResumeAll
 1250              	.LVL171:
 1251 00da 0028     		cmp	r0, #0
 1252 00dc 97D1     		bne	.L89
1526:..\FreeRTOS/queue.c **** 				}
 1253              		.loc 1 1526 0
 1254 00de FFF7FEFF 		bl	vPortYield
 1255              	.LVL172:
 1256 00e2 94E7     		b	.L89
 1257              	.L100:
1536:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 1258              		.loc 1 1536 0
 1259 00e4 2046     		mov	r0, r4
 1260 00e6 FFF7FEFF 		bl	prvUnlockQueue
 1261              	.LVL173:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 63


1537:..\FreeRTOS/queue.c **** 			}
 1262              		.loc 1 1537 0
 1263 00ea FFF7FEFF 		bl	xTaskResumeAll
 1264              	.LVL174:
 1265 00ee 8EE7     		b	.L89
 1266              	.L99:
1542:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 1267              		.loc 1 1542 0
 1268 00f0 2046     		mov	r0, r4
 1269 00f2 FFF7FEFF 		bl	prvUnlockQueue
 1270              	.LVL175:
1543:..\FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FAILED( pxQueue );
 1271              		.loc 1 1543 0
 1272 00f6 FFF7FEFF 		bl	xTaskResumeAll
 1273              	.LVL176:
1545:..\FreeRTOS/queue.c **** 		}
 1274              		.loc 1 1545 0
 1275 00fa 0020     		movs	r0, #0
 1276              	.LVL177:
 1277              	.L94:
1548:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1278              		.loc 1 1548 0
 1279 00fc 05B0     		add	sp, sp, #20
 1280              		.cfi_def_cfa_offset 20
 1281              		@ sp needed
 1282 00fe F0BD     		pop	{r4, r5, r6, r7, pc}
 1283              		.cfi_endproc
 1284              	.LFE73:
 1285              		.size	xQueueGenericReceive, .-xQueueGenericReceive
 1286              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 1287              		.align	2
 1288              		.global	xQueueTakeMutexRecursive
 1289              		.thumb
 1290              		.thumb_func
 1291              		.type	xQueueTakeMutexRecursive, %function
 1292              	xQueueTakeMutexRecursive:
 1293              	.LFB68:
 541:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
 1294              		.loc 1 541 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 0
 1297              		@ frame_needed = 0, uses_anonymous_args = 0
 1298              	.LVL178:
 1299 0000 70B5     		push	{r4, r5, r6, lr}
 1300              		.cfi_def_cfa_offset 16
 1301              		.cfi_offset 4, -16
 1302              		.cfi_offset 5, -12
 1303              		.cfi_offset 6, -8
 1304              		.cfi_offset 14, -4
 1305 0002 0446     		mov	r4, r0
 1306 0004 0E46     		mov	r6, r1
 1307              	.LVL179:
 552:..\FreeRTOS/queue.c **** 		{
 1308              		.loc 1 552 0
 1309 0006 4568     		ldr	r5, [r0, #4]
 1310 0008 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1311              	.LVL180:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 64


 1312 000c 8542     		cmp	r5, r0
 1313 000e 04D1     		bne	.L105
 554:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
 1314              		.loc 1 554 0
 1315 0010 E368     		ldr	r3, [r4, #12]
 1316 0012 0133     		adds	r3, r3, #1
 1317 0014 E360     		str	r3, [r4, #12]
 1318              	.LVL181:
 555:..\FreeRTOS/queue.c **** 		}
 1319              		.loc 1 555 0
 1320 0016 0120     		movs	r0, #1
 1321 0018 70BD     		pop	{r4, r5, r6, pc}
 1322              	.LVL182:
 1323              	.L105:
 559:..\FreeRTOS/queue.c **** 
 1324              		.loc 1 559 0
 1325 001a 2046     		mov	r0, r4
 1326 001c 0021     		movs	r1, #0
 1327 001e 3246     		mov	r2, r6
 1328 0020 0B46     		mov	r3, r1
 1329 0022 FFF7FEFF 		bl	xQueueGenericReceive
 1330              	.LVL183:
 564:..\FreeRTOS/queue.c **** 			{
 1331              		.loc 1 564 0
 1332 0026 0128     		cmp	r0, #1
 1333 0028 02D1     		bne	.L106
 566:..\FreeRTOS/queue.c **** 			}
 1334              		.loc 1 566 0
 1335 002a E368     		ldr	r3, [r4, #12]
 1336 002c 0133     		adds	r3, r3, #1
 1337 002e E360     		str	r3, [r4, #12]
 1338              	.L106:
 575:..\FreeRTOS/queue.c **** 
 1339              		.loc 1 575 0
 1340 0030 70BD     		pop	{r4, r5, r6, pc}
 1341              		.cfi_endproc
 1342              	.LFE68:
 1343              		.size	xQueueTakeMutexRecursive, .-xQueueTakeMutexRecursive
 1344 0032 00BF     		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 1345              		.align	2
 1346              		.global	xQueueReceiveFromISR
 1347              		.thumb
 1348              		.thumb_func
 1349              		.type	xQueueReceiveFromISR, %function
 1350              	xQueueReceiveFromISR:
 1351              	.LFB74:
1552:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 1352              		.loc 1 1552 0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 0, uses_anonymous_args = 0
 1356              	.LVL184:
 1357 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1358              		.cfi_def_cfa_offset 24
 1359              		.cfi_offset 3, -24
 1360              		.cfi_offset 4, -20
 1361              		.cfi_offset 5, -16
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 65


 1362              		.cfi_offset 6, -12
 1363              		.cfi_offset 7, -8
 1364              		.cfi_offset 14, -4
 1365 0002 0446     		mov	r4, r0
 1366 0004 0E46     		mov	r6, r1
 1367 0006 1746     		mov	r7, r2
 1368              	.LVL185:
1576:..\FreeRTOS/queue.c **** 	{
 1369              		.loc 1 1576 0
 1370 0008 FFF7FEFF 		bl	ulPortSetInterruptMask
 1371              	.LVL186:
 1372 000c 0546     		mov	r5, r0
 1373              	.LVL187:
1579:..\FreeRTOS/queue.c **** 		{
 1374              		.loc 1 1579 0
 1375 000e A36B     		ldr	r3, [r4, #56]
 1376 0010 D3B1     		cbz	r3, .L111
1583:..\FreeRTOS/queue.c **** 			--( pxQueue->uxMessagesWaiting );
 1377              		.loc 1 1583 0
 1378 0012 2046     		mov	r0, r4
 1379              	.LVL188:
 1380 0014 3146     		mov	r1, r6
 1381 0016 FFF7FEFF 		bl	prvCopyDataFromQueue
 1382              	.LVL189:
1584:..\FreeRTOS/queue.c **** 
 1383              		.loc 1 1584 0
 1384 001a A36B     		ldr	r3, [r4, #56]
 1385 001c 013B     		subs	r3, r3, #1
 1386 001e A363     		str	r3, [r4, #56]
1590:..\FreeRTOS/queue.c **** 			{
 1387              		.loc 1 1590 0
 1388 0020 636C     		ldr	r3, [r4, #68]
 1389 0022 B3F1FF3F 		cmp	r3, #-1
 1390 0026 0AD1     		bne	.L110
1592:..\FreeRTOS/queue.c **** 				{
 1391              		.loc 1 1592 0
 1392 0028 2369     		ldr	r3, [r4, #16]
 1393 002a 7BB1     		cbz	r3, .L112
1594:..\FreeRTOS/queue.c **** 					{
 1394              		.loc 1 1594 0
 1395 002c 04F11000 		add	r0, r4, #16
 1396 0030 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1397              	.LVL190:
 1398 0034 60B1     		cbz	r0, .L113
1598:..\FreeRTOS/queue.c **** 						{
 1399              		.loc 1 1598 0
 1400 0036 6FB1     		cbz	r7, .L114
1600:..\FreeRTOS/queue.c **** 						}
 1401              		.loc 1 1600 0
 1402 0038 0124     		movs	r4, #1
 1403              	.LVL191:
 1404 003a 3C60     		str	r4, [r7]
 1405 003c 0BE0     		b	.L109
 1406              	.LVL192:
 1407              	.L110:
1621:..\FreeRTOS/queue.c **** 			}
 1408              		.loc 1 1621 0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 66


 1409 003e 636C     		ldr	r3, [r4, #68]
 1410 0040 0133     		adds	r3, r3, #1
 1411 0042 6364     		str	r3, [r4, #68]
1624:..\FreeRTOS/queue.c **** 		}
 1412              		.loc 1 1624 0
 1413 0044 0124     		movs	r4, #1
 1414              	.LVL193:
 1415 0046 06E0     		b	.L109
 1416              	.LVL194:
 1417              	.L111:
1628:..\FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 1418              		.loc 1 1628 0
 1419 0048 0024     		movs	r4, #0
 1420              	.LVL195:
 1421 004a 04E0     		b	.L109
 1422              	.LVL196:
 1423              	.L112:
1624:..\FreeRTOS/queue.c **** 		}
 1424              		.loc 1 1624 0
 1425 004c 0124     		movs	r4, #1
 1426              	.LVL197:
 1427 004e 02E0     		b	.L109
 1428              	.LVL198:
 1429              	.L113:
 1430 0050 0124     		movs	r4, #1
 1431              	.LVL199:
 1432 0052 00E0     		b	.L109
 1433              	.LVL200:
 1434              	.L114:
 1435 0054 0124     		movs	r4, #1
 1436              	.LVL201:
 1437              	.L109:
1632:..\FreeRTOS/queue.c **** 
 1438              		.loc 1 1632 0
 1439 0056 2846     		mov	r0, r5
 1440 0058 FFF7FEFF 		bl	vPortClearInterruptMask
 1441              	.LVL202:
1635:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1442              		.loc 1 1635 0
 1443 005c 2046     		mov	r0, r4
 1444 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1445              		.cfi_endproc
 1446              	.LFE74:
 1447              		.size	xQueueReceiveFromISR, .-xQueueReceiveFromISR
 1448              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 1449              		.align	2
 1450              		.global	xQueuePeekFromISR
 1451              		.thumb
 1452              		.thumb_func
 1453              		.type	xQueuePeekFromISR, %function
 1454              	xQueuePeekFromISR:
 1455              	.LFB75:
1639:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 1456              		.loc 1 1639 0
 1457              		.cfi_startproc
 1458              		@ args = 0, pretend = 0, frame = 0
 1459              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 67


 1460              	.LVL203:
 1461 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1462              		.cfi_def_cfa_offset 24
 1463              		.cfi_offset 3, -24
 1464              		.cfi_offset 4, -20
 1465              		.cfi_offset 5, -16
 1466              		.cfi_offset 6, -12
 1467              		.cfi_offset 7, -8
 1468              		.cfi_offset 14, -4
 1469 0002 0446     		mov	r4, r0
 1470 0004 0E46     		mov	r6, r1
 1471              	.LVL204:
1665:..\FreeRTOS/queue.c **** 	{
 1472              		.loc 1 1665 0
 1473 0006 FFF7FEFF 		bl	ulPortSetInterruptMask
 1474              	.LVL205:
 1475 000a 0546     		mov	r5, r0
 1476              	.LVL206:
1668:..\FreeRTOS/queue.c **** 		{
 1477              		.loc 1 1668 0
 1478 000c A36B     		ldr	r3, [r4, #56]
 1479 000e 3BB1     		cbz	r3, .L118
1674:..\FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 1480              		.loc 1 1674 0
 1481 0010 E768     		ldr	r7, [r4, #12]
 1482              	.LVL207:
1675:..\FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 1483              		.loc 1 1675 0
 1484 0012 2046     		mov	r0, r4
 1485              	.LVL208:
 1486 0014 3146     		mov	r1, r6
 1487 0016 FFF7FEFF 		bl	prvCopyDataFromQueue
 1488              	.LVL209:
1676:..\FreeRTOS/queue.c **** 
 1489              		.loc 1 1676 0
 1490 001a E760     		str	r7, [r4, #12]
 1491              	.LVL210:
1678:..\FreeRTOS/queue.c **** 		}
 1492              		.loc 1 1678 0
 1493 001c 0124     		movs	r4, #1
 1494              	.LVL211:
 1495 001e 00E0     		b	.L117
 1496              	.LVL212:
 1497              	.L118:
1682:..\FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 1498              		.loc 1 1682 0
 1499 0020 0024     		movs	r4, #0
 1500              	.LVL213:
 1501              	.L117:
1686:..\FreeRTOS/queue.c **** 
 1502              		.loc 1 1686 0
 1503 0022 2846     		mov	r0, r5
 1504 0024 FFF7FEFF 		bl	vPortClearInterruptMask
 1505              	.LVL214:
1689:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1506              		.loc 1 1689 0
 1507 0028 2046     		mov	r0, r4
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 68


 1508 002a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1509              		.cfi_endproc
 1510              	.LFE75:
 1511              		.size	xQueuePeekFromISR, .-xQueuePeekFromISR
 1512              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 1513              		.align	2
 1514              		.global	uxQueueMessagesWaiting
 1515              		.thumb
 1516              		.thumb_func
 1517              		.type	uxQueueMessagesWaiting, %function
 1518              	uxQueueMessagesWaiting:
 1519              	.LFB76:
1693:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
 1520              		.loc 1 1693 0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524              	.LVL215:
 1525 0000 10B5     		push	{r4, lr}
 1526              		.cfi_def_cfa_offset 8
 1527              		.cfi_offset 4, -8
 1528              		.cfi_offset 14, -4
 1529 0002 0446     		mov	r4, r0
1698:..\FreeRTOS/queue.c **** 	{
 1530              		.loc 1 1698 0
 1531 0004 FFF7FEFF 		bl	vPortEnterCritical
 1532              	.LVL216:
1700:..\FreeRTOS/queue.c **** 	}
 1533              		.loc 1 1700 0
 1534 0008 A46B     		ldr	r4, [r4, #56]
 1535              	.LVL217:
1702:..\FreeRTOS/queue.c **** 
 1536              		.loc 1 1702 0
 1537 000a FFF7FEFF 		bl	vPortExitCritical
 1538              	.LVL218:
1705:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1539              		.loc 1 1705 0
 1540 000e 2046     		mov	r0, r4
 1541 0010 10BD     		pop	{r4, pc}
 1542              		.cfi_endproc
 1543              	.LFE76:
 1544              		.size	uxQueueMessagesWaiting, .-uxQueueMessagesWaiting
 1545 0012 00BF     		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 1546              		.align	2
 1547              		.global	uxQueueSpacesAvailable
 1548              		.thumb
 1549              		.thumb_func
 1550              		.type	uxQueueSpacesAvailable, %function
 1551              	uxQueueSpacesAvailable:
 1552              	.LFB77:
1709:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
 1553              		.loc 1 1709 0
 1554              		.cfi_startproc
 1555              		@ args = 0, pretend = 0, frame = 0
 1556              		@ frame_needed = 0, uses_anonymous_args = 0
 1557              	.LVL219:
 1558 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 69


 1559              		.cfi_def_cfa_offset 8
 1560              		.cfi_offset 4, -8
 1561              		.cfi_offset 14, -4
 1562 0002 0446     		mov	r4, r0
 1563              	.LVL220:
1716:..\FreeRTOS/queue.c **** 	{
 1564              		.loc 1 1716 0
 1565 0004 FFF7FEFF 		bl	vPortEnterCritical
 1566              	.LVL221:
1718:..\FreeRTOS/queue.c **** 	}
 1567              		.loc 1 1718 0
 1568 0008 E36B     		ldr	r3, [r4, #60]
 1569 000a A46B     		ldr	r4, [r4, #56]
 1570              	.LVL222:
 1571 000c 1C1B     		subs	r4, r3, r4
 1572              	.LVL223:
1720:..\FreeRTOS/queue.c **** 
 1573              		.loc 1 1720 0
 1574 000e FFF7FEFF 		bl	vPortExitCritical
 1575              	.LVL224:
1723:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1576              		.loc 1 1723 0
 1577 0012 2046     		mov	r0, r4
 1578 0014 10BD     		pop	{r4, pc}
 1579              		.cfi_endproc
 1580              	.LFE77:
 1581              		.size	uxQueueSpacesAvailable, .-uxQueueSpacesAvailable
 1582 0016 00BF     		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 1583              		.align	2
 1584              		.global	uxQueueMessagesWaitingFromISR
 1585              		.thumb
 1586              		.thumb_func
 1587              		.type	uxQueueMessagesWaitingFromISR, %function
 1588              	uxQueueMessagesWaitingFromISR:
 1589              	.LFB78:
1727:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
 1590              		.loc 1 1727 0
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 0
 1593              		@ frame_needed = 0, uses_anonymous_args = 0
 1594              		@ link register save eliminated.
 1595              	.LVL225:
1732:..\FreeRTOS/queue.c **** 
 1596              		.loc 1 1732 0
 1597 0000 806B     		ldr	r0, [r0, #56]
 1598              	.LVL226:
1735:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1599              		.loc 1 1735 0
 1600 0002 7047     		bx	lr
 1601              		.cfi_endproc
 1602              	.LFE78:
 1603              		.size	uxQueueMessagesWaitingFromISR, .-uxQueueMessagesWaitingFromISR
 1604              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 1605              		.align	2
 1606              		.global	xQueueIsQueueEmptyFromISR
 1607              		.thumb
 1608              		.thumb_func
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 70


 1609              		.type	xQueueIsQueueEmptyFromISR, %function
 1610              	xQueueIsQueueEmptyFromISR:
 1611              	.LFB84:
2013:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 1612              		.loc 1 2013 0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 0
 1615              		@ frame_needed = 0, uses_anonymous_args = 0
 1616              		@ link register save eliminated.
 1617              	.LVL227:
2017:..\FreeRTOS/queue.c **** 	{
 1618              		.loc 1 2017 0
 1619 0000 836B     		ldr	r3, [r0, #56]
 1620 0002 0BB9     		cbnz	r3, .L127
2019:..\FreeRTOS/queue.c **** 	}
 1621              		.loc 1 2019 0
 1622 0004 0120     		movs	r0, #1
 1623              	.LVL228:
 1624 0006 7047     		bx	lr
 1625              	.LVL229:
 1626              	.L127:
2023:..\FreeRTOS/queue.c **** 	}
 1627              		.loc 1 2023 0
 1628 0008 0020     		movs	r0, #0
 1629              	.LVL230:
2027:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1630              		.loc 1 2027 0
 1631 000a 7047     		bx	lr
 1632              		.cfi_endproc
 1633              	.LFE84:
 1634              		.size	xQueueIsQueueEmptyFromISR, .-xQueueIsQueueEmptyFromISR
 1635              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 1636              		.align	2
 1637              		.global	xQueueIsQueueFullFromISR
 1638              		.thumb
 1639              		.thumb_func
 1640              		.type	xQueueIsQueueFullFromISR, %function
 1641              	xQueueIsQueueFullFromISR:
 1642              	.LFB86:
2049:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2050:..\FreeRTOS/queue.c **** 
2051:..\FreeRTOS/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2052:..\FreeRTOS/queue.c **** {
 1643              		.loc 1 2052 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647              		@ link register save eliminated.
 1648              	.LVL231:
2053:..\FreeRTOS/queue.c **** BaseType_t xReturn;
2054:..\FreeRTOS/queue.c **** 
2055:..\FreeRTOS/queue.c **** 	configASSERT( xQueue );
2056:..\FreeRTOS/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 1649              		.loc 1 2056 0
 1650 0000 826B     		ldr	r2, [r0, #56]
 1651 0002 C36B     		ldr	r3, [r0, #60]
 1652 0004 9A42     		cmp	r2, r3
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 71


 1653 0006 01D1     		bne	.L130
2057:..\FreeRTOS/queue.c **** 	{
2058:..\FreeRTOS/queue.c **** 		xReturn = pdTRUE;
 1654              		.loc 1 2058 0
 1655 0008 0120     		movs	r0, #1
 1656              	.LVL232:
 1657 000a 7047     		bx	lr
 1658              	.LVL233:
 1659              	.L130:
2059:..\FreeRTOS/queue.c **** 	}
2060:..\FreeRTOS/queue.c **** 	else
2061:..\FreeRTOS/queue.c **** 	{
2062:..\FreeRTOS/queue.c **** 		xReturn = pdFALSE;
 1660              		.loc 1 2062 0
 1661 000c 0020     		movs	r0, #0
 1662              	.LVL234:
2063:..\FreeRTOS/queue.c **** 	}
2064:..\FreeRTOS/queue.c **** 
2065:..\FreeRTOS/queue.c **** 	return xReturn;
2066:..\FreeRTOS/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 1663              		.loc 1 2066 0
 1664 000e 7047     		bx	lr
 1665              		.cfi_endproc
 1666              	.LFE86:
 1667              		.size	xQueueIsQueueFullFromISR, .-xQueueIsQueueFullFromISR
 1668              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 1669              		.align	2
 1670              		.global	vQueueAddToRegistry
 1671              		.thumb
 1672              		.thumb_func
 1673              		.type	vQueueAddToRegistry, %function
 1674              	vQueueAddToRegistry:
 1675              	.LFB87:
2067:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2068:..\FreeRTOS/queue.c **** 
2069:..\FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2070:..\FreeRTOS/queue.c **** 
2071:..\FreeRTOS/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2072:..\FreeRTOS/queue.c **** 	{
2073:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
2074:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2075:..\FreeRTOS/queue.c **** 
2076:..\FreeRTOS/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2077:..\FreeRTOS/queue.c **** 		is required to prevent an interrupt removing something from the queue
2078:..\FreeRTOS/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2079:..\FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2080:..\FreeRTOS/queue.c **** 		{
2081:..\FreeRTOS/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2082:..\FreeRTOS/queue.c **** 			{
2083:..\FreeRTOS/queue.c **** 				/* The queue is full - do we want to block or just leave without
2084:..\FreeRTOS/queue.c **** 				posting? */
2085:..\FreeRTOS/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2086:..\FreeRTOS/queue.c **** 				{
2087:..\FreeRTOS/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2088:..\FreeRTOS/queue.c **** 					return indicating that we need to block. */
2089:..\FreeRTOS/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2090:..\FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 72


2091:..\FreeRTOS/queue.c **** 					return errQUEUE_BLOCKED;
2092:..\FreeRTOS/queue.c **** 				}
2093:..\FreeRTOS/queue.c **** 				else
2094:..\FreeRTOS/queue.c **** 				{
2095:..\FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2096:..\FreeRTOS/queue.c **** 					return errQUEUE_FULL;
2097:..\FreeRTOS/queue.c **** 				}
2098:..\FreeRTOS/queue.c **** 			}
2099:..\FreeRTOS/queue.c **** 		}
2100:..\FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2101:..\FreeRTOS/queue.c **** 
2102:..\FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2103:..\FreeRTOS/queue.c **** 		{
2104:..\FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2105:..\FreeRTOS/queue.c **** 			{
2106:..\FreeRTOS/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2107:..\FreeRTOS/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2108:..\FreeRTOS/queue.c **** 				xReturn = pdPASS;
2109:..\FreeRTOS/queue.c **** 
2110:..\FreeRTOS/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2111:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2112:..\FreeRTOS/queue.c **** 				{
2113:..\FreeRTOS/queue.c **** 					/* In this instance the co-routine could be placed directly
2114:..\FreeRTOS/queue.c **** 					into the ready list as we are within a critical section.
2115:..\FreeRTOS/queue.c **** 					Instead the same pending ready list mechanism is used as if
2116:..\FreeRTOS/queue.c **** 					the event were caused from within an interrupt. */
2117:..\FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2118:..\FreeRTOS/queue.c **** 					{
2119:..\FreeRTOS/queue.c **** 						/* The co-routine waiting has a higher priority so record
2120:..\FreeRTOS/queue.c **** 						that a yield might be appropriate. */
2121:..\FreeRTOS/queue.c **** 						xReturn = errQUEUE_YIELD;
2122:..\FreeRTOS/queue.c **** 					}
2123:..\FreeRTOS/queue.c **** 					else
2124:..\FreeRTOS/queue.c **** 					{
2125:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2126:..\FreeRTOS/queue.c **** 					}
2127:..\FreeRTOS/queue.c **** 				}
2128:..\FreeRTOS/queue.c **** 				else
2129:..\FreeRTOS/queue.c **** 				{
2130:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2131:..\FreeRTOS/queue.c **** 				}
2132:..\FreeRTOS/queue.c **** 			}
2133:..\FreeRTOS/queue.c **** 			else
2134:..\FreeRTOS/queue.c **** 			{
2135:..\FreeRTOS/queue.c **** 				xReturn = errQUEUE_FULL;
2136:..\FreeRTOS/queue.c **** 			}
2137:..\FreeRTOS/queue.c **** 		}
2138:..\FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2139:..\FreeRTOS/queue.c **** 
2140:..\FreeRTOS/queue.c **** 		return xReturn;
2141:..\FreeRTOS/queue.c **** 	}
2142:..\FreeRTOS/queue.c **** 
2143:..\FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2144:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2145:..\FreeRTOS/queue.c **** 
2146:..\FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2147:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 73


2148:..\FreeRTOS/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2149:..\FreeRTOS/queue.c **** 	{
2150:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
2151:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2152:..\FreeRTOS/queue.c **** 
2153:..\FreeRTOS/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2154:..\FreeRTOS/queue.c **** 		is required to prevent an interrupt adding something to the queue
2155:..\FreeRTOS/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2156:..\FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2157:..\FreeRTOS/queue.c **** 		{
2158:..\FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2159:..\FreeRTOS/queue.c **** 			{
2160:..\FreeRTOS/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2161:..\FreeRTOS/queue.c **** 				leave with nothing? */
2162:..\FreeRTOS/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2163:..\FreeRTOS/queue.c **** 				{
2164:..\FreeRTOS/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2165:..\FreeRTOS/queue.c **** 					indicating that we need to block. */
2166:..\FreeRTOS/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2167:..\FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2168:..\FreeRTOS/queue.c **** 					return errQUEUE_BLOCKED;
2169:..\FreeRTOS/queue.c **** 				}
2170:..\FreeRTOS/queue.c **** 				else
2171:..\FreeRTOS/queue.c **** 				{
2172:..\FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2173:..\FreeRTOS/queue.c **** 					return errQUEUE_FULL;
2174:..\FreeRTOS/queue.c **** 				}
2175:..\FreeRTOS/queue.c **** 			}
2176:..\FreeRTOS/queue.c **** 			else
2177:..\FreeRTOS/queue.c **** 			{
2178:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2179:..\FreeRTOS/queue.c **** 			}
2180:..\FreeRTOS/queue.c **** 		}
2181:..\FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2182:..\FreeRTOS/queue.c **** 
2183:..\FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2184:..\FreeRTOS/queue.c **** 		{
2185:..\FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2186:..\FreeRTOS/queue.c **** 			{
2187:..\FreeRTOS/queue.c **** 				/* Data is available from the queue. */
2188:..\FreeRTOS/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2189:..\FreeRTOS/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2190:..\FreeRTOS/queue.c **** 				{
2191:..\FreeRTOS/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2192:..\FreeRTOS/queue.c **** 				}
2193:..\FreeRTOS/queue.c **** 				else
2194:..\FreeRTOS/queue.c **** 				{
2195:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2196:..\FreeRTOS/queue.c **** 				}
2197:..\FreeRTOS/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2198:..\FreeRTOS/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2199:..\FreeRTOS/queue.c **** 
2200:..\FreeRTOS/queue.c **** 				xReturn = pdPASS;
2201:..\FreeRTOS/queue.c **** 
2202:..\FreeRTOS/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2203:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2204:..\FreeRTOS/queue.c **** 				{
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 74


2205:..\FreeRTOS/queue.c **** 					/* In this instance the co-routine could be placed directly
2206:..\FreeRTOS/queue.c **** 					into the ready list as we are within a critical section.
2207:..\FreeRTOS/queue.c **** 					Instead the same pending ready list mechanism is used as if
2208:..\FreeRTOS/queue.c **** 					the event were caused from within an interrupt. */
2209:..\FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2210:..\FreeRTOS/queue.c **** 					{
2211:..\FreeRTOS/queue.c **** 						xReturn = errQUEUE_YIELD;
2212:..\FreeRTOS/queue.c **** 					}
2213:..\FreeRTOS/queue.c **** 					else
2214:..\FreeRTOS/queue.c **** 					{
2215:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2216:..\FreeRTOS/queue.c **** 					}
2217:..\FreeRTOS/queue.c **** 				}
2218:..\FreeRTOS/queue.c **** 				else
2219:..\FreeRTOS/queue.c **** 				{
2220:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2221:..\FreeRTOS/queue.c **** 				}
2222:..\FreeRTOS/queue.c **** 			}
2223:..\FreeRTOS/queue.c **** 			else
2224:..\FreeRTOS/queue.c **** 			{
2225:..\FreeRTOS/queue.c **** 				xReturn = pdFAIL;
2226:..\FreeRTOS/queue.c **** 			}
2227:..\FreeRTOS/queue.c **** 		}
2228:..\FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2229:..\FreeRTOS/queue.c **** 
2230:..\FreeRTOS/queue.c **** 		return xReturn;
2231:..\FreeRTOS/queue.c **** 	}
2232:..\FreeRTOS/queue.c **** 
2233:..\FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2234:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2235:..\FreeRTOS/queue.c **** 
2236:..\FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2237:..\FreeRTOS/queue.c **** 
2238:..\FreeRTOS/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2239:..\FreeRTOS/queue.c **** 	{
2240:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2241:..\FreeRTOS/queue.c **** 
2242:..\FreeRTOS/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2243:..\FreeRTOS/queue.c **** 		exit without doing anything. */
2244:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2245:..\FreeRTOS/queue.c **** 		{
2246:..\FreeRTOS/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2247:..\FreeRTOS/queue.c **** 
2248:..\FreeRTOS/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2249:..\FreeRTOS/queue.c **** 			co-routine has not already been woken. */
2250:..\FreeRTOS/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2251:..\FreeRTOS/queue.c **** 			{
2252:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2253:..\FreeRTOS/queue.c **** 				{
2254:..\FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2255:..\FreeRTOS/queue.c **** 					{
2256:..\FreeRTOS/queue.c **** 						return pdTRUE;
2257:..\FreeRTOS/queue.c **** 					}
2258:..\FreeRTOS/queue.c **** 					else
2259:..\FreeRTOS/queue.c **** 					{
2260:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2261:..\FreeRTOS/queue.c **** 					}
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 75


2262:..\FreeRTOS/queue.c **** 				}
2263:..\FreeRTOS/queue.c **** 				else
2264:..\FreeRTOS/queue.c **** 				{
2265:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2266:..\FreeRTOS/queue.c **** 				}
2267:..\FreeRTOS/queue.c **** 			}
2268:..\FreeRTOS/queue.c **** 			else
2269:..\FreeRTOS/queue.c **** 			{
2270:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2271:..\FreeRTOS/queue.c **** 			}
2272:..\FreeRTOS/queue.c **** 		}
2273:..\FreeRTOS/queue.c **** 		else
2274:..\FreeRTOS/queue.c **** 		{
2275:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2276:..\FreeRTOS/queue.c **** 		}
2277:..\FreeRTOS/queue.c **** 
2278:..\FreeRTOS/queue.c **** 		return xCoRoutinePreviouslyWoken;
2279:..\FreeRTOS/queue.c **** 	}
2280:..\FreeRTOS/queue.c **** 
2281:..\FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2282:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2283:..\FreeRTOS/queue.c **** 
2284:..\FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2285:..\FreeRTOS/queue.c **** 
2286:..\FreeRTOS/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2287:..\FreeRTOS/queue.c **** 	{
2288:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
2289:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2290:..\FreeRTOS/queue.c **** 
2291:..\FreeRTOS/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2292:..\FreeRTOS/queue.c **** 		not then just leave without doing anything. */
2293:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2294:..\FreeRTOS/queue.c **** 		{
2295:..\FreeRTOS/queue.c **** 			/* Copy the data from the queue. */
2296:..\FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2297:..\FreeRTOS/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2298:..\FreeRTOS/queue.c **** 			{
2299:..\FreeRTOS/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2300:..\FreeRTOS/queue.c **** 			}
2301:..\FreeRTOS/queue.c **** 			else
2302:..\FreeRTOS/queue.c **** 			{
2303:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2304:..\FreeRTOS/queue.c **** 			}
2305:..\FreeRTOS/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2306:..\FreeRTOS/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2307:..\FreeRTOS/queue.c **** 
2308:..\FreeRTOS/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2309:..\FreeRTOS/queue.c **** 			{
2310:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2311:..\FreeRTOS/queue.c **** 				{
2312:..\FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2313:..\FreeRTOS/queue.c **** 					{
2314:..\FreeRTOS/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2315:..\FreeRTOS/queue.c **** 					}
2316:..\FreeRTOS/queue.c **** 					else
2317:..\FreeRTOS/queue.c **** 					{
2318:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 76


2319:..\FreeRTOS/queue.c **** 					}
2320:..\FreeRTOS/queue.c **** 				}
2321:..\FreeRTOS/queue.c **** 				else
2322:..\FreeRTOS/queue.c **** 				{
2323:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2324:..\FreeRTOS/queue.c **** 				}
2325:..\FreeRTOS/queue.c **** 			}
2326:..\FreeRTOS/queue.c **** 			else
2327:..\FreeRTOS/queue.c **** 			{
2328:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2329:..\FreeRTOS/queue.c **** 			}
2330:..\FreeRTOS/queue.c **** 
2331:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
2332:..\FreeRTOS/queue.c **** 		}
2333:..\FreeRTOS/queue.c **** 		else
2334:..\FreeRTOS/queue.c **** 		{
2335:..\FreeRTOS/queue.c **** 			xReturn = pdFAIL;
2336:..\FreeRTOS/queue.c **** 		}
2337:..\FreeRTOS/queue.c **** 
2338:..\FreeRTOS/queue.c **** 		return xReturn;
2339:..\FreeRTOS/queue.c **** 	}
2340:..\FreeRTOS/queue.c **** 
2341:..\FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2342:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2343:..\FreeRTOS/queue.c **** 
2344:..\FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2345:..\FreeRTOS/queue.c **** 
2346:..\FreeRTOS/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2347:..\FreeRTOS/queue.c **** 	{
 1676              		.loc 1 2347 0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 0
 1679              		@ frame_needed = 0, uses_anonymous_args = 0
 1680              		@ link register save eliminated.
 1681              	.LVL235:
2348:..\FreeRTOS/queue.c **** 	UBaseType_t ux;
2349:..\FreeRTOS/queue.c **** 
2350:..\FreeRTOS/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2351:..\FreeRTOS/queue.c **** 		a free slot. */
2352:..\FreeRTOS/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 1682              		.loc 1 2352 0
 1683 0000 0023     		movs	r3, #0
 1684 0002 0BE0     		b	.L132
 1685              	.LVL236:
 1686              	.L135:
2353:..\FreeRTOS/queue.c **** 		{
2354:..\FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 1687              		.loc 1 2354 0
 1688 0004 074A     		ldr	r2, .L136
 1689 0006 52F83320 		ldr	r2, [r2, r3, lsl #3]
 1690 000a 32B9     		cbnz	r2, .L133
2355:..\FreeRTOS/queue.c **** 			{
2356:..\FreeRTOS/queue.c **** 				/* Store the information on this queue. */
2357:..\FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 1691              		.loc 1 2357 0
 1692 000c 054A     		ldr	r2, .L136
 1693 000e 42F83310 		str	r1, [r2, r3, lsl #3]
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 77


2358:..\FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 1694              		.loc 1 2358 0
 1695 0012 02EBC303 		add	r3, r2, r3, lsl #3
 1696              	.LVL237:
 1697 0016 5860     		str	r0, [r3, #4]
2359:..\FreeRTOS/queue.c **** 
2360:..\FreeRTOS/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2361:..\FreeRTOS/queue.c **** 				break;
 1698              		.loc 1 2361 0
 1699 0018 7047     		bx	lr
 1700              	.LVL238:
 1701              	.L133:
2352:..\FreeRTOS/queue.c **** 		{
 1702              		.loc 1 2352 0 discriminator 2
 1703 001a 0133     		adds	r3, r3, #1
 1704              	.LVL239:
 1705              	.L132:
2352:..\FreeRTOS/queue.c **** 		{
 1706              		.loc 1 2352 0 is_stmt 0 discriminator 1
 1707 001c 092B     		cmp	r3, #9
 1708 001e F1D9     		bls	.L135
 1709 0020 7047     		bx	lr
 1710              	.L137:
 1711 0022 00BF     		.align	2
 1712              	.L136:
 1713 0024 00000000 		.word	xQueueRegistry
 1714              		.cfi_endproc
 1715              	.LFE87:
 1716              		.size	vQueueAddToRegistry, .-vQueueAddToRegistry
 1717              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 1718              		.align	2
 1719              		.global	vQueueUnregisterQueue
 1720              		.thumb
 1721              		.thumb_func
 1722              		.type	vQueueUnregisterQueue, %function
 1723              	vQueueUnregisterQueue:
 1724              	.LFB88:
2362:..\FreeRTOS/queue.c **** 			}
2363:..\FreeRTOS/queue.c **** 			else
2364:..\FreeRTOS/queue.c **** 			{
2365:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2366:..\FreeRTOS/queue.c **** 			}
2367:..\FreeRTOS/queue.c **** 		}
2368:..\FreeRTOS/queue.c **** 	}
2369:..\FreeRTOS/queue.c **** 
2370:..\FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2371:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2372:..\FreeRTOS/queue.c **** 
2373:..\FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2374:..\FreeRTOS/queue.c **** 
2375:..\FreeRTOS/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2376:..\FreeRTOS/queue.c **** 	{
 1725              		.loc 1 2376 0 is_stmt 1
 1726              		.cfi_startproc
 1727              		@ args = 0, pretend = 0, frame = 0
 1728              		@ frame_needed = 0, uses_anonymous_args = 0
 1729              		@ link register save eliminated.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 78


 1730              	.LVL240:
2377:..\FreeRTOS/queue.c **** 	UBaseType_t ux;
2378:..\FreeRTOS/queue.c **** 
2379:..\FreeRTOS/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2380:..\FreeRTOS/queue.c **** 		registry. */
2381:..\FreeRTOS/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 1731              		.loc 1 2381 0
 1732 0000 0023     		movs	r3, #0
 1733 0002 0BE0     		b	.L139
 1734              	.LVL241:
 1735              	.L142:
2382:..\FreeRTOS/queue.c **** 		{
2383:..\FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 1736              		.loc 1 2383 0
 1737 0004 074A     		ldr	r2, .L143
 1738 0006 02EBC302 		add	r2, r2, r3, lsl #3
 1739 000a 5268     		ldr	r2, [r2, #4]
 1740 000c 8242     		cmp	r2, r0
 1741 000e 04D1     		bne	.L140
2384:..\FreeRTOS/queue.c **** 			{
2385:..\FreeRTOS/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2386:..\FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 1742              		.loc 1 2386 0
 1743 0010 0021     		movs	r1, #0
 1744 0012 044A     		ldr	r2, .L143
 1745 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2387:..\FreeRTOS/queue.c **** 				break;
 1746              		.loc 1 2387 0
 1747 0018 7047     		bx	lr
 1748              	.L140:
2381:..\FreeRTOS/queue.c **** 		{
 1749              		.loc 1 2381 0 discriminator 2
 1750 001a 0133     		adds	r3, r3, #1
 1751              	.LVL242:
 1752              	.L139:
2381:..\FreeRTOS/queue.c **** 		{
 1753              		.loc 1 2381 0 is_stmt 0 discriminator 1
 1754 001c 092B     		cmp	r3, #9
 1755 001e F1D9     		bls	.L142
 1756 0020 7047     		bx	lr
 1757              	.L144:
 1758 0022 00BF     		.align	2
 1759              	.L143:
 1760 0024 00000000 		.word	xQueueRegistry
 1761              		.cfi_endproc
 1762              	.LFE88:
 1763              		.size	vQueueUnregisterQueue, .-vQueueUnregisterQueue
 1764              		.section	.text.vQueueDelete,"ax",%progbits
 1765              		.align	2
 1766              		.global	vQueueDelete
 1767              		.thumb
 1768              		.thumb_func
 1769              		.type	vQueueDelete, %function
 1770              	vQueueDelete:
 1771              	.LFB79:
1739:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1772              		.loc 1 1739 0 is_stmt 1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 79


 1773              		.cfi_startproc
 1774              		@ args = 0, pretend = 0, frame = 0
 1775              		@ frame_needed = 0, uses_anonymous_args = 0
 1776              	.LVL243:
 1777 0000 10B5     		push	{r4, lr}
 1778              		.cfi_def_cfa_offset 8
 1779              		.cfi_offset 4, -8
 1780              		.cfi_offset 14, -4
 1781 0002 0446     		mov	r4, r0
 1782              	.LVL244:
1747:..\FreeRTOS/queue.c **** 	}
 1783              		.loc 1 1747 0
 1784 0004 FFF7FEFF 		bl	vQueueUnregisterQueue
 1785              	.LVL245:
1750:..\FreeRTOS/queue.c **** }
 1786              		.loc 1 1750 0
 1787 0008 2046     		mov	r0, r4
 1788 000a FFF7FEFF 		bl	vPortFree
 1789              	.LVL246:
 1790 000e 10BD     		pop	{r4, pc}
 1791              		.cfi_endproc
 1792              	.LFE79:
 1793              		.size	vQueueDelete, .-vQueueDelete
 1794              		.comm	xQueueRegistry,80,4
 1795              		.text
 1796              	.Letext0:
 1797              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1798              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1799              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1800              		.file 5 "..\\FreeRTOS\\portmacro.h"
 1801              		.file 6 "..\\FreeRTOS\\list.h"
 1802              		.file 7 "..\\FreeRTOS\\task.h"
 1803              		.file 8 "..\\FreeRTOS\\queue.h"
 1804              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 1805              		.file 10 "..\\FreeRTOS\\portable.h"
 1806              		.section	.debug_info,"",%progbits
 1807              	.Ldebug_info0:
 1808 0000 0D130000 		.4byte	0x130d
 1809 0004 0400     		.2byte	0x4
 1810 0006 00000000 		.4byte	.Ldebug_abbrev0
 1811 000a 04       		.byte	0x4
 1812 000b 01       		.uleb128 0x1
 1813 000c 29070000 		.4byte	.LASF136
 1814 0010 01       		.byte	0x1
 1815 0011 88000000 		.4byte	.LASF137
 1816 0015 68050000 		.4byte	.LASF138
 1817 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1818 001d 00000000 		.4byte	0
 1819 0021 00000000 		.4byte	.Ldebug_line0
 1820 0025 02       		.uleb128 0x2
 1821 0026 AF020000 		.4byte	.LASF1
 1822 002a 02       		.byte	0x2
 1823 002b D4       		.byte	0xd4
 1824 002c 30000000 		.4byte	0x30
 1825 0030 03       		.uleb128 0x3
 1826 0031 04       		.byte	0x4
 1827 0032 07       		.byte	0x7
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 80


 1828 0033 7B000000 		.4byte	.LASF0
 1829 0037 04       		.uleb128 0x4
 1830 0038 04       		.byte	0x4
 1831 0039 05       		.byte	0x5
 1832 003a 696E7400 		.ascii	"int\000"
 1833 003e 02       		.uleb128 0x2
 1834 003f 51050000 		.4byte	.LASF2
 1835 0043 03       		.byte	0x3
 1836 0044 1B       		.byte	0x1b
 1837 0045 49000000 		.4byte	0x49
 1838 0049 03       		.uleb128 0x3
 1839 004a 01       		.byte	0x1
 1840 004b 06       		.byte	0x6
 1841 004c 87080000 		.4byte	.LASF3
 1842 0050 02       		.uleb128 0x2
 1843 0051 B0060000 		.4byte	.LASF4
 1844 0055 03       		.byte	0x3
 1845 0056 1D       		.byte	0x1d
 1846 0057 5B000000 		.4byte	0x5b
 1847 005b 03       		.uleb128 0x3
 1848 005c 01       		.byte	0x1
 1849 005d 08       		.byte	0x8
 1850 005e 10070000 		.4byte	.LASF5
 1851 0062 03       		.uleb128 0x3
 1852 0063 02       		.byte	0x2
 1853 0064 05       		.byte	0x5
 1854 0065 F8050000 		.4byte	.LASF6
 1855 0069 03       		.uleb128 0x3
 1856 006a 02       		.byte	0x2
 1857 006b 07       		.byte	0x7
 1858 006c 93080000 		.4byte	.LASF7
 1859 0070 02       		.uleb128 0x2
 1860 0071 CE000000 		.4byte	.LASF8
 1861 0075 03       		.byte	0x3
 1862 0076 3F       		.byte	0x3f
 1863 0077 7B000000 		.4byte	0x7b
 1864 007b 03       		.uleb128 0x3
 1865 007c 04       		.byte	0x4
 1866 007d 05       		.byte	0x5
 1867 007e 0D060000 		.4byte	.LASF9
 1868 0082 02       		.uleb128 0x2
 1869 0083 1E070000 		.4byte	.LASF10
 1870 0087 03       		.byte	0x3
 1871 0088 41       		.byte	0x41
 1872 0089 8D000000 		.4byte	0x8d
 1873 008d 03       		.uleb128 0x3
 1874 008e 04       		.byte	0x4
 1875 008f 07       		.byte	0x7
 1876 0090 E4060000 		.4byte	.LASF11
 1877 0094 03       		.uleb128 0x3
 1878 0095 08       		.byte	0x8
 1879 0096 05       		.byte	0x5
 1880 0097 8E040000 		.4byte	.LASF12
 1881 009b 03       		.uleb128 0x3
 1882 009c 08       		.byte	0x8
 1883 009d 07       		.byte	0x7
 1884 009e 37020000 		.4byte	.LASF13
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 81


 1885 00a2 03       		.uleb128 0x3
 1886 00a3 04       		.byte	0x4
 1887 00a4 07       		.byte	0x7
 1888 00a5 CA060000 		.4byte	.LASF14
 1889 00a9 05       		.uleb128 0x5
 1890 00aa 04       		.byte	0x4
 1891 00ab 03       		.uleb128 0x3
 1892 00ac 01       		.byte	0x1
 1893 00ad 08       		.byte	0x8
 1894 00ae A6030000 		.4byte	.LASF15
 1895 00b2 06       		.uleb128 0x6
 1896 00b3 04       		.byte	0x4
 1897 00b4 B8000000 		.4byte	0xb8
 1898 00b8 07       		.uleb128 0x7
 1899 00b9 AB000000 		.4byte	0xab
 1900 00bd 06       		.uleb128 0x6
 1901 00be 04       		.byte	0x4
 1902 00bf C3000000 		.4byte	0xc3
 1903 00c3 08       		.uleb128 0x8
 1904 00c4 02       		.uleb128 0x2
 1905 00c5 EF010000 		.4byte	.LASF16
 1906 00c9 04       		.byte	0x4
 1907 00ca 14       		.byte	0x14
 1908 00cb 3E000000 		.4byte	0x3e
 1909 00cf 02       		.uleb128 0x2
 1910 00d0 4D040000 		.4byte	.LASF17
 1911 00d4 04       		.byte	0x4
 1912 00d5 15       		.byte	0x15
 1913 00d6 50000000 		.4byte	0x50
 1914 00da 02       		.uleb128 0x2
 1915 00db F6060000 		.4byte	.LASF18
 1916 00df 04       		.byte	0x4
 1917 00e0 2C       		.byte	0x2c
 1918 00e1 70000000 		.4byte	0x70
 1919 00e5 02       		.uleb128 0x2
 1920 00e6 E6010000 		.4byte	.LASF19
 1921 00ea 04       		.byte	0x4
 1922 00eb 2D       		.byte	0x2d
 1923 00ec 82000000 		.4byte	0x82
 1924 00f0 03       		.uleb128 0x3
 1925 00f1 04       		.byte	0x4
 1926 00f2 04       		.byte	0x4
 1927 00f3 0C020000 		.4byte	.LASF20
 1928 00f7 03       		.uleb128 0x3
 1929 00f8 08       		.byte	0x8
 1930 00f9 04       		.byte	0x4
 1931 00fa B4080000 		.4byte	.LASF21
 1932 00fe 02       		.uleb128 0x2
 1933 00ff 9C040000 		.4byte	.LASF22
 1934 0103 05       		.byte	0x5
 1935 0104 62       		.byte	0x62
 1936 0105 7B000000 		.4byte	0x7b
 1937 0109 02       		.uleb128 0x2
 1938 010a C5030000 		.4byte	.LASF23
 1939 010e 05       		.byte	0x5
 1940 010f 63       		.byte	0x63
 1941 0110 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 82


 1942 0114 02       		.uleb128 0x2
 1943 0115 46050000 		.4byte	.LASF24
 1944 0119 05       		.byte	0x5
 1945 011a 69       		.byte	0x69
 1946 011b E5000000 		.4byte	0xe5
 1947 011f 09       		.uleb128 0x9
 1948 0120 D8000000 		.4byte	.LASF31
 1949 0124 14       		.byte	0x14
 1950 0125 06       		.byte	0x6
 1951 0126 B5       		.byte	0xb5
 1952 0127 68010000 		.4byte	0x168
 1953 012b 0A       		.uleb128 0xa
 1954 012c 02060000 		.4byte	.LASF25
 1955 0130 06       		.byte	0x6
 1956 0131 B8       		.byte	0xb8
 1957 0132 14010000 		.4byte	0x114
 1958 0136 00       		.byte	0
 1959 0137 0A       		.uleb128 0xa
 1960 0138 D2040000 		.4byte	.LASF26
 1961 013c 06       		.byte	0x6
 1962 013d B9       		.byte	0xb9
 1963 013e 68010000 		.4byte	0x168
 1964 0142 04       		.byte	0x4
 1965 0143 0A       		.uleb128 0xa
 1966 0144 67020000 		.4byte	.LASF27
 1967 0148 06       		.byte	0x6
 1968 0149 BA       		.byte	0xba
 1969 014a 68010000 		.4byte	0x168
 1970 014e 08       		.byte	0x8
 1971 014f 0A       		.uleb128 0xa
 1972 0150 01080000 		.4byte	.LASF28
 1973 0154 06       		.byte	0x6
 1974 0155 BB       		.byte	0xbb
 1975 0156 A9000000 		.4byte	0xa9
 1976 015a 0C       		.byte	0xc
 1977 015b 0A       		.uleb128 0xa
 1978 015c E3050000 		.4byte	.LASF29
 1979 0160 06       		.byte	0x6
 1980 0161 BC       		.byte	0xbc
 1981 0162 A9000000 		.4byte	0xa9
 1982 0166 10       		.byte	0x10
 1983 0167 00       		.byte	0
 1984 0168 06       		.uleb128 0x6
 1985 0169 04       		.byte	0x4
 1986 016a 1F010000 		.4byte	0x11f
 1987 016e 02       		.uleb128 0x2
 1988 016f AB030000 		.4byte	.LASF30
 1989 0173 06       		.byte	0x6
 1990 0174 BF       		.byte	0xbf
 1991 0175 1F010000 		.4byte	0x11f
 1992 0179 09       		.uleb128 0x9
 1993 017a D3020000 		.4byte	.LASF32
 1994 017e 0C       		.byte	0xc
 1995 017f 06       		.byte	0x6
 1996 0180 C1       		.byte	0xc1
 1997 0181 AA010000 		.4byte	0x1aa
 1998 0185 0A       		.uleb128 0xa
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 83


 1999 0186 02060000 		.4byte	.LASF25
 2000 018a 06       		.byte	0x6
 2001 018b C4       		.byte	0xc4
 2002 018c 14010000 		.4byte	0x114
 2003 0190 00       		.byte	0
 2004 0191 0A       		.uleb128 0xa
 2005 0192 D2040000 		.4byte	.LASF26
 2006 0196 06       		.byte	0x6
 2007 0197 C5       		.byte	0xc5
 2008 0198 68010000 		.4byte	0x168
 2009 019c 04       		.byte	0x4
 2010 019d 0A       		.uleb128 0xa
 2011 019e 67020000 		.4byte	.LASF27
 2012 01a2 06       		.byte	0x6
 2013 01a3 C6       		.byte	0xc6
 2014 01a4 68010000 		.4byte	0x168
 2015 01a8 08       		.byte	0x8
 2016 01a9 00       		.byte	0
 2017 01aa 02       		.uleb128 0x2
 2018 01ab 3E040000 		.4byte	.LASF33
 2019 01af 06       		.byte	0x6
 2020 01b0 C8       		.byte	0xc8
 2021 01b1 79010000 		.4byte	0x179
 2022 01b5 09       		.uleb128 0x9
 2023 01b6 E3020000 		.4byte	.LASF34
 2024 01ba 14       		.byte	0x14
 2025 01bb 06       		.byte	0x6
 2026 01bc CD       		.byte	0xcd
 2027 01bd E6010000 		.4byte	0x1e6
 2028 01c1 0A       		.uleb128 0xa
 2029 01c2 00000000 		.4byte	.LASF35
 2030 01c6 06       		.byte	0x6
 2031 01c7 D0       		.byte	0xd0
 2032 01c8 09010000 		.4byte	0x109
 2033 01cc 00       		.byte	0
 2034 01cd 0A       		.uleb128 0xa
 2035 01ce 9C000000 		.4byte	.LASF36
 2036 01d2 06       		.byte	0x6
 2037 01d3 D1       		.byte	0xd1
 2038 01d4 E6010000 		.4byte	0x1e6
 2039 01d8 04       		.byte	0x4
 2040 01d9 0A       		.uleb128 0xa
 2041 01da 00040000 		.4byte	.LASF37
 2042 01de 06       		.byte	0x6
 2043 01df D2       		.byte	0xd2
 2044 01e0 AA010000 		.4byte	0x1aa
 2045 01e4 08       		.byte	0x8
 2046 01e5 00       		.byte	0
 2047 01e6 06       		.uleb128 0x6
 2048 01e7 04       		.byte	0x4
 2049 01e8 6E010000 		.4byte	0x16e
 2050 01ec 02       		.uleb128 0x2
 2051 01ed 35050000 		.4byte	.LASF38
 2052 01f1 06       		.byte	0x6
 2053 01f2 D4       		.byte	0xd4
 2054 01f3 B5010000 		.4byte	0x1b5
 2055 01f7 02       		.uleb128 0x2
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 84


 2056 01f8 0F050000 		.4byte	.LASF39
 2057 01fc 07       		.byte	0x7
 2058 01fd 67       		.byte	0x67
 2059 01fe A9000000 		.4byte	0xa9
 2060 0202 09       		.uleb128 0x9
 2061 0203 B9000000 		.4byte	.LASF40
 2062 0207 08       		.byte	0x8
 2063 0208 07       		.byte	0x7
 2064 0209 86       		.byte	0x86
 2065 020a 27020000 		.4byte	0x227
 2066 020e 0A       		.uleb128 0xa
 2067 020f 37010000 		.4byte	.LASF41
 2068 0213 07       		.byte	0x7
 2069 0214 88       		.byte	0x88
 2070 0215 FE000000 		.4byte	0xfe
 2071 0219 00       		.byte	0
 2072 021a 0A       		.uleb128 0xa
 2073 021b AE040000 		.4byte	.LASF42
 2074 021f 07       		.byte	0x7
 2075 0220 89       		.byte	0x89
 2076 0221 14010000 		.4byte	0x114
 2077 0225 04       		.byte	0x4
 2078 0226 00       		.byte	0
 2079 0227 02       		.uleb128 0x2
 2080 0228 EE040000 		.4byte	.LASF43
 2081 022c 07       		.byte	0x7
 2082 022d 8A       		.byte	0x8a
 2083 022e 02020000 		.4byte	0x202
 2084 0232 02       		.uleb128 0x2
 2085 0233 F2030000 		.4byte	.LASF44
 2086 0237 08       		.byte	0x8
 2087 0238 58       		.byte	0x58
 2088 0239 A9000000 		.4byte	0xa9
 2089 023d 0B       		.uleb128 0xb
 2090 023e 04       		.byte	0x4
 2091 023f 01       		.byte	0x1
 2092 0240 88       		.byte	0x88
 2093 0241 5C020000 		.4byte	0x25c
 2094 0245 0C       		.uleb128 0xc
 2095 0246 AE010000 		.4byte	.LASF45
 2096 024a 01       		.byte	0x1
 2097 024b 8A       		.byte	0x8a
 2098 024c 5C020000 		.4byte	0x25c
 2099 0250 0C       		.uleb128 0xc
 2100 0251 59010000 		.4byte	.LASF46
 2101 0255 01       		.byte	0x1
 2102 0256 8B       		.byte	0x8b
 2103 0257 09010000 		.4byte	0x109
 2104 025b 00       		.byte	0
 2105 025c 06       		.uleb128 0x6
 2106 025d 04       		.byte	0x4
 2107 025e C4000000 		.4byte	0xc4
 2108 0262 09       		.uleb128 0x9
 2109 0263 12020000 		.4byte	.LASF47
 2110 0267 4C       		.byte	0x4c
 2111 0268 01       		.byte	0x1
 2112 0269 82       		.byte	0x82
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 85


 2113 026a F1020000 		.4byte	0x2f1
 2114 026e 0A       		.uleb128 0xa
 2115 026f 23080000 		.4byte	.LASF48
 2116 0273 01       		.byte	0x1
 2117 0274 84       		.byte	0x84
 2118 0275 5C020000 		.4byte	0x25c
 2119 0279 00       		.byte	0
 2120 027a 0A       		.uleb128 0xa
 2121 027b A9060000 		.4byte	.LASF49
 2122 027f 01       		.byte	0x1
 2123 0280 85       		.byte	0x85
 2124 0281 5C020000 		.4byte	0x25c
 2125 0285 04       		.byte	0x4
 2126 0286 0A       		.uleb128 0xa
 2127 0287 3C050000 		.4byte	.LASF50
 2128 028b 01       		.byte	0x1
 2129 028c 86       		.byte	0x86
 2130 028d 5C020000 		.4byte	0x25c
 2131 0291 08       		.byte	0x8
 2132 0292 0D       		.uleb128 0xd
 2133 0293 7500     		.ascii	"u\000"
 2134 0295 01       		.byte	0x1
 2135 0296 8C       		.byte	0x8c
 2136 0297 3D020000 		.4byte	0x23d
 2137 029b 0C       		.byte	0xc
 2138 029c 0A       		.uleb128 0xa
 2139 029d 0C010000 		.4byte	.LASF51
 2140 02a1 01       		.byte	0x1
 2141 02a2 8E       		.byte	0x8e
 2142 02a3 EC010000 		.4byte	0x1ec
 2143 02a7 10       		.byte	0x10
 2144 02a8 0A       		.uleb128 0xa
 2145 02a9 42000000 		.4byte	.LASF52
 2146 02ad 01       		.byte	0x1
 2147 02ae 8F       		.byte	0x8f
 2148 02af EC010000 		.4byte	0x1ec
 2149 02b3 24       		.byte	0x24
 2150 02b4 0A       		.uleb128 0xa
 2151 02b5 72020000 		.4byte	.LASF53
 2152 02b9 01       		.byte	0x1
 2153 02ba 91       		.byte	0x91
 2154 02bb F1020000 		.4byte	0x2f1
 2155 02bf 38       		.byte	0x38
 2156 02c0 0A       		.uleb128 0xa
 2157 02c1 EF050000 		.4byte	.LASF54
 2158 02c5 01       		.byte	0x1
 2159 02c6 92       		.byte	0x92
 2160 02c7 09010000 		.4byte	0x109
 2161 02cb 3C       		.byte	0x3c
 2162 02cc 0A       		.uleb128 0xa
 2163 02cd 5B030000 		.4byte	.LASF55
 2164 02d1 01       		.byte	0x1
 2165 02d2 93       		.byte	0x93
 2166 02d3 09010000 		.4byte	0x109
 2167 02d7 40       		.byte	0x40
 2168 02d8 0A       		.uleb128 0xa
 2169 02d9 44060000 		.4byte	.LASF56
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 86


 2170 02dd 01       		.byte	0x1
 2171 02de 95       		.byte	0x95
 2172 02df F6020000 		.4byte	0x2f6
 2173 02e3 44       		.byte	0x44
 2174 02e4 0A       		.uleb128 0xa
 2175 02e5 2A080000 		.4byte	.LASF57
 2176 02e9 01       		.byte	0x1
 2177 02ea 96       		.byte	0x96
 2178 02eb F6020000 		.4byte	0x2f6
 2179 02ef 48       		.byte	0x48
 2180 02f0 00       		.byte	0
 2181 02f1 0E       		.uleb128 0xe
 2182 02f2 09010000 		.4byte	0x109
 2183 02f6 0E       		.uleb128 0xe
 2184 02f7 FE000000 		.4byte	0xfe
 2185 02fb 02       		.uleb128 0x2
 2186 02fc AD080000 		.4byte	.LASF58
 2187 0300 01       		.byte	0x1
 2188 0301 A1       		.byte	0xa1
 2189 0302 62020000 		.4byte	0x262
 2190 0306 02       		.uleb128 0x2
 2191 0307 6E010000 		.4byte	.LASF59
 2192 030b 01       		.byte	0x1
 2193 030c A5       		.byte	0xa5
 2194 030d FB020000 		.4byte	0x2fb
 2195 0311 09       		.uleb128 0x9
 2196 0312 E3000000 		.4byte	.LASF60
 2197 0316 08       		.byte	0x8
 2198 0317 01       		.byte	0x1
 2199 0318 B2       		.byte	0xb2
 2200 0319 36030000 		.4byte	0x336
 2201 031d 0A       		.uleb128 0xa
 2202 031e C7020000 		.4byte	.LASF61
 2203 0322 01       		.byte	0x1
 2204 0323 B4       		.byte	0xb4
 2205 0324 B2000000 		.4byte	0xb2
 2206 0328 00       		.byte	0
 2207 0329 0A       		.uleb128 0xa
 2208 032a BF020000 		.4byte	.LASF62
 2209 032e 01       		.byte	0x1
 2210 032f B5       		.byte	0xb5
 2211 0330 32020000 		.4byte	0x232
 2212 0334 04       		.byte	0x4
 2213 0335 00       		.byte	0
 2214 0336 02       		.uleb128 0x2
 2215 0337 55040000 		.4byte	.LASF63
 2216 033b 01       		.byte	0x1
 2217 033c B6       		.byte	0xb6
 2218 033d 11030000 		.4byte	0x311
 2219 0341 02       		.uleb128 0x2
 2220 0342 8D010000 		.4byte	.LASF64
 2221 0346 01       		.byte	0x1
 2222 0347 BB       		.byte	0xbb
 2223 0348 36030000 		.4byte	0x336
 2224 034c 0F       		.uleb128 0xf
 2225 034d B6030000 		.4byte	.LASF65
 2226 0351 01       		.byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 87


 2227 0352 EE07     		.2byte	0x7ee
 2228 0354 FE000000 		.4byte	0xfe
 2229 0358 00000000 		.4byte	.LFB85
 2230 035c 1E000000 		.4byte	.LFE85-.LFB85
 2231 0360 01       		.uleb128 0x1
 2232 0361 9C       		.byte	0x9c
 2233 0362 97030000 		.4byte	0x397
 2234 0366 10       		.uleb128 0x10
 2235 0367 BA060000 		.4byte	.LASF67
 2236 036b 01       		.byte	0x1
 2237 036c EE07     		.2byte	0x7ee
 2238 036e 97030000 		.4byte	0x397
 2239 0372 00000000 		.4byte	.LLST0
 2240 0376 11       		.uleb128 0x11
 2241 0377 C2060000 		.4byte	.LASF68
 2242 037b 01       		.byte	0x1
 2243 037c F007     		.2byte	0x7f0
 2244 037e FE000000 		.4byte	0xfe
 2245 0382 01       		.uleb128 0x1
 2246 0383 54       		.byte	0x54
 2247 0384 12       		.uleb128 0x12
 2248 0385 08000000 		.4byte	.LVL1
 2249 0389 9D110000 		.4byte	0x119d
 2250 038d 12       		.uleb128 0x12
 2251 038e 1A000000 		.4byte	.LVL5
 2252 0392 A4110000 		.4byte	0x11a4
 2253 0396 00       		.byte	0
 2254 0397 06       		.uleb128 0x6
 2255 0398 04       		.byte	0x4
 2256 0399 9D030000 		.4byte	0x39d
 2257 039d 07       		.uleb128 0x7
 2258 039e 06030000 		.4byte	0x306
 2259 03a2 0F       		.uleb128 0xf
 2260 03a3 4E020000 		.4byte	.LASF66
 2261 03a7 01       		.byte	0x1
 2262 03a8 C707     		.2byte	0x7c7
 2263 03aa FE000000 		.4byte	0xfe
 2264 03ae 00000000 		.4byte	.LFB83
 2265 03b2 1A000000 		.4byte	.LFE83-.LFB83
 2266 03b6 01       		.uleb128 0x1
 2267 03b7 9C       		.byte	0x9c
 2268 03b8 ED030000 		.4byte	0x3ed
 2269 03bc 10       		.uleb128 0x10
 2270 03bd BA060000 		.4byte	.LASF67
 2271 03c1 01       		.byte	0x1
 2272 03c2 C707     		.2byte	0x7c7
 2273 03c4 97030000 		.4byte	0x397
 2274 03c8 45000000 		.4byte	.LLST1
 2275 03cc 11       		.uleb128 0x11
 2276 03cd C2060000 		.4byte	.LASF68
 2277 03d1 01       		.byte	0x1
 2278 03d2 C907     		.2byte	0x7c9
 2279 03d4 FE000000 		.4byte	0xfe
 2280 03d8 01       		.uleb128 0x1
 2281 03d9 54       		.byte	0x54
 2282 03da 12       		.uleb128 0x12
 2283 03db 08000000 		.4byte	.LVL7
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 88


 2284 03df 9D110000 		.4byte	0x119d
 2285 03e3 12       		.uleb128 0x12
 2286 03e4 16000000 		.4byte	.LVL11
 2287 03e8 A4110000 		.4byte	0x11a4
 2288 03ec 00       		.byte	0
 2289 03ed 0F       		.uleb128 0xf
 2290 03ee 02030000 		.4byte	.LASF69
 2291 03f2 01       		.byte	0x1
 2292 03f3 F806     		.2byte	0x6f8
 2293 03f5 FE000000 		.4byte	0xfe
 2294 03f9 00000000 		.4byte	.LFB80
 2295 03fd 7C000000 		.4byte	.LFE80-.LFB80
 2296 0401 01       		.uleb128 0x1
 2297 0402 9C       		.byte	0x9c
 2298 0403 63040000 		.4byte	0x463
 2299 0407 10       		.uleb128 0x10
 2300 0408 BA060000 		.4byte	.LASF67
 2301 040c 01       		.byte	0x1
 2302 040d F806     		.2byte	0x6f8
 2303 040f 63040000 		.4byte	0x463
 2304 0413 8A000000 		.4byte	.LLST2
 2305 0417 10       		.uleb128 0x10
 2306 0418 4C060000 		.4byte	.LASF70
 2307 041c 01       		.byte	0x1
 2308 041d F806     		.2byte	0x6f8
 2309 041f BD000000 		.4byte	0xbd
 2310 0423 EA000000 		.4byte	.LLST3
 2311 0427 10       		.uleb128 0x10
 2312 0428 BB080000 		.4byte	.LASF71
 2313 042c 01       		.byte	0x1
 2314 042d F806     		.2byte	0x6f8
 2315 042f 6E040000 		.4byte	0x46e
 2316 0433 56010000 		.4byte	.LLST4
 2317 0437 13       		.uleb128 0x13
 2318 0438 C2060000 		.4byte	.LASF68
 2319 043c 01       		.byte	0x1
 2320 043d FA06     		.2byte	0x6fa
 2321 043f FE000000 		.4byte	0xfe
 2322 0443 74010000 		.4byte	.LLST5
 2323 0447 12       		.uleb128 0x12
 2324 0448 14000000 		.4byte	.LVL16
 2325 044c AB110000 		.4byte	0x11ab
 2326 0450 12       		.uleb128 0x12
 2327 0451 22000000 		.4byte	.LVL19
 2328 0455 C6110000 		.4byte	0x11c6
 2329 0459 12       		.uleb128 0x12
 2330 045a 3E000000 		.4byte	.LVL22
 2331 045e C6110000 		.4byte	0x11c6
 2332 0462 00       		.byte	0
 2333 0463 07       		.uleb128 0x7
 2334 0464 68040000 		.4byte	0x468
 2335 0468 06       		.uleb128 0x6
 2336 0469 04       		.byte	0x4
 2337 046a 06030000 		.4byte	0x306
 2338 046e 07       		.uleb128 0x7
 2339 046f FE000000 		.4byte	0xfe
 2340 0473 14       		.uleb128 0x14
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 89


 2341 0474 C7070000 		.4byte	.LASF73
 2342 0478 01       		.byte	0x1
 2343 0479 4207     		.2byte	0x742
 2344 047b 00000000 		.4byte	.LFB81
 2345 047f 24000000 		.4byte	.LFE81-.LFB81
 2346 0483 01       		.uleb128 0x1
 2347 0484 9C       		.byte	0x9c
 2348 0485 BB040000 		.4byte	0x4bb
 2349 0489 10       		.uleb128 0x10
 2350 048a BA060000 		.4byte	.LASF67
 2351 048e 01       		.byte	0x1
 2352 048f 4207     		.2byte	0x742
 2353 0491 63040000 		.4byte	0x463
 2354 0495 AA010000 		.4byte	.LLST6
 2355 0499 10       		.uleb128 0x10
 2356 049a 5E020000 		.4byte	.LASF72
 2357 049e 01       		.byte	0x1
 2358 049f 4207     		.2byte	0x742
 2359 04a1 BB040000 		.4byte	0x4bb
 2360 04a5 E1010000 		.4byte	.LLST7
 2361 04a9 15       		.uleb128 0x15
 2362 04aa 20000000 		.4byte	.LVL30
 2363 04ae C6110000 		.4byte	0x11c6
 2364 04b2 16       		.uleb128 0x16
 2365 04b3 01       		.uleb128 0x1
 2366 04b4 50       		.byte	0x50
 2367 04b5 03       		.uleb128 0x3
 2368 04b6 F3       		.byte	0xf3
 2369 04b7 01       		.uleb128 0x1
 2370 04b8 51       		.byte	0x51
 2371 04b9 00       		.byte	0
 2372 04ba 00       		.byte	0
 2373 04bb 07       		.uleb128 0x7
 2374 04bc A9000000 		.4byte	0xa9
 2375 04c0 14       		.uleb128 0x14
 2376 04c1 4B080000 		.4byte	.LASF74
 2377 04c5 01       		.byte	0x1
 2378 04c6 5407     		.2byte	0x754
 2379 04c8 00000000 		.4byte	.LFB82
 2380 04cc 62000000 		.4byte	.LFE82-.LFB82
 2381 04d0 01       		.uleb128 0x1
 2382 04d1 9C       		.byte	0x9c
 2383 04d2 45050000 		.4byte	0x545
 2384 04d6 10       		.uleb128 0x10
 2385 04d7 BA060000 		.4byte	.LASF67
 2386 04db 01       		.byte	0x1
 2387 04dc 5407     		.2byte	0x754
 2388 04de 63040000 		.4byte	0x463
 2389 04e2 18020000 		.4byte	.LLST8
 2390 04e6 12       		.uleb128 0x12
 2391 04e7 08000000 		.4byte	.LVL33
 2392 04eb 9D110000 		.4byte	0x119d
 2393 04ef 17       		.uleb128 0x17
 2394 04f0 16000000 		.4byte	.LVL34
 2395 04f4 E3110000 		.4byte	0x11e3
 2396 04f8 03050000 		.4byte	0x503
 2397 04fc 16       		.uleb128 0x16
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 90


 2398 04fd 01       		.uleb128 0x1
 2399 04fe 50       		.byte	0x50
 2400 04ff 02       		.uleb128 0x2
 2401 0500 74       		.byte	0x74
 2402 0501 24       		.sleb128 36
 2403 0502 00       		.byte	0
 2404 0503 12       		.uleb128 0x12
 2405 0504 1C000000 		.4byte	.LVL35
 2406 0508 09120000 		.4byte	0x1209
 2407 050c 12       		.uleb128 0x12
 2408 050d 32000000 		.4byte	.LVL36
 2409 0511 A4110000 		.4byte	0x11a4
 2410 0515 12       		.uleb128 0x12
 2411 0516 36000000 		.4byte	.LVL37
 2412 051a 9D110000 		.4byte	0x119d
 2413 051e 17       		.uleb128 0x17
 2414 051f 44000000 		.4byte	.LVL38
 2415 0523 E3110000 		.4byte	0x11e3
 2416 0527 32050000 		.4byte	0x532
 2417 052b 16       		.uleb128 0x16
 2418 052c 01       		.uleb128 0x1
 2419 052d 50       		.byte	0x50
 2420 052e 02       		.uleb128 0x2
 2421 052f 74       		.byte	0x74
 2422 0530 10       		.sleb128 16
 2423 0531 00       		.byte	0
 2424 0532 12       		.uleb128 0x12
 2425 0533 4A000000 		.4byte	.LVL39
 2426 0537 09120000 		.4byte	0x1209
 2427 053b 12       		.uleb128 0x12
 2428 053c 60000000 		.4byte	.LVL40
 2429 0540 A4110000 		.4byte	0x11a4
 2430 0544 00       		.byte	0
 2431 0545 18       		.uleb128 0x18
 2432 0546 5A080000 		.4byte	.LASF77
 2433 054a 01       		.byte	0x1
 2434 054b 0401     		.2byte	0x104
 2435 054d FE000000 		.4byte	0xfe
 2436 0551 00000000 		.4byte	.LFB64
 2437 0555 5C000000 		.4byte	.LFE64-.LFB64
 2438 0559 01       		.uleb128 0x1
 2439 055a 9C       		.byte	0x9c
 2440 055b E7050000 		.4byte	0x5e7
 2441 055f 10       		.uleb128 0x10
 2442 0560 05020000 		.4byte	.LASF75
 2443 0564 01       		.byte	0x1
 2444 0565 0401     		.2byte	0x104
 2445 0567 32020000 		.4byte	0x232
 2446 056b 36020000 		.4byte	.LLST9
 2447 056f 10       		.uleb128 0x10
 2448 0570 D9040000 		.4byte	.LASF76
 2449 0574 01       		.byte	0x1
 2450 0575 0401     		.2byte	0x104
 2451 0577 FE000000 		.4byte	0xfe
 2452 057b 54020000 		.4byte	.LLST10
 2453 057f 13       		.uleb128 0x13
 2454 0580 BA060000 		.4byte	.LASF67
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 91


 2455 0584 01       		.byte	0x1
 2456 0585 0601     		.2byte	0x106
 2457 0587 63040000 		.4byte	0x463
 2458 058b 72020000 		.4byte	.LLST11
 2459 058f 12       		.uleb128 0x12
 2460 0590 0A000000 		.4byte	.LVL43
 2461 0594 9D110000 		.4byte	0x119d
 2462 0598 17       		.uleb128 0x17
 2463 0599 3A000000 		.4byte	.LVL44
 2464 059d E3110000 		.4byte	0x11e3
 2465 05a1 AC050000 		.4byte	0x5ac
 2466 05a5 16       		.uleb128 0x16
 2467 05a6 01       		.uleb128 0x1
 2468 05a7 50       		.byte	0x50
 2469 05a8 02       		.uleb128 0x2
 2470 05a9 74       		.byte	0x74
 2471 05aa 10       		.sleb128 16
 2472 05ab 00       		.byte	0
 2473 05ac 12       		.uleb128 0x12
 2474 05ad 42000000 		.4byte	.LVL45
 2475 05b1 11120000 		.4byte	0x1211
 2476 05b5 17       		.uleb128 0x17
 2477 05b6 4C000000 		.4byte	.LVL46
 2478 05ba 18120000 		.4byte	0x1218
 2479 05be C9050000 		.4byte	0x5c9
 2480 05c2 16       		.uleb128 0x16
 2481 05c3 01       		.uleb128 0x1
 2482 05c4 50       		.byte	0x50
 2483 05c5 02       		.uleb128 0x2
 2484 05c6 74       		.byte	0x74
 2485 05c7 10       		.sleb128 16
 2486 05c8 00       		.byte	0
 2487 05c9 17       		.uleb128 0x17
 2488 05ca 54000000 		.4byte	.LVL47
 2489 05ce 18120000 		.4byte	0x1218
 2490 05d2 DD050000 		.4byte	0x5dd
 2491 05d6 16       		.uleb128 0x16
 2492 05d7 01       		.uleb128 0x1
 2493 05d8 50       		.byte	0x50
 2494 05d9 02       		.uleb128 0x2
 2495 05da 74       		.byte	0x74
 2496 05db 24       		.sleb128 36
 2497 05dc 00       		.byte	0
 2498 05dd 12       		.uleb128 0x12
 2499 05de 58000000 		.4byte	.LVL48
 2500 05e2 A4110000 		.4byte	0x11a4
 2501 05e6 00       		.byte	0
 2502 05e7 18       		.uleb128 0x18
 2503 05e8 68040000 		.4byte	.LASF78
 2504 05ec 01       		.byte	0x1
 2505 05ed 3901     		.2byte	0x139
 2506 05ef 32020000 		.4byte	0x232
 2507 05f3 00000000 		.4byte	.LFB65
 2508 05f7 38000000 		.4byte	.LFE65-.LFB65
 2509 05fb 01       		.uleb128 0x1
 2510 05fc 9C       		.byte	0x9c
 2511 05fd 80060000 		.4byte	0x680
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 92


 2512 0601 10       		.uleb128 0x10
 2513 0602 5A050000 		.4byte	.LASF79
 2514 0606 01       		.byte	0x1
 2515 0607 3901     		.2byte	0x139
 2516 0609 80060000 		.4byte	0x680
 2517 060d 90020000 		.4byte	.LLST12
 2518 0611 10       		.uleb128 0x10
 2519 0612 5B030000 		.4byte	.LASF55
 2520 0616 01       		.byte	0x1
 2521 0617 3901     		.2byte	0x139
 2522 0619 80060000 		.4byte	0x680
 2523 061d C4020000 		.4byte	.LLST13
 2524 0621 10       		.uleb128 0x10
 2525 0622 1C050000 		.4byte	.LASF80
 2526 0626 01       		.byte	0x1
 2527 0627 3901     		.2byte	0x139
 2528 0629 85060000 		.4byte	0x685
 2529 062d E2020000 		.4byte	.LLST14
 2530 0631 13       		.uleb128 0x13
 2531 0632 C3000000 		.4byte	.LASF81
 2532 0636 01       		.byte	0x1
 2533 0637 3B01     		.2byte	0x13b
 2534 0639 68040000 		.4byte	0x468
 2535 063d 03030000 		.4byte	.LLST15
 2536 0641 13       		.uleb128 0x13
 2537 0642 23060000 		.4byte	.LASF82
 2538 0646 01       		.byte	0x1
 2539 0647 3C01     		.2byte	0x13c
 2540 0649 25000000 		.4byte	0x25
 2541 064d 21030000 		.4byte	.LLST16
 2542 0651 13       		.uleb128 0x13
 2543 0652 C2060000 		.4byte	.LASF68
 2544 0656 01       		.byte	0x1
 2545 0657 3D01     		.2byte	0x13d
 2546 0659 32020000 		.4byte	0x232
 2547 065d 4D030000 		.4byte	.LLST17
 2548 0661 12       		.uleb128 0x12
 2549 0662 18000000 		.4byte	.LVL56
 2550 0666 35120000 		.4byte	0x1235
 2551 066a 15       		.uleb128 0x15
 2552 066b 34000000 		.4byte	.LVL58
 2553 066f 45050000 		.4byte	0x545
 2554 0673 16       		.uleb128 0x16
 2555 0674 01       		.uleb128 0x1
 2556 0675 51       		.byte	0x51
 2557 0676 01       		.uleb128 0x1
 2558 0677 31       		.byte	0x31
 2559 0678 16       		.uleb128 0x16
 2560 0679 01       		.uleb128 0x1
 2561 067a 50       		.byte	0x50
 2562 067b 02       		.uleb128 0x2
 2563 067c 74       		.byte	0x74
 2564 067d 00       		.sleb128 0
 2565 067e 00       		.byte	0
 2566 067f 00       		.byte	0
 2567 0680 07       		.uleb128 0x7
 2568 0681 09010000 		.4byte	0x109
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 93


 2569 0685 07       		.uleb128 0x7
 2570 0686 CF000000 		.4byte	0xcf
 2571 068a 18       		.uleb128 0x18
 2572 068b C5080000 		.4byte	.LASF83
 2573 068f 01       		.byte	0x1
 2574 0690 4602     		.2byte	0x246
 2575 0692 32020000 		.4byte	0x232
 2576 0696 00000000 		.4byte	.LFB69
 2577 069a 16000000 		.4byte	.LFE69-.LFB69
 2578 069e 01       		.uleb128 0x1
 2579 069f 9C       		.byte	0x9c
 2580 06a0 F0060000 		.4byte	0x6f0
 2581 06a4 10       		.uleb128 0x10
 2582 06a5 E3040000 		.4byte	.LASF84
 2583 06a9 01       		.byte	0x1
 2584 06aa 4602     		.2byte	0x246
 2585 06ac 80060000 		.4byte	0x680
 2586 06b0 6C030000 		.4byte	.LLST18
 2587 06b4 10       		.uleb128 0x10
 2588 06b5 66030000 		.4byte	.LASF85
 2589 06b9 01       		.byte	0x1
 2590 06ba 4602     		.2byte	0x246
 2591 06bc 80060000 		.4byte	0x680
 2592 06c0 8D030000 		.4byte	.LLST19
 2593 06c4 13       		.uleb128 0x13
 2594 06c5 BF020000 		.4byte	.LASF62
 2595 06c9 01       		.byte	0x1
 2596 06ca 4802     		.2byte	0x248
 2597 06cc 32020000 		.4byte	0x232
 2598 06d0 AB030000 		.4byte	.LLST20
 2599 06d4 15       		.uleb128 0x15
 2600 06d5 0C000000 		.4byte	.LVL61
 2601 06d9 E7050000 		.4byte	0x5e7
 2602 06dd 16       		.uleb128 0x16
 2603 06de 01       		.uleb128 0x1
 2604 06df 52       		.byte	0x52
 2605 06e0 01       		.uleb128 0x1
 2606 06e1 32       		.byte	0x32
 2607 06e2 16       		.uleb128 0x16
 2608 06e3 01       		.uleb128 0x1
 2609 06e4 51       		.byte	0x51
 2610 06e5 01       		.uleb128 0x1
 2611 06e6 30       		.byte	0x30
 2612 06e7 16       		.uleb128 0x16
 2613 06e8 01       		.uleb128 0x1
 2614 06e9 50       		.byte	0x50
 2615 06ea 03       		.uleb128 0x3
 2616 06eb F3       		.byte	0xf3
 2617 06ec 01       		.uleb128 0x1
 2618 06ed 50       		.byte	0x50
 2619 06ee 00       		.byte	0
 2620 06ef 00       		.byte	0
 2621 06f0 18       		.uleb128 0x18
 2622 06f1 15030000 		.4byte	.LASF86
 2623 06f5 01       		.byte	0x1
 2624 06f6 6102     		.2byte	0x261
 2625 06f8 FE000000 		.4byte	0xfe
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 94


 2626 06fc 00000000 		.4byte	.LFB70
 2627 0700 D6000000 		.4byte	.LFE70-.LFB70
 2628 0704 01       		.uleb128 0x1
 2629 0705 9C       		.byte	0x9c
 2630 0706 C5080000 		.4byte	0x8c5
 2631 070a 10       		.uleb128 0x10
 2632 070b 05020000 		.4byte	.LASF75
 2633 070f 01       		.byte	0x1
 2634 0710 6102     		.2byte	0x261
 2635 0712 32020000 		.4byte	0x232
 2636 0716 C9030000 		.4byte	.LLST21
 2637 071a 10       		.uleb128 0x10
 2638 071b 4C060000 		.4byte	.LASF70
 2639 071f 01       		.byte	0x1
 2640 0720 6102     		.2byte	0x261
 2641 0722 C5080000 		.4byte	0x8c5
 2642 0726 E7030000 		.4byte	.LLST22
 2643 072a 10       		.uleb128 0x10
 2644 072b F4070000 		.4byte	.LASF87
 2645 072f 01       		.byte	0x1
 2646 0730 6102     		.2byte	0x261
 2647 0732 14010000 		.4byte	0x114
 2648 0736 05040000 		.4byte	.LLST23
 2649 073a 10       		.uleb128 0x10
 2650 073b 76010000 		.4byte	.LASF88
 2651 073f 01       		.byte	0x1
 2652 0740 6102     		.2byte	0x261
 2653 0742 6E040000 		.4byte	0x46e
 2654 0746 3C040000 		.4byte	.LLST24
 2655 074a 13       		.uleb128 0x13
 2656 074b A1020000 		.4byte	.LASF89
 2657 074f 01       		.byte	0x1
 2658 0750 6302     		.2byte	0x263
 2659 0752 FE000000 		.4byte	0xfe
 2660 0756 5A040000 		.4byte	.LLST25
 2661 075a 13       		.uleb128 0x13
 2662 075b F6010000 		.4byte	.LASF90
 2663 075f 01       		.byte	0x1
 2664 0760 6302     		.2byte	0x263
 2665 0762 FE000000 		.4byte	0xfe
 2666 0766 90040000 		.4byte	.LLST26
 2667 076a 11       		.uleb128 0x11
 2668 076b B6020000 		.4byte	.LASF91
 2669 076f 01       		.byte	0x1
 2670 0770 6402     		.2byte	0x264
 2671 0772 27020000 		.4byte	0x227
 2672 0776 02       		.uleb128 0x2
 2673 0777 91       		.byte	0x91
 2674 0778 60       		.sleb128 -32
 2675 0779 13       		.uleb128 0x13
 2676 077a BA060000 		.4byte	.LASF67
 2677 077e 01       		.byte	0x1
 2678 077f 6502     		.2byte	0x265
 2679 0781 63040000 		.4byte	0x463
 2680 0785 AE040000 		.4byte	.LLST27
 2681 0789 12       		.uleb128 0x12
 2682 078a 12000000 		.4byte	.LVL66
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 95


 2683 078e 9D110000 		.4byte	0x119d
 2684 0792 17       		.uleb128 0x17
 2685 0793 28000000 		.4byte	.LVL67
 2686 0797 ED030000 		.4byte	0x3ed
 2687 079b B2070000 		.4byte	0x7b2
 2688 079f 16       		.uleb128 0x16
 2689 07a0 01       		.uleb128 0x1
 2690 07a1 52       		.byte	0x52
 2691 07a2 02       		.uleb128 0x2
 2692 07a3 76       		.byte	0x76
 2693 07a4 00       		.sleb128 0
 2694 07a5 16       		.uleb128 0x16
 2695 07a6 01       		.uleb128 0x1
 2696 07a7 51       		.byte	0x51
 2697 07a8 02       		.uleb128 0x2
 2698 07a9 77       		.byte	0x77
 2699 07aa 00       		.sleb128 0
 2700 07ab 16       		.uleb128 0x16
 2701 07ac 01       		.uleb128 0x1
 2702 07ad 50       		.byte	0x50
 2703 07ae 02       		.uleb128 0x2
 2704 07af 74       		.byte	0x74
 2705 07b0 00       		.sleb128 0
 2706 07b1 00       		.byte	0
 2707 07b2 17       		.uleb128 0x17
 2708 07b3 34000000 		.4byte	.LVL69
 2709 07b7 E3110000 		.4byte	0x11e3
 2710 07bb C6070000 		.4byte	0x7c6
 2711 07bf 16       		.uleb128 0x16
 2712 07c0 01       		.uleb128 0x1
 2713 07c1 50       		.byte	0x50
 2714 07c2 02       		.uleb128 0x2
 2715 07c3 74       		.byte	0x74
 2716 07c4 24       		.sleb128 36
 2717 07c5 00       		.byte	0
 2718 07c6 12       		.uleb128 0x12
 2719 07c7 3C000000 		.4byte	.LVL70
 2720 07cb 11120000 		.4byte	0x1211
 2721 07cf 12       		.uleb128 0x12
 2722 07d0 44000000 		.4byte	.LVL72
 2723 07d4 11120000 		.4byte	0x1211
 2724 07d8 12       		.uleb128 0x12
 2725 07d9 48000000 		.4byte	.LVL73
 2726 07dd A4110000 		.4byte	0x11a4
 2727 07e1 12       		.uleb128 0x12
 2728 07e2 54000000 		.4byte	.LVL74
 2729 07e6 A4110000 		.4byte	0x11a4
 2730 07ea 17       		.uleb128 0x17
 2731 07eb 60000000 		.4byte	.LVL75
 2732 07ef 4A120000 		.4byte	0x124a
 2733 07f3 FE070000 		.4byte	0x7fe
 2734 07f7 16       		.uleb128 0x16
 2735 07f8 01       		.uleb128 0x1
 2736 07f9 50       		.byte	0x50
 2737 07fa 02       		.uleb128 0x2
 2738 07fb 91       		.byte	0x91
 2739 07fc 60       		.sleb128 -32
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 96


 2740 07fd 00       		.byte	0
 2741 07fe 12       		.uleb128 0x12
 2742 07ff 66000000 		.4byte	.LVL77
 2743 0803 A4110000 		.4byte	0x11a4
 2744 0807 12       		.uleb128 0x12
 2745 0808 6A000000 		.4byte	.LVL78
 2746 080c 67120000 		.4byte	0x1267
 2747 0810 12       		.uleb128 0x12
 2748 0811 6E000000 		.4byte	.LVL79
 2749 0815 9D110000 		.4byte	0x119d
 2750 0819 12       		.uleb128 0x12
 2751 081a 8A000000 		.4byte	.LVL80
 2752 081e A4110000 		.4byte	0x11a4
 2753 0822 17       		.uleb128 0x17
 2754 0823 92000000 		.4byte	.LVL82
 2755 0827 6F120000 		.4byte	0x126f
 2756 082b 3C080000 		.4byte	0x83c
 2757 082f 16       		.uleb128 0x16
 2758 0830 01       		.uleb128 0x1
 2759 0831 51       		.byte	0x51
 2760 0832 02       		.uleb128 0x2
 2761 0833 91       		.byte	0x91
 2762 0834 5C       		.sleb128 -36
 2763 0835 16       		.uleb128 0x16
 2764 0836 01       		.uleb128 0x1
 2765 0837 50       		.byte	0x50
 2766 0838 02       		.uleb128 0x2
 2767 0839 91       		.byte	0x91
 2768 083a 60       		.sleb128 -32
 2769 083b 00       		.byte	0
 2770 083c 17       		.uleb128 0x17
 2771 083d 9A000000 		.4byte	.LVL83
 2772 0841 4C030000 		.4byte	0x34c
 2773 0845 50080000 		.4byte	0x850
 2774 0849 16       		.uleb128 0x16
 2775 084a 01       		.uleb128 0x1
 2776 084b 50       		.byte	0x50
 2777 084c 02       		.uleb128 0x2
 2778 084d 74       		.byte	0x74
 2779 084e 00       		.sleb128 0
 2780 084f 00       		.byte	0
 2781 0850 17       		.uleb128 0x17
 2782 0851 A6000000 		.4byte	.LVL84
 2783 0855 95120000 		.4byte	0x1295
 2784 0859 64080000 		.4byte	0x864
 2785 085d 16       		.uleb128 0x16
 2786 085e 01       		.uleb128 0x1
 2787 085f 50       		.byte	0x50
 2788 0860 02       		.uleb128 0x2
 2789 0861 74       		.byte	0x74
 2790 0862 10       		.sleb128 16
 2791 0863 00       		.byte	0
 2792 0864 17       		.uleb128 0x17
 2793 0865 AC000000 		.4byte	.LVL85
 2794 0869 C0040000 		.4byte	0x4c0
 2795 086d 78080000 		.4byte	0x878
 2796 0871 16       		.uleb128 0x16
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 97


 2797 0872 01       		.uleb128 0x1
 2798 0873 50       		.byte	0x50
 2799 0874 02       		.uleb128 0x2
 2800 0875 74       		.byte	0x74
 2801 0876 00       		.sleb128 0
 2802 0877 00       		.byte	0
 2803 0878 12       		.uleb128 0x12
 2804 0879 B0000000 		.4byte	.LVL86
 2805 087d B1120000 		.4byte	0x12b1
 2806 0881 12       		.uleb128 0x12
 2807 0882 B8000000 		.4byte	.LVL87
 2808 0886 11120000 		.4byte	0x1211
 2809 088a 17       		.uleb128 0x17
 2810 088b C0000000 		.4byte	.LVL88
 2811 088f C0040000 		.4byte	0x4c0
 2812 0893 9E080000 		.4byte	0x89e
 2813 0897 16       		.uleb128 0x16
 2814 0898 01       		.uleb128 0x1
 2815 0899 50       		.byte	0x50
 2816 089a 02       		.uleb128 0x2
 2817 089b 74       		.byte	0x74
 2818 089c 00       		.sleb128 0
 2819 089d 00       		.byte	0
 2820 089e 12       		.uleb128 0x12
 2821 089f C4000000 		.4byte	.LVL89
 2822 08a3 B1120000 		.4byte	0x12b1
 2823 08a7 17       		.uleb128 0x17
 2824 08a8 CC000000 		.4byte	.LVL90
 2825 08ac C0040000 		.4byte	0x4c0
 2826 08b0 BB080000 		.4byte	0x8bb
 2827 08b4 16       		.uleb128 0x16
 2828 08b5 01       		.uleb128 0x1
 2829 08b6 50       		.byte	0x50
 2830 08b7 02       		.uleb128 0x2
 2831 08b8 74       		.byte	0x74
 2832 08b9 00       		.sleb128 0
 2833 08ba 00       		.byte	0
 2834 08bb 12       		.uleb128 0x12
 2835 08bc D0000000 		.4byte	.LVL91
 2836 08c0 B1120000 		.4byte	0x12b1
 2837 08c4 00       		.byte	0
 2838 08c5 07       		.uleb128 0x7
 2839 08c6 BD000000 		.4byte	0xbd
 2840 08ca 18       		.uleb128 0x18
 2841 08cb 7C040000 		.4byte	.LASF92
 2842 08cf 01       		.byte	0x1
 2843 08d0 8701     		.2byte	0x187
 2844 08d2 32020000 		.4byte	0x232
 2845 08d6 00000000 		.4byte	.LFB66
 2846 08da 44000000 		.4byte	.LFE66-.LFB66
 2847 08de 01       		.uleb128 0x1
 2848 08df 9C       		.byte	0x9c
 2849 08e0 63090000 		.4byte	0x963
 2850 08e4 10       		.uleb128 0x10
 2851 08e5 1C050000 		.4byte	.LASF80
 2852 08e9 01       		.byte	0x1
 2853 08ea 8701     		.2byte	0x187
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 98


 2854 08ec 85060000 		.4byte	0x685
 2855 08f0 CC040000 		.4byte	.LLST28
 2856 08f4 13       		.uleb128 0x13
 2857 08f5 C3000000 		.4byte	.LASF81
 2858 08f9 01       		.byte	0x1
 2859 08fa 8901     		.2byte	0x189
 2860 08fc 68040000 		.4byte	0x468
 2861 0900 ED040000 		.4byte	.LLST29
 2862 0904 17       		.uleb128 0x17
 2863 0905 08000000 		.4byte	.LVL94
 2864 0909 35120000 		.4byte	0x1235
 2865 090d 18090000 		.4byte	0x918
 2866 0911 16       		.uleb128 0x16
 2867 0912 01       		.uleb128 0x1
 2868 0913 50       		.byte	0x50
 2869 0914 02       		.uleb128 0x2
 2870 0915 08       		.byte	0x8
 2871 0916 4C       		.byte	0x4c
 2872 0917 00       		.byte	0
 2873 0918 17       		.uleb128 0x17
 2874 0919 2C000000 		.4byte	.LVL96
 2875 091d 18120000 		.4byte	0x1218
 2876 0921 2C090000 		.4byte	0x92c
 2877 0925 16       		.uleb128 0x16
 2878 0926 01       		.uleb128 0x1
 2879 0927 50       		.byte	0x50
 2880 0928 02       		.uleb128 0x2
 2881 0929 74       		.byte	0x74
 2882 092a 10       		.sleb128 16
 2883 092b 00       		.byte	0
 2884 092c 17       		.uleb128 0x17
 2885 092d 34000000 		.4byte	.LVL97
 2886 0931 18120000 		.4byte	0x1218
 2887 0935 40090000 		.4byte	0x940
 2888 0939 16       		.uleb128 0x16
 2889 093a 01       		.uleb128 0x1
 2890 093b 50       		.byte	0x50
 2891 093c 02       		.uleb128 0x2
 2892 093d 74       		.byte	0x74
 2893 093e 24       		.sleb128 36
 2894 093f 00       		.byte	0
 2895 0940 15       		.uleb128 0x15
 2896 0941 40000000 		.4byte	.LVL98
 2897 0945 F0060000 		.4byte	0x6f0
 2898 0949 16       		.uleb128 0x16
 2899 094a 01       		.uleb128 0x1
 2900 094b 53       		.byte	0x53
 2901 094c 02       		.uleb128 0x2
 2902 094d 75       		.byte	0x75
 2903 094e 00       		.sleb128 0
 2904 094f 16       		.uleb128 0x16
 2905 0950 01       		.uleb128 0x1
 2906 0951 52       		.byte	0x52
 2907 0952 02       		.uleb128 0x2
 2908 0953 75       		.byte	0x75
 2909 0954 00       		.sleb128 0
 2910 0955 16       		.uleb128 0x16
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 99


 2911 0956 01       		.uleb128 0x1
 2912 0957 51       		.byte	0x51
 2913 0958 02       		.uleb128 0x2
 2914 0959 75       		.byte	0x75
 2915 095a 00       		.sleb128 0
 2916 095b 16       		.uleb128 0x16
 2917 095c 01       		.uleb128 0x1
 2918 095d 50       		.byte	0x50
 2919 095e 02       		.uleb128 0x2
 2920 095f 74       		.byte	0x74
 2921 0960 00       		.sleb128 0
 2922 0961 00       		.byte	0
 2923 0962 00       		.byte	0
 2924 0963 18       		.uleb128 0x18
 2925 0964 32080000 		.4byte	.LASF93
 2926 0968 01       		.byte	0x1
 2927 0969 E501     		.2byte	0x1e5
 2928 096b FE000000 		.4byte	0xfe
 2929 096f 00000000 		.4byte	.LFB67
 2930 0973 2E000000 		.4byte	.LFE67-.LFB67
 2931 0977 01       		.uleb128 0x1
 2932 0978 9C       		.byte	0x9c
 2933 0979 D4090000 		.4byte	0x9d4
 2934 097d 10       		.uleb128 0x10
 2935 097e A7040000 		.4byte	.LASF94
 2936 0982 01       		.byte	0x1
 2937 0983 E501     		.2byte	0x1e5
 2938 0985 32020000 		.4byte	0x232
 2939 0989 0B050000 		.4byte	.LLST30
 2940 098d 11       		.uleb128 0x11
 2941 098e C2060000 		.4byte	.LASF68
 2942 0992 01       		.byte	0x1
 2943 0993 E701     		.2byte	0x1e7
 2944 0995 FE000000 		.4byte	0xfe
 2945 0999 01       		.uleb128 0x1
 2946 099a 50       		.byte	0x50
 2947 099b 13       		.uleb128 0x13
 2948 099c 73000000 		.4byte	.LASF95
 2949 09a0 01       		.byte	0x1
 2950 09a1 E801     		.2byte	0x1e8
 2951 09a3 63040000 		.4byte	0x463
 2952 09a7 29050000 		.4byte	.LLST31
 2953 09ab 12       		.uleb128 0x12
 2954 09ac 0A000000 		.4byte	.LVL101
 2955 09b0 BD120000 		.4byte	0x12bd
 2956 09b4 15       		.uleb128 0x15
 2957 09b5 22000000 		.4byte	.LVL102
 2958 09b9 F0060000 		.4byte	0x6f0
 2959 09bd 16       		.uleb128 0x16
 2960 09be 01       		.uleb128 0x1
 2961 09bf 53       		.byte	0x53
 2962 09c0 01       		.uleb128 0x1
 2963 09c1 30       		.byte	0x30
 2964 09c2 16       		.uleb128 0x16
 2965 09c3 01       		.uleb128 0x1
 2966 09c4 52       		.byte	0x52
 2967 09c5 01       		.uleb128 0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 100


 2968 09c6 30       		.byte	0x30
 2969 09c7 16       		.uleb128 0x16
 2970 09c8 01       		.uleb128 0x1
 2971 09c9 51       		.byte	0x51
 2972 09ca 01       		.uleb128 0x1
 2973 09cb 30       		.byte	0x30
 2974 09cc 16       		.uleb128 0x16
 2975 09cd 01       		.uleb128 0x1
 2976 09ce 50       		.byte	0x50
 2977 09cf 02       		.uleb128 0x2
 2978 09d0 74       		.byte	0x74
 2979 09d1 00       		.sleb128 0
 2980 09d2 00       		.byte	0
 2981 09d3 00       		.byte	0
 2982 09d4 18       		.uleb128 0x18
 2983 09d5 E9020000 		.4byte	.LASF96
 2984 09d9 01       		.byte	0x1
 2985 09da 1E04     		.2byte	0x41e
 2986 09dc FE000000 		.4byte	0xfe
 2987 09e0 00000000 		.4byte	.LFB71
 2988 09e4 70000000 		.4byte	.LFE71-.LFB71
 2989 09e8 01       		.uleb128 0x1
 2990 09e9 9C       		.byte	0x9c
 2991 09ea AA0A0000 		.4byte	0xaaa
 2992 09ee 10       		.uleb128 0x10
 2993 09ef 05020000 		.4byte	.LASF75
 2994 09f3 01       		.byte	0x1
 2995 09f4 1E04     		.2byte	0x41e
 2996 09f6 32020000 		.4byte	0x232
 2997 09fa 47050000 		.4byte	.LLST32
 2998 09fe 10       		.uleb128 0x10
 2999 09ff 4C060000 		.4byte	.LASF70
 3000 0a03 01       		.byte	0x1
 3001 0a04 1E04     		.2byte	0x41e
 3002 0a06 C5080000 		.4byte	0x8c5
 3003 0a0a F0050000 		.4byte	.LLST33
 3004 0a0e 10       		.uleb128 0x10
 3005 0a0f 59000000 		.4byte	.LASF97
 3006 0a13 01       		.byte	0x1
 3007 0a14 1E04     		.2byte	0x41e
 3008 0a16 AA0A0000 		.4byte	0xaaa
 3009 0a1a 0E060000 		.4byte	.LLST34
 3010 0a1e 10       		.uleb128 0x10
 3011 0a1f 76010000 		.4byte	.LASF88
 3012 0a23 01       		.byte	0x1
 3013 0a24 1E04     		.2byte	0x41e
 3014 0a26 6E040000 		.4byte	0x46e
 3015 0a2a 2C060000 		.4byte	.LLST35
 3016 0a2e 11       		.uleb128 0x11
 3017 0a2f C2060000 		.4byte	.LASF68
 3018 0a33 01       		.byte	0x1
 3019 0a34 2004     		.2byte	0x420
 3020 0a36 FE000000 		.4byte	0xfe
 3021 0a3a 01       		.uleb128 0x1
 3022 0a3b 54       		.byte	0x54
 3023 0a3c 13       		.uleb128 0x13
 3024 0a3d CF010000 		.4byte	.LASF98
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 101


 3025 0a41 01       		.byte	0x1
 3026 0a42 2104     		.2byte	0x421
 3027 0a44 09010000 		.4byte	0x109
 3028 0a48 4A060000 		.4byte	.LLST36
 3029 0a4c 13       		.uleb128 0x13
 3030 0a4d BA060000 		.4byte	.LASF67
 3031 0a51 01       		.byte	0x1
 3032 0a52 2204     		.2byte	0x422
 3033 0a54 63040000 		.4byte	0x463
 3034 0a58 7E060000 		.4byte	.LLST37
 3035 0a5c 12       		.uleb128 0x12
 3036 0a5d 10000000 		.4byte	.LVL108
 3037 0a61 C9120000 		.4byte	0x12c9
 3038 0a65 17       		.uleb128 0x17
 3039 0a66 28000000 		.4byte	.LVL111
 3040 0a6a ED030000 		.4byte	0x3ed
 3041 0a6e 850A0000 		.4byte	0xa85
 3042 0a72 16       		.uleb128 0x16
 3043 0a73 01       		.uleb128 0x1
 3044 0a74 52       		.byte	0x52
 3045 0a75 02       		.uleb128 0x2
 3046 0a76 75       		.byte	0x75
 3047 0a77 00       		.sleb128 0
 3048 0a78 16       		.uleb128 0x16
 3049 0a79 01       		.uleb128 0x1
 3050 0a7a 51       		.byte	0x51
 3051 0a7b 02       		.uleb128 0x2
 3052 0a7c 77       		.byte	0x77
 3053 0a7d 00       		.sleb128 0
 3054 0a7e 16       		.uleb128 0x16
 3055 0a7f 01       		.uleb128 0x1
 3056 0a80 50       		.byte	0x50
 3057 0a81 02       		.uleb128 0x2
 3058 0a82 74       		.byte	0x74
 3059 0a83 00       		.sleb128 0
 3060 0a84 00       		.byte	0
 3061 0a85 17       		.uleb128 0x17
 3062 0a86 3C000000 		.4byte	.LVL112
 3063 0a8a E3110000 		.4byte	0x11e3
 3064 0a8e 990A0000 		.4byte	0xa99
 3065 0a92 16       		.uleb128 0x16
 3066 0a93 01       		.uleb128 0x1
 3067 0a94 50       		.byte	0x50
 3068 0a95 02       		.uleb128 0x2
 3069 0a96 74       		.byte	0x74
 3070 0a97 24       		.sleb128 36
 3071 0a98 00       		.byte	0
 3072 0a99 15       		.uleb128 0x15
 3073 0a9a 6A000000 		.4byte	.LVL124
 3074 0a9e D4120000 		.4byte	0x12d4
 3075 0aa2 16       		.uleb128 0x16
 3076 0aa3 01       		.uleb128 0x1
 3077 0aa4 50       		.byte	0x50
 3078 0aa5 02       		.uleb128 0x2
 3079 0aa6 76       		.byte	0x76
 3080 0aa7 00       		.sleb128 0
 3081 0aa8 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 102


 3082 0aa9 00       		.byte	0
 3083 0aaa 07       		.uleb128 0x7
 3084 0aab AF0A0000 		.4byte	0xaaf
 3085 0aaf 06       		.uleb128 0x6
 3086 0ab0 04       		.byte	0x4
 3087 0ab1 FE000000 		.4byte	0xfe
 3088 0ab5 18       		.uleb128 0x18
 3089 0ab6 D1030000 		.4byte	.LASF99
 3090 0aba 01       		.byte	0x1
 3091 0abb B304     		.2byte	0x4b3
 3092 0abd FE000000 		.4byte	0xfe
 3093 0ac1 00000000 		.4byte	.LFB72
 3094 0ac5 5A000000 		.4byte	.LFE72-.LFB72
 3095 0ac9 01       		.uleb128 0x1
 3096 0aca 9C       		.byte	0x9c
 3097 0acb 4B0B0000 		.4byte	0xb4b
 3098 0acf 10       		.uleb128 0x10
 3099 0ad0 05020000 		.4byte	.LASF75
 3100 0ad4 01       		.byte	0x1
 3101 0ad5 B304     		.2byte	0x4b3
 3102 0ad7 32020000 		.4byte	0x232
 3103 0adb 27070000 		.4byte	.LLST38
 3104 0adf 10       		.uleb128 0x10
 3105 0ae0 59000000 		.4byte	.LASF97
 3106 0ae4 01       		.byte	0x1
 3107 0ae5 B304     		.2byte	0x4b3
 3108 0ae7 AA0A0000 		.4byte	0xaaa
 3109 0aeb D0070000 		.4byte	.LLST39
 3110 0aef 11       		.uleb128 0x11
 3111 0af0 C2060000 		.4byte	.LASF68
 3112 0af4 01       		.byte	0x1
 3113 0af5 B504     		.2byte	0x4b5
 3114 0af7 FE000000 		.4byte	0xfe
 3115 0afb 01       		.uleb128 0x1
 3116 0afc 54       		.byte	0x54
 3117 0afd 13       		.uleb128 0x13
 3118 0afe CF010000 		.4byte	.LASF98
 3119 0b02 01       		.byte	0x1
 3120 0b03 B604     		.2byte	0x4b6
 3121 0b05 09010000 		.4byte	0x109
 3122 0b09 EE070000 		.4byte	.LLST40
 3123 0b0d 13       		.uleb128 0x13
 3124 0b0e BA060000 		.4byte	.LASF67
 3125 0b12 01       		.byte	0x1
 3126 0b13 B704     		.2byte	0x4b7
 3127 0b15 63040000 		.4byte	0x463
 3128 0b19 22080000 		.4byte	.LLST41
 3129 0b1d 12       		.uleb128 0x12
 3130 0b1e 0A000000 		.4byte	.LVL127
 3131 0b22 C9120000 		.4byte	0x12c9
 3132 0b26 17       		.uleb128 0x17
 3133 0b27 2E000000 		.4byte	.LVL130
 3134 0b2b E3110000 		.4byte	0x11e3
 3135 0b2f 3A0B0000 		.4byte	0xb3a
 3136 0b33 16       		.uleb128 0x16
 3137 0b34 01       		.uleb128 0x1
 3138 0b35 50       		.byte	0x50
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 103


 3139 0b36 02       		.uleb128 0x2
 3140 0b37 74       		.byte	0x74
 3141 0b38 24       		.sleb128 36
 3142 0b39 00       		.byte	0
 3143 0b3a 15       		.uleb128 0x15
 3144 0b3b 56000000 		.4byte	.LVL142
 3145 0b3f D4120000 		.4byte	0x12d4
 3146 0b43 16       		.uleb128 0x16
 3147 0b44 01       		.uleb128 0x1
 3148 0b45 50       		.byte	0x50
 3149 0b46 02       		.uleb128 0x2
 3150 0b47 75       		.byte	0x75
 3151 0b48 00       		.sleb128 0
 3152 0b49 00       		.byte	0
 3153 0b4a 00       		.byte	0
 3154 0b4b 18       		.uleb128 0x18
 3155 0b4c 22020000 		.4byte	.LASF100
 3156 0b50 01       		.byte	0x1
 3157 0b51 5405     		.2byte	0x554
 3158 0b53 FE000000 		.4byte	0xfe
 3159 0b57 00000000 		.4byte	.LFB73
 3160 0b5b 00010000 		.4byte	.LFE73-.LFB73
 3161 0b5f 01       		.uleb128 0x1
 3162 0b60 9C       		.byte	0x9c
 3163 0b61 520D0000 		.4byte	0xd52
 3164 0b65 10       		.uleb128 0x10
 3165 0b66 05020000 		.4byte	.LASF75
 3166 0b6a 01       		.byte	0x1
 3167 0b6b 5405     		.2byte	0x554
 3168 0b6d 32020000 		.4byte	0x232
 3169 0b71 CB080000 		.4byte	.LLST42
 3170 0b75 10       		.uleb128 0x10
 3171 0b76 5E020000 		.4byte	.LASF72
 3172 0b7a 01       		.byte	0x1
 3173 0b7b 5405     		.2byte	0x554
 3174 0b7d BB040000 		.4byte	0x4bb
 3175 0b81 E9080000 		.4byte	.LLST43
 3176 0b85 10       		.uleb128 0x10
 3177 0b86 F4070000 		.4byte	.LASF87
 3178 0b8a 01       		.byte	0x1
 3179 0b8b 5405     		.2byte	0x554
 3180 0b8d 14010000 		.4byte	0x114
 3181 0b91 07090000 		.4byte	.LLST44
 3182 0b95 10       		.uleb128 0x10
 3183 0b96 28050000 		.4byte	.LASF101
 3184 0b9a 01       		.byte	0x1
 3185 0b9b 5405     		.2byte	0x554
 3186 0b9d 6E040000 		.4byte	0x46e
 3187 0ba1 3E090000 		.4byte	.LLST45
 3188 0ba5 13       		.uleb128 0x13
 3189 0ba6 A1020000 		.4byte	.LASF89
 3190 0baa 01       		.byte	0x1
 3191 0bab 5605     		.2byte	0x556
 3192 0bad FE000000 		.4byte	0xfe
 3193 0bb1 5C090000 		.4byte	.LLST46
 3194 0bb5 11       		.uleb128 0x11
 3195 0bb6 B6020000 		.4byte	.LASF91
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 104


 3196 0bba 01       		.byte	0x1
 3197 0bbb 5705     		.2byte	0x557
 3198 0bbd 27020000 		.4byte	0x227
 3199 0bc1 02       		.uleb128 0x2
 3200 0bc2 91       		.byte	0x91
 3201 0bc3 60       		.sleb128 -32
 3202 0bc4 13       		.uleb128 0x13
 3203 0bc5 F8040000 		.4byte	.LASF102
 3204 0bc9 01       		.byte	0x1
 3205 0bca 5805     		.2byte	0x558
 3206 0bcc 5C020000 		.4byte	0x25c
 3207 0bd0 9D090000 		.4byte	.LLST47
 3208 0bd4 13       		.uleb128 0x13
 3209 0bd5 BA060000 		.4byte	.LASF67
 3210 0bd9 01       		.byte	0x1
 3211 0bda 5905     		.2byte	0x559
 3212 0bdc 63040000 		.4byte	0x463
 3213 0be0 B0090000 		.4byte	.LLST48
 3214 0be4 12       		.uleb128 0x12
 3215 0be5 12000000 		.4byte	.LVL146
 3216 0be9 9D110000 		.4byte	0x119d
 3217 0bed 17       		.uleb128 0x17
 3218 0bee 20000000 		.4byte	.LVL148
 3219 0bf2 73040000 		.4byte	0x473
 3220 0bf6 070C0000 		.4byte	0xc07
 3221 0bfa 16       		.uleb128 0x16
 3222 0bfb 01       		.uleb128 0x1
 3223 0bfc 51       		.byte	0x51
 3224 0bfd 02       		.uleb128 0x2
 3225 0bfe 77       		.byte	0x77
 3226 0bff 00       		.sleb128 0
 3227 0c00 16       		.uleb128 0x16
 3228 0c01 01       		.uleb128 0x1
 3229 0c02 50       		.byte	0x50
 3230 0c03 02       		.uleb128 0x2
 3231 0c04 74       		.byte	0x74
 3232 0c05 00       		.sleb128 0
 3233 0c06 00       		.byte	0
 3234 0c07 12       		.uleb128 0x12
 3235 0c08 30000000 		.4byte	.LVL149
 3236 0c0c E5120000 		.4byte	0x12e5
 3237 0c10 17       		.uleb128 0x17
 3238 0c11 3E000000 		.4byte	.LVL150
 3239 0c15 E3110000 		.4byte	0x11e3
 3240 0c19 240C0000 		.4byte	0xc24
 3241 0c1d 16       		.uleb128 0x16
 3242 0c1e 01       		.uleb128 0x1
 3243 0c1f 50       		.byte	0x50
 3244 0c20 02       		.uleb128 0x2
 3245 0c21 74       		.byte	0x74
 3246 0c22 10       		.sleb128 16
 3247 0c23 00       		.byte	0
 3248 0c24 12       		.uleb128 0x12
 3249 0c25 46000000 		.4byte	.LVL151
 3250 0c29 11120000 		.4byte	0x1211
 3251 0c2d 17       		.uleb128 0x17
 3252 0c2e 56000000 		.4byte	.LVL152
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 105


 3253 0c32 E3110000 		.4byte	0x11e3
 3254 0c36 410C0000 		.4byte	0xc41
 3255 0c3a 16       		.uleb128 0x16
 3256 0c3b 01       		.uleb128 0x1
 3257 0c3c 50       		.byte	0x50
 3258 0c3d 02       		.uleb128 0x2
 3259 0c3e 74       		.byte	0x74
 3260 0c3f 24       		.sleb128 36
 3261 0c40 00       		.byte	0
 3262 0c41 12       		.uleb128 0x12
 3263 0c42 5C000000 		.4byte	.LVL153
 3264 0c46 11120000 		.4byte	0x1211
 3265 0c4a 12       		.uleb128 0x12
 3266 0c4b 60000000 		.4byte	.LVL154
 3267 0c4f A4110000 		.4byte	0x11a4
 3268 0c53 12       		.uleb128 0x12
 3269 0c54 6C000000 		.4byte	.LVL156
 3270 0c58 A4110000 		.4byte	0x11a4
 3271 0c5c 17       		.uleb128 0x17
 3272 0c5d 78000000 		.4byte	.LVL157
 3273 0c61 4A120000 		.4byte	0x124a
 3274 0c65 700C0000 		.4byte	0xc70
 3275 0c69 16       		.uleb128 0x16
 3276 0c6a 01       		.uleb128 0x1
 3277 0c6b 50       		.byte	0x50
 3278 0c6c 02       		.uleb128 0x2
 3279 0c6d 91       		.byte	0x91
 3280 0c6e 60       		.sleb128 -32
 3281 0c6f 00       		.byte	0
 3282 0c70 12       		.uleb128 0x12
 3283 0c71 7E000000 		.4byte	.LVL159
 3284 0c75 A4110000 		.4byte	0x11a4
 3285 0c79 12       		.uleb128 0x12
 3286 0c7a 82000000 		.4byte	.LVL160
 3287 0c7e 67120000 		.4byte	0x1267
 3288 0c82 12       		.uleb128 0x12
 3289 0c83 86000000 		.4byte	.LVL161
 3290 0c87 9D110000 		.4byte	0x119d
 3291 0c8b 12       		.uleb128 0x12
 3292 0c8c A2000000 		.4byte	.LVL162
 3293 0c90 A4110000 		.4byte	0x11a4
 3294 0c94 17       		.uleb128 0x17
 3295 0c95 AA000000 		.4byte	.LVL164
 3296 0c99 6F120000 		.4byte	0x126f
 3297 0c9d AE0C0000 		.4byte	0xcae
 3298 0ca1 16       		.uleb128 0x16
 3299 0ca2 01       		.uleb128 0x1
 3300 0ca3 51       		.byte	0x51
 3301 0ca4 02       		.uleb128 0x2
 3302 0ca5 91       		.byte	0x91
 3303 0ca6 5C       		.sleb128 -36
 3304 0ca7 16       		.uleb128 0x16
 3305 0ca8 01       		.uleb128 0x1
 3306 0ca9 50       		.byte	0x50
 3307 0caa 02       		.uleb128 0x2
 3308 0cab 91       		.byte	0x91
 3309 0cac 60       		.sleb128 -32
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 106


 3310 0cad 00       		.byte	0
 3311 0cae 17       		.uleb128 0x17
 3312 0caf B2000000 		.4byte	.LVL165
 3313 0cb3 A2030000 		.4byte	0x3a2
 3314 0cb7 C20C0000 		.4byte	0xcc2
 3315 0cbb 16       		.uleb128 0x16
 3316 0cbc 01       		.uleb128 0x1
 3317 0cbd 50       		.byte	0x50
 3318 0cbe 02       		.uleb128 0x2
 3319 0cbf 74       		.byte	0x74
 3320 0cc0 00       		.sleb128 0
 3321 0cc1 00       		.byte	0
 3322 0cc2 12       		.uleb128 0x12
 3323 0cc3 BC000000 		.4byte	.LVL166
 3324 0cc7 9D110000 		.4byte	0x119d
 3325 0ccb 12       		.uleb128 0x12
 3326 0ccc C2000000 		.4byte	.LVL167
 3327 0cd0 F1120000 		.4byte	0x12f1
 3328 0cd4 12       		.uleb128 0x12
 3329 0cd5 C6000000 		.4byte	.LVL168
 3330 0cd9 A4110000 		.4byte	0x11a4
 3331 0cdd 17       		.uleb128 0x17
 3332 0cde D0000000 		.4byte	.LVL169
 3333 0ce2 95120000 		.4byte	0x1295
 3334 0ce6 F10C0000 		.4byte	0xcf1
 3335 0cea 16       		.uleb128 0x16
 3336 0ceb 01       		.uleb128 0x1
 3337 0cec 50       		.byte	0x50
 3338 0ced 02       		.uleb128 0x2
 3339 0cee 74       		.byte	0x74
 3340 0cef 24       		.sleb128 36
 3341 0cf0 00       		.byte	0
 3342 0cf1 17       		.uleb128 0x17
 3343 0cf2 D6000000 		.4byte	.LVL170
 3344 0cf6 C0040000 		.4byte	0x4c0
 3345 0cfa 050D0000 		.4byte	0xd05
 3346 0cfe 16       		.uleb128 0x16
 3347 0cff 01       		.uleb128 0x1
 3348 0d00 50       		.byte	0x50
 3349 0d01 02       		.uleb128 0x2
 3350 0d02 74       		.byte	0x74
 3351 0d03 00       		.sleb128 0
 3352 0d04 00       		.byte	0
 3353 0d05 12       		.uleb128 0x12
 3354 0d06 DA000000 		.4byte	.LVL171
 3355 0d0a B1120000 		.4byte	0x12b1
 3356 0d0e 12       		.uleb128 0x12
 3357 0d0f E2000000 		.4byte	.LVL172
 3358 0d13 11120000 		.4byte	0x1211
 3359 0d17 17       		.uleb128 0x17
 3360 0d18 EA000000 		.4byte	.LVL173
 3361 0d1c C0040000 		.4byte	0x4c0
 3362 0d20 2B0D0000 		.4byte	0xd2b
 3363 0d24 16       		.uleb128 0x16
 3364 0d25 01       		.uleb128 0x1
 3365 0d26 50       		.byte	0x50
 3366 0d27 02       		.uleb128 0x2
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 107


 3367 0d28 74       		.byte	0x74
 3368 0d29 00       		.sleb128 0
 3369 0d2a 00       		.byte	0
 3370 0d2b 12       		.uleb128 0x12
 3371 0d2c EE000000 		.4byte	.LVL174
 3372 0d30 B1120000 		.4byte	0x12b1
 3373 0d34 17       		.uleb128 0x17
 3374 0d35 F6000000 		.4byte	.LVL175
 3375 0d39 C0040000 		.4byte	0x4c0
 3376 0d3d 480D0000 		.4byte	0xd48
 3377 0d41 16       		.uleb128 0x16
 3378 0d42 01       		.uleb128 0x1
 3379 0d43 50       		.byte	0x50
 3380 0d44 02       		.uleb128 0x2
 3381 0d45 74       		.byte	0x74
 3382 0d46 00       		.sleb128 0
 3383 0d47 00       		.byte	0
 3384 0d48 12       		.uleb128 0x12
 3385 0d49 FA000000 		.4byte	.LVL176
 3386 0d4d B1120000 		.4byte	0x12b1
 3387 0d51 00       		.byte	0
 3388 0d52 18       		.uleb128 0x18
 3389 0d53 CA050000 		.4byte	.LASF103
 3390 0d57 01       		.byte	0x1
 3391 0d58 1C02     		.2byte	0x21c
 3392 0d5a FE000000 		.4byte	0xfe
 3393 0d5e 00000000 		.4byte	.LFB68
 3394 0d62 32000000 		.4byte	.LFE68-.LFB68
 3395 0d66 01       		.uleb128 0x1
 3396 0d67 9C       		.byte	0x9c
 3397 0d68 D60D0000 		.4byte	0xdd6
 3398 0d6c 10       		.uleb128 0x10
 3399 0d6d A7040000 		.4byte	.LASF94
 3400 0d71 01       		.byte	0x1
 3401 0d72 1C02     		.2byte	0x21c
 3402 0d74 32020000 		.4byte	0x232
 3403 0d78 CE090000 		.4byte	.LLST49
 3404 0d7c 10       		.uleb128 0x10
 3405 0d7d F4070000 		.4byte	.LASF87
 3406 0d81 01       		.byte	0x1
 3407 0d82 1C02     		.2byte	0x21c
 3408 0d84 14010000 		.4byte	0x114
 3409 0d88 EC090000 		.4byte	.LLST50
 3410 0d8c 13       		.uleb128 0x13
 3411 0d8d C2060000 		.4byte	.LASF68
 3412 0d91 01       		.byte	0x1
 3413 0d92 1E02     		.2byte	0x21e
 3414 0d94 FE000000 		.4byte	0xfe
 3415 0d98 0A0A0000 		.4byte	.LLST51
 3416 0d9c 13       		.uleb128 0x13
 3417 0d9d 73000000 		.4byte	.LASF95
 3418 0da1 01       		.byte	0x1
 3419 0da2 1F02     		.2byte	0x21f
 3420 0da4 63040000 		.4byte	0x463
 3421 0da8 290A0000 		.4byte	.LLST52
 3422 0dac 12       		.uleb128 0x12
 3423 0dad 0C000000 		.4byte	.LVL180
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 108


 3424 0db1 BD120000 		.4byte	0x12bd
 3425 0db5 15       		.uleb128 0x15
 3426 0db6 26000000 		.4byte	.LVL183
 3427 0dba 4B0B0000 		.4byte	0xb4b
 3428 0dbe 16       		.uleb128 0x16
 3429 0dbf 01       		.uleb128 0x1
 3430 0dc0 53       		.byte	0x53
 3431 0dc1 01       		.uleb128 0x1
 3432 0dc2 30       		.byte	0x30
 3433 0dc3 16       		.uleb128 0x16
 3434 0dc4 01       		.uleb128 0x1
 3435 0dc5 52       		.byte	0x52
 3436 0dc6 02       		.uleb128 0x2
 3437 0dc7 76       		.byte	0x76
 3438 0dc8 00       		.sleb128 0
 3439 0dc9 16       		.uleb128 0x16
 3440 0dca 01       		.uleb128 0x1
 3441 0dcb 51       		.byte	0x51
 3442 0dcc 01       		.uleb128 0x1
 3443 0dcd 30       		.byte	0x30
 3444 0dce 16       		.uleb128 0x16
 3445 0dcf 01       		.uleb128 0x1
 3446 0dd0 50       		.byte	0x50
 3447 0dd1 02       		.uleb128 0x2
 3448 0dd2 74       		.byte	0x74
 3449 0dd3 00       		.sleb128 0
 3450 0dd4 00       		.byte	0
 3451 0dd5 00       		.byte	0
 3452 0dd6 18       		.uleb128 0x18
 3453 0dd7 2D000000 		.4byte	.LASF104
 3454 0ddb 01       		.byte	0x1
 3455 0ddc 0F06     		.2byte	0x60f
 3456 0dde FE000000 		.4byte	0xfe
 3457 0de2 00000000 		.4byte	.LFB74
 3458 0de6 60000000 		.4byte	.LFE74-.LFB74
 3459 0dea 01       		.uleb128 0x1
 3460 0deb 9C       		.byte	0x9c
 3461 0dec 960E0000 		.4byte	0xe96
 3462 0df0 10       		.uleb128 0x10
 3463 0df1 05020000 		.4byte	.LASF75
 3464 0df5 01       		.byte	0x1
 3465 0df6 0F06     		.2byte	0x60f
 3466 0df8 32020000 		.4byte	0x232
 3467 0dfc 470A0000 		.4byte	.LLST53
 3468 0e00 10       		.uleb128 0x10
 3469 0e01 5E020000 		.4byte	.LASF72
 3470 0e05 01       		.byte	0x1
 3471 0e06 0F06     		.2byte	0x60f
 3472 0e08 BB040000 		.4byte	0x4bb
 3473 0e0c F00A0000 		.4byte	.LLST54
 3474 0e10 10       		.uleb128 0x10
 3475 0e11 59000000 		.4byte	.LASF97
 3476 0e15 01       		.byte	0x1
 3477 0e16 0F06     		.2byte	0x60f
 3478 0e18 AA0A0000 		.4byte	0xaaa
 3479 0e1c 0E0B0000 		.4byte	.LLST55
 3480 0e20 11       		.uleb128 0x11
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 109


 3481 0e21 C2060000 		.4byte	.LASF68
 3482 0e25 01       		.byte	0x1
 3483 0e26 1106     		.2byte	0x611
 3484 0e28 FE000000 		.4byte	0xfe
 3485 0e2c 01       		.uleb128 0x1
 3486 0e2d 54       		.byte	0x54
 3487 0e2e 13       		.uleb128 0x13
 3488 0e2f CF010000 		.4byte	.LASF98
 3489 0e33 01       		.byte	0x1
 3490 0e34 1206     		.2byte	0x612
 3491 0e36 09010000 		.4byte	0x109
 3492 0e3a 2C0B0000 		.4byte	.LLST56
 3493 0e3e 13       		.uleb128 0x13
 3494 0e3f BA060000 		.4byte	.LASF67
 3495 0e43 01       		.byte	0x1
 3496 0e44 1306     		.2byte	0x613
 3497 0e46 63040000 		.4byte	0x463
 3498 0e4a 600B0000 		.4byte	.LLST57
 3499 0e4e 12       		.uleb128 0x12
 3500 0e4f 0C000000 		.4byte	.LVL186
 3501 0e53 C9120000 		.4byte	0x12c9
 3502 0e57 17       		.uleb128 0x17
 3503 0e58 1A000000 		.4byte	.LVL189
 3504 0e5c 73040000 		.4byte	0x473
 3505 0e60 710E0000 		.4byte	0xe71
 3506 0e64 16       		.uleb128 0x16
 3507 0e65 01       		.uleb128 0x1
 3508 0e66 51       		.byte	0x51
 3509 0e67 02       		.uleb128 0x2
 3510 0e68 76       		.byte	0x76
 3511 0e69 00       		.sleb128 0
 3512 0e6a 16       		.uleb128 0x16
 3513 0e6b 01       		.uleb128 0x1
 3514 0e6c 50       		.byte	0x50
 3515 0e6d 02       		.uleb128 0x2
 3516 0e6e 74       		.byte	0x74
 3517 0e6f 00       		.sleb128 0
 3518 0e70 00       		.byte	0
 3519 0e71 17       		.uleb128 0x17
 3520 0e72 34000000 		.4byte	.LVL190
 3521 0e76 E3110000 		.4byte	0x11e3
 3522 0e7a 850E0000 		.4byte	0xe85
 3523 0e7e 16       		.uleb128 0x16
 3524 0e7f 01       		.uleb128 0x1
 3525 0e80 50       		.byte	0x50
 3526 0e81 02       		.uleb128 0x2
 3527 0e82 74       		.byte	0x74
 3528 0e83 10       		.sleb128 16
 3529 0e84 00       		.byte	0
 3530 0e85 15       		.uleb128 0x15
 3531 0e86 5C000000 		.4byte	.LVL202
 3532 0e8a D4120000 		.4byte	0x12d4
 3533 0e8e 16       		.uleb128 0x16
 3534 0e8f 01       		.uleb128 0x1
 3535 0e90 50       		.byte	0x50
 3536 0e91 02       		.uleb128 0x2
 3537 0e92 75       		.byte	0x75
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 110


 3538 0e93 00       		.sleb128 0
 3539 0e94 00       		.byte	0
 3540 0e95 00       		.byte	0
 3541 0e96 18       		.uleb128 0x18
 3542 0e97 FE060000 		.4byte	.LASF105
 3543 0e9b 01       		.byte	0x1
 3544 0e9c 6606     		.2byte	0x666
 3545 0e9e FE000000 		.4byte	0xfe
 3546 0ea2 00000000 		.4byte	.LFB75
 3547 0ea6 2C000000 		.4byte	.LFE75-.LFB75
 3548 0eaa 01       		.uleb128 0x1
 3549 0eab 9C       		.byte	0x9c
 3550 0eac 440F0000 		.4byte	0xf44
 3551 0eb0 10       		.uleb128 0x10
 3552 0eb1 05020000 		.4byte	.LASF75
 3553 0eb5 01       		.byte	0x1
 3554 0eb6 6606     		.2byte	0x666
 3555 0eb8 32020000 		.4byte	0x232
 3556 0ebc 090C0000 		.4byte	.LLST58
 3557 0ec0 10       		.uleb128 0x10
 3558 0ec1 5E020000 		.4byte	.LASF72
 3559 0ec5 01       		.byte	0x1
 3560 0ec6 6606     		.2byte	0x666
 3561 0ec8 BB040000 		.4byte	0x4bb
 3562 0ecc 4E0C0000 		.4byte	.LLST59
 3563 0ed0 13       		.uleb128 0x13
 3564 0ed1 C2060000 		.4byte	.LASF68
 3565 0ed5 01       		.byte	0x1
 3566 0ed6 6806     		.2byte	0x668
 3567 0ed8 FE000000 		.4byte	0xfe
 3568 0edc 6C0C0000 		.4byte	.LLST60
 3569 0ee0 13       		.uleb128 0x13
 3570 0ee1 CF010000 		.4byte	.LASF98
 3571 0ee5 01       		.byte	0x1
 3572 0ee6 6906     		.2byte	0x669
 3573 0ee8 09010000 		.4byte	0x109
 3574 0eec 8B0C0000 		.4byte	.LLST61
 3575 0ef0 13       		.uleb128 0x13
 3576 0ef1 F8040000 		.4byte	.LASF102
 3577 0ef5 01       		.byte	0x1
 3578 0ef6 6A06     		.2byte	0x66a
 3579 0ef8 5C020000 		.4byte	0x25c
 3580 0efc BF0C0000 		.4byte	.LLST62
 3581 0f00 13       		.uleb128 0x13
 3582 0f01 BA060000 		.4byte	.LASF67
 3583 0f05 01       		.byte	0x1
 3584 0f06 6B06     		.2byte	0x66b
 3585 0f08 63040000 		.4byte	0x463
 3586 0f0c D20C0000 		.4byte	.LLST63
 3587 0f10 12       		.uleb128 0x12
 3588 0f11 0A000000 		.4byte	.LVL205
 3589 0f15 C9120000 		.4byte	0x12c9
 3590 0f19 17       		.uleb128 0x17
 3591 0f1a 1A000000 		.4byte	.LVL209
 3592 0f1e 73040000 		.4byte	0x473
 3593 0f22 330F0000 		.4byte	0xf33
 3594 0f26 16       		.uleb128 0x16
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 111


 3595 0f27 01       		.uleb128 0x1
 3596 0f28 51       		.byte	0x51
 3597 0f29 02       		.uleb128 0x2
 3598 0f2a 76       		.byte	0x76
 3599 0f2b 00       		.sleb128 0
 3600 0f2c 16       		.uleb128 0x16
 3601 0f2d 01       		.uleb128 0x1
 3602 0f2e 50       		.byte	0x50
 3603 0f2f 02       		.uleb128 0x2
 3604 0f30 74       		.byte	0x74
 3605 0f31 00       		.sleb128 0
 3606 0f32 00       		.byte	0
 3607 0f33 15       		.uleb128 0x15
 3608 0f34 28000000 		.4byte	.LVL214
 3609 0f38 D4120000 		.4byte	0x12d4
 3610 0f3c 16       		.uleb128 0x16
 3611 0f3d 01       		.uleb128 0x1
 3612 0f3e 50       		.byte	0x50
 3613 0f3f 02       		.uleb128 0x2
 3614 0f40 75       		.byte	0x75
 3615 0f41 00       		.sleb128 0
 3616 0f42 00       		.byte	0
 3617 0f43 00       		.byte	0
 3618 0f44 18       		.uleb128 0x18
 3619 0f45 92060000 		.4byte	.LASF106
 3620 0f49 01       		.byte	0x1
 3621 0f4a 9C06     		.2byte	0x69c
 3622 0f4c 09010000 		.4byte	0x109
 3623 0f50 00000000 		.4byte	.LFB76
 3624 0f54 12000000 		.4byte	.LFE76-.LFB76
 3625 0f58 01       		.uleb128 0x1
 3626 0f59 9C       		.byte	0x9c
 3627 0f5a 8F0F0000 		.4byte	0xf8f
 3628 0f5e 10       		.uleb128 0x10
 3629 0f5f 05020000 		.4byte	.LASF75
 3630 0f63 01       		.byte	0x1
 3631 0f64 9C06     		.2byte	0x69c
 3632 0f66 8F0F0000 		.4byte	0xf8f
 3633 0f6a 170D0000 		.4byte	.LLST64
 3634 0f6e 11       		.uleb128 0x11
 3635 0f6f 84010000 		.4byte	.LASF107
 3636 0f73 01       		.byte	0x1
 3637 0f74 9E06     		.2byte	0x69e
 3638 0f76 09010000 		.4byte	0x109
 3639 0f7a 01       		.uleb128 0x1
 3640 0f7b 54       		.byte	0x54
 3641 0f7c 12       		.uleb128 0x12
 3642 0f7d 08000000 		.4byte	.LVL216
 3643 0f81 9D110000 		.4byte	0x119d
 3644 0f85 12       		.uleb128 0x12
 3645 0f86 0E000000 		.4byte	.LVL218
 3646 0f8a A4110000 		.4byte	0x11a4
 3647 0f8e 00       		.byte	0
 3648 0f8f 07       		.uleb128 0x7
 3649 0f90 32020000 		.4byte	0x232
 3650 0f94 18       		.uleb128 0x18
 3651 0f95 20010000 		.4byte	.LASF108
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 112


 3652 0f99 01       		.byte	0x1
 3653 0f9a AC06     		.2byte	0x6ac
 3654 0f9c 09010000 		.4byte	0x109
 3655 0fa0 00000000 		.4byte	.LFB77
 3656 0fa4 16000000 		.4byte	.LFE77-.LFB77
 3657 0fa8 01       		.uleb128 0x1
 3658 0fa9 9C       		.byte	0x9c
 3659 0faa EF0F0000 		.4byte	0xfef
 3660 0fae 10       		.uleb128 0x10
 3661 0faf 05020000 		.4byte	.LASF75
 3662 0fb3 01       		.byte	0x1
 3663 0fb4 AC06     		.2byte	0x6ac
 3664 0fb6 8F0F0000 		.4byte	0xf8f
 3665 0fba 430D0000 		.4byte	.LLST65
 3666 0fbe 11       		.uleb128 0x11
 3667 0fbf 84010000 		.4byte	.LASF107
 3668 0fc3 01       		.byte	0x1
 3669 0fc4 AE06     		.2byte	0x6ae
 3670 0fc6 09010000 		.4byte	0x109
 3671 0fca 01       		.uleb128 0x1
 3672 0fcb 54       		.byte	0x54
 3673 0fcc 13       		.uleb128 0x13
 3674 0fcd BA060000 		.4byte	.LASF67
 3675 0fd1 01       		.byte	0x1
 3676 0fd2 AF06     		.2byte	0x6af
 3677 0fd4 68040000 		.4byte	0x468
 3678 0fd8 6F0D0000 		.4byte	.LLST66
 3679 0fdc 12       		.uleb128 0x12
 3680 0fdd 08000000 		.4byte	.LVL221
 3681 0fe1 9D110000 		.4byte	0x119d
 3682 0fe5 12       		.uleb128 0x12
 3683 0fe6 12000000 		.4byte	.LVL224
 3684 0fea A4110000 		.4byte	0x11a4
 3685 0fee 00       		.byte	0
 3686 0fef 18       		.uleb128 0x18
 3687 0ff0 20040000 		.4byte	.LASF109
 3688 0ff4 01       		.byte	0x1
 3689 0ff5 BE06     		.2byte	0x6be
 3690 0ff7 09010000 		.4byte	0x109
 3691 0ffb 00000000 		.4byte	.LFB78
 3692 0fff 04000000 		.4byte	.LFE78-.LFB78
 3693 1003 01       		.uleb128 0x1
 3694 1004 9C       		.byte	0x9c
 3695 1005 28100000 		.4byte	0x1028
 3696 1009 10       		.uleb128 0x10
 3697 100a 05020000 		.4byte	.LASF75
 3698 100e 01       		.byte	0x1
 3699 100f BE06     		.2byte	0x6be
 3700 1011 8F0F0000 		.4byte	0xf8f
 3701 1015 9B0D0000 		.4byte	.LLST67
 3702 1019 11       		.uleb128 0x11
 3703 101a 84010000 		.4byte	.LASF107
 3704 101e 01       		.byte	0x1
 3705 101f C006     		.2byte	0x6c0
 3706 1021 09010000 		.4byte	0x109
 3707 1025 01       		.uleb128 0x1
 3708 1026 50       		.byte	0x50
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 113


 3709 1027 00       		.byte	0
 3710 1028 18       		.uleb128 0x18
 3711 1029 6D080000 		.4byte	.LASF110
 3712 102d 01       		.byte	0x1
 3713 102e DC07     		.2byte	0x7dc
 3714 1030 FE000000 		.4byte	0xfe
 3715 1034 00000000 		.4byte	.LFB84
 3716 1038 0C000000 		.4byte	.LFE84-.LFB84
 3717 103c 01       		.uleb128 0x1
 3718 103d 9C       		.byte	0x9c
 3719 103e 61100000 		.4byte	0x1061
 3720 1042 10       		.uleb128 0x10
 3721 1043 05020000 		.4byte	.LASF75
 3722 1047 01       		.byte	0x1
 3723 1048 DC07     		.2byte	0x7dc
 3724 104a 8F0F0000 		.4byte	0xf8f
 3725 104e BC0D0000 		.4byte	.LLST68
 3726 1052 11       		.uleb128 0x11
 3727 1053 C2060000 		.4byte	.LASF68
 3728 1057 01       		.byte	0x1
 3729 1058 DE07     		.2byte	0x7de
 3730 105a FE000000 		.4byte	0xfe
 3731 105e 01       		.uleb128 0x1
 3732 105f 50       		.byte	0x50
 3733 1060 00       		.byte	0
 3734 1061 18       		.uleb128 0x18
 3735 1062 79060000 		.4byte	.LASF111
 3736 1066 01       		.byte	0x1
 3737 1067 0308     		.2byte	0x803
 3738 1069 FE000000 		.4byte	0xfe
 3739 106d 00000000 		.4byte	.LFB86
 3740 1071 10000000 		.4byte	.LFE86-.LFB86
 3741 1075 01       		.uleb128 0x1
 3742 1076 9C       		.byte	0x9c
 3743 1077 9A100000 		.4byte	0x109a
 3744 107b 10       		.uleb128 0x10
 3745 107c 05020000 		.4byte	.LASF75
 3746 1080 01       		.byte	0x1
 3747 1081 0308     		.2byte	0x803
 3748 1083 8F0F0000 		.4byte	0xf8f
 3749 1087 F60D0000 		.4byte	.LLST69
 3750 108b 11       		.uleb128 0x11
 3751 108c C2060000 		.4byte	.LASF68
 3752 1090 01       		.byte	0x1
 3753 1091 0508     		.2byte	0x805
 3754 1093 FE000000 		.4byte	0xfe
 3755 1097 01       		.uleb128 0x1
 3756 1098 50       		.byte	0x50
 3757 1099 00       		.byte	0
 3758 109a 19       		.uleb128 0x19
 3759 109b BE040000 		.4byte	.LASF112
 3760 109f 01       		.byte	0x1
 3761 10a0 2A09     		.2byte	0x92a
 3762 10a2 00000000 		.4byte	.LFB87
 3763 10a6 28000000 		.4byte	.LFE87-.LFB87
 3764 10aa 01       		.uleb128 0x1
 3765 10ab 9C       		.byte	0x9c
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 114


 3766 10ac DC100000 		.4byte	0x10dc
 3767 10b0 1A       		.uleb128 0x1a
 3768 10b1 05020000 		.4byte	.LASF75
 3769 10b5 01       		.byte	0x1
 3770 10b6 2A09     		.2byte	0x92a
 3771 10b8 32020000 		.4byte	0x232
 3772 10bc 01       		.uleb128 0x1
 3773 10bd 50       		.byte	0x50
 3774 10be 1A       		.uleb128 0x1a
 3775 10bf C7020000 		.4byte	.LASF61
 3776 10c3 01       		.byte	0x1
 3777 10c4 2A09     		.2byte	0x92a
 3778 10c6 B2000000 		.4byte	0xb2
 3779 10ca 01       		.uleb128 0x1
 3780 10cb 51       		.byte	0x51
 3781 10cc 1B       		.uleb128 0x1b
 3782 10cd 757800   		.ascii	"ux\000"
 3783 10d0 01       		.byte	0x1
 3784 10d1 2C09     		.2byte	0x92c
 3785 10d3 09010000 		.4byte	0x109
 3786 10d7 300E0000 		.4byte	.LLST70
 3787 10db 00       		.byte	0
 3788 10dc 19       		.uleb128 0x19
 3789 10dd B9010000 		.4byte	.LASF113
 3790 10e1 01       		.byte	0x1
 3791 10e2 4709     		.2byte	0x947
 3792 10e4 00000000 		.4byte	.LFB88
 3793 10e8 28000000 		.4byte	.LFE88-.LFB88
 3794 10ec 01       		.uleb128 0x1
 3795 10ed 9C       		.byte	0x9c
 3796 10ee 10110000 		.4byte	0x1110
 3797 10f2 1A       		.uleb128 0x1a
 3798 10f3 05020000 		.4byte	.LASF75
 3799 10f7 01       		.byte	0x1
 3800 10f8 4709     		.2byte	0x947
 3801 10fa 32020000 		.4byte	0x232
 3802 10fe 01       		.uleb128 0x1
 3803 10ff 50       		.byte	0x50
 3804 1100 1B       		.uleb128 0x1b
 3805 1101 757800   		.ascii	"ux\000"
 3806 1104 01       		.byte	0x1
 3807 1105 4909     		.2byte	0x949
 3808 1107 09010000 		.4byte	0x109
 3809 110b 5A0E0000 		.4byte	.LLST71
 3810 110f 00       		.byte	0
 3811 1110 19       		.uleb128 0x19
 3812 1111 A1010000 		.4byte	.LASF114
 3813 1115 01       		.byte	0x1
 3814 1116 CA06     		.2byte	0x6ca
 3815 1118 00000000 		.4byte	.LFB79
 3816 111c 10000000 		.4byte	.LFE79-.LFB79
 3817 1120 01       		.uleb128 0x1
 3818 1121 9C       		.byte	0x9c
 3819 1122 6B110000 		.4byte	0x116b
 3820 1126 10       		.uleb128 0x10
 3821 1127 05020000 		.4byte	.LASF75
 3822 112b 01       		.byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 115


 3823 112c CA06     		.2byte	0x6ca
 3824 112e 32020000 		.4byte	0x232
 3825 1132 790E0000 		.4byte	.LLST72
 3826 1136 13       		.uleb128 0x13
 3827 1137 BA060000 		.4byte	.LASF67
 3828 113b 01       		.byte	0x1
 3829 113c CC06     		.2byte	0x6cc
 3830 113e 63040000 		.4byte	0x463
 3831 1142 970E0000 		.4byte	.LLST73
 3832 1146 17       		.uleb128 0x17
 3833 1147 08000000 		.4byte	.LVL245
 3834 114b DC100000 		.4byte	0x10dc
 3835 114f 5A110000 		.4byte	0x115a
 3836 1153 16       		.uleb128 0x16
 3837 1154 01       		.uleb128 0x1
 3838 1155 50       		.byte	0x50
 3839 1156 02       		.uleb128 0x2
 3840 1157 74       		.byte	0x74
 3841 1158 00       		.sleb128 0
 3842 1159 00       		.byte	0
 3843 115a 15       		.uleb128 0x15
 3844 115b 0E000000 		.4byte	.LVL246
 3845 115f 03130000 		.4byte	0x1303
 3846 1163 16       		.uleb128 0x16
 3847 1164 01       		.uleb128 0x1
 3848 1165 50       		.byte	0x50
 3849 1166 02       		.uleb128 0x2
 3850 1167 74       		.byte	0x74
 3851 1168 00       		.sleb128 0
 3852 1169 00       		.byte	0
 3853 116a 00       		.byte	0
 3854 116b 1C       		.uleb128 0x1c
 3855 116c 16060000 		.4byte	.LASF115
 3856 1170 09       		.byte	0x9
 3857 1171 5506     		.2byte	0x655
 3858 1173 77110000 		.4byte	0x1177
 3859 1177 0E       		.uleb128 0xe
 3860 1178 DA000000 		.4byte	0xda
 3861 117c 1D       		.uleb128 0x1d
 3862 117d 41030000 		.4byte	0x341
 3863 1181 8C110000 		.4byte	0x118c
 3864 1185 1E       		.uleb128 0x1e
 3865 1186 A2000000 		.4byte	0xa2
 3866 118a 09       		.byte	0x9
 3867 118b 00       		.byte	0
 3868 118c 1F       		.uleb128 0x1f
 3869 118d E3030000 		.4byte	.LASF116
 3870 1191 01       		.byte	0x1
 3871 1192 C0       		.byte	0xc0
 3872 1193 7C110000 		.4byte	0x117c
 3873 1197 05       		.uleb128 0x5
 3874 1198 03       		.byte	0x3
 3875 1199 00000000 		.4byte	xQueueRegistry
 3876 119d 20       		.uleb128 0x20
 3877 119e 46010000 		.4byte	.LASF117
 3878 11a2 05       		.byte	0x5
 3879 11a3 83       		.byte	0x83
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 116


 3880 11a4 20       		.uleb128 0x20
 3881 11a5 10000000 		.4byte	.LASF118
 3882 11a9 05       		.byte	0x5
 3883 11aa 84       		.byte	0x84
 3884 11ab 21       		.uleb128 0x21
 3885 11ac 75030000 		.4byte	.LASF119
 3886 11b0 07       		.byte	0x7
 3887 11b1 BC07     		.2byte	0x7bc
 3888 11b3 FE000000 		.4byte	0xfe
 3889 11b7 C1110000 		.4byte	0x11c1
 3890 11bb 22       		.uleb128 0x22
 3891 11bc C1110000 		.4byte	0x11c1
 3892 11c0 00       		.byte	0
 3893 11c1 07       		.uleb128 0x7
 3894 11c2 F7010000 		.4byte	0x1f7
 3895 11c6 23       		.uleb128 0x23
 3896 11c7 A6080000 		.4byte	.LASF123
 3897 11cb A9000000 		.4byte	0xa9
 3898 11cf E3110000 		.4byte	0x11e3
 3899 11d3 22       		.uleb128 0x22
 3900 11d4 A9000000 		.4byte	0xa9
 3901 11d8 22       		.uleb128 0x22
 3902 11d9 BD000000 		.4byte	0xbd
 3903 11dd 22       		.uleb128 0x22
 3904 11de A2000000 		.4byte	0xa2
 3905 11e2 00       		.byte	0
 3906 11e3 21       		.uleb128 0x21
 3907 11e4 8D030000 		.4byte	.LASF120
 3908 11e8 07       		.byte	0x7
 3909 11e9 8307     		.2byte	0x783
 3910 11eb FE000000 		.4byte	0xfe
 3911 11ef F9110000 		.4byte	0x11f9
 3912 11f3 22       		.uleb128 0x22
 3913 11f4 F9110000 		.4byte	0x11f9
 3914 11f8 00       		.byte	0
 3915 11f9 07       		.uleb128 0x7
 3916 11fa FE110000 		.4byte	0x11fe
 3917 11fe 06       		.uleb128 0x6
 3918 11ff 04       		.byte	0x4
 3919 1200 04120000 		.4byte	0x1204
 3920 1204 07       		.uleb128 0x7
 3921 1205 EC010000 		.4byte	0x1ec
 3922 1209 24       		.uleb128 0x24
 3923 120a D3060000 		.4byte	.LASF121
 3924 120e 07       		.byte	0x7
 3925 120f AA07     		.2byte	0x7aa
 3926 1211 20       		.uleb128 0x20
 3927 1212 22000000 		.4byte	.LASF122
 3928 1216 05       		.byte	0x5
 3929 1217 7A       		.byte	0x7a
 3930 1218 25       		.uleb128 0x25
 3931 1219 B7070000 		.4byte	.LASF124
 3932 121d 06       		.byte	0x6
 3933 121e 8201     		.2byte	0x182
 3934 1220 2A120000 		.4byte	0x122a
 3935 1224 22       		.uleb128 0x22
 3936 1225 2A120000 		.4byte	0x122a
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 117


 3937 1229 00       		.byte	0
 3938 122a 07       		.uleb128 0x7
 3939 122b 2F120000 		.4byte	0x122f
 3940 122f 06       		.uleb128 0x6
 3941 1230 04       		.byte	0x4
 3942 1231 EC010000 		.4byte	0x1ec
 3943 1235 26       		.uleb128 0x26
 3944 1236 84020000 		.4byte	.LASF125
 3945 123a 0A       		.byte	0xa
 3946 123b AB       		.byte	0xab
 3947 123c A9000000 		.4byte	0xa9
 3948 1240 4A120000 		.4byte	0x124a
 3949 1244 22       		.uleb128 0x22
 3950 1245 25000000 		.4byte	0x25
 3951 1249 00       		.byte	0
 3952 124a 25       		.uleb128 0x25
 3953 124b F7000000 		.4byte	.LASF126
 3954 124f 07       		.byte	0x7
 3955 1250 9E07     		.2byte	0x79e
 3956 1252 5C120000 		.4byte	0x125c
 3957 1256 22       		.uleb128 0x22
 3958 1257 5C120000 		.4byte	0x125c
 3959 125b 00       		.byte	0
 3960 125c 07       		.uleb128 0x7
 3961 125d 61120000 		.4byte	0x1261
 3962 1261 06       		.uleb128 0x6
 3963 1262 04       		.byte	0x4
 3964 1263 27020000 		.4byte	0x227
 3965 1267 24       		.uleb128 0x24
 3966 1268 91020000 		.4byte	.LASF127
 3967 126c 07       		.byte	0x7
 3968 126d E603     		.2byte	0x3e6
 3969 126f 21       		.uleb128 0x21
 3970 1270 5A060000 		.4byte	.LASF128
 3971 1274 07       		.byte	0x7
 3972 1275 A407     		.2byte	0x7a4
 3973 1277 FE000000 		.4byte	0xfe
 3974 127b 8A120000 		.4byte	0x128a
 3975 127f 22       		.uleb128 0x22
 3976 1280 5C120000 		.4byte	0x125c
 3977 1284 22       		.uleb128 0x22
 3978 1285 8A120000 		.4byte	0x128a
 3979 1289 00       		.byte	0
 3980 128a 07       		.uleb128 0x7
 3981 128b 8F120000 		.4byte	0x128f
 3982 128f 06       		.uleb128 0x6
 3983 1290 04       		.byte	0x4
 3984 1291 14010000 		.4byte	0x114
 3985 1295 25       		.uleb128 0x25
 3986 1296 27030000 		.4byte	.LASF129
 3987 129a 07       		.byte	0x7
 3988 129b 5B07     		.2byte	0x75b
 3989 129d AC120000 		.4byte	0x12ac
 3990 12a1 22       		.uleb128 0x22
 3991 12a2 2A120000 		.4byte	0x122a
 3992 12a6 22       		.uleb128 0x22
 3993 12a7 AC120000 		.4byte	0x12ac
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 118


 3994 12ab 00       		.byte	0
 3995 12ac 07       		.uleb128 0x7
 3996 12ad 14010000 		.4byte	0x114
 3997 12b1 27       		.uleb128 0x27
 3998 12b2 35060000 		.4byte	.LASF130
 3999 12b6 07       		.byte	0x7
 4000 12b7 1C04     		.2byte	0x41c
 4001 12b9 FE000000 		.4byte	0xfe
 4002 12bd 27       		.uleb128 0x27
 4003 12be 09080000 		.4byte	.LASF131
 4004 12c2 07       		.byte	0x7
 4005 12c3 9907     		.2byte	0x799
 4006 12c5 F7010000 		.4byte	0x1f7
 4007 12c9 28       		.uleb128 0x28
 4008 12ca 09040000 		.4byte	.LASF132
 4009 12ce 05       		.byte	0x5
 4010 12cf 85       		.byte	0x85
 4011 12d0 E5000000 		.4byte	0xe5
 4012 12d4 29       		.uleb128 0x29
 4013 12d5 DC070000 		.4byte	.LASF133
 4014 12d9 05       		.byte	0x5
 4015 12da 86       		.byte	0x86
 4016 12db E5120000 		.4byte	0x12e5
 4017 12df 22       		.uleb128 0x22
 4018 12e0 E5000000 		.4byte	0xe5
 4019 12e4 00       		.byte	0
 4020 12e5 27       		.uleb128 0x27
 4021 12e6 3D030000 		.4byte	.LASF134
 4022 12ea 07       		.byte	0x7
 4023 12eb ED07     		.2byte	0x7ed
 4024 12ed A9000000 		.4byte	0xa9
 4025 12f1 25       		.uleb128 0x25
 4026 12f2 A4000000 		.4byte	.LASF135
 4027 12f6 07       		.byte	0x7
 4028 12f7 B607     		.2byte	0x7b6
 4029 12f9 03130000 		.4byte	0x1303
 4030 12fd 22       		.uleb128 0x22
 4031 12fe C1110000 		.4byte	0x11c1
 4032 1302 00       		.byte	0
 4033 1303 2A       		.uleb128 0x2a
 4034 1304 6F060000 		.4byte	.LASF139
 4035 1308 0A       		.byte	0xa
 4036 1309 AC       		.byte	0xac
 4037 130a 22       		.uleb128 0x22
 4038 130b A9000000 		.4byte	0xa9
 4039 130f 00       		.byte	0
 4040 1310 00       		.byte	0
 4041              		.section	.debug_abbrev,"",%progbits
 4042              	.Ldebug_abbrev0:
 4043 0000 01       		.uleb128 0x1
 4044 0001 11       		.uleb128 0x11
 4045 0002 01       		.byte	0x1
 4046 0003 25       		.uleb128 0x25
 4047 0004 0E       		.uleb128 0xe
 4048 0005 13       		.uleb128 0x13
 4049 0006 0B       		.uleb128 0xb
 4050 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 119


 4051 0008 0E       		.uleb128 0xe
 4052 0009 1B       		.uleb128 0x1b
 4053 000a 0E       		.uleb128 0xe
 4054 000b 55       		.uleb128 0x55
 4055 000c 17       		.uleb128 0x17
 4056 000d 11       		.uleb128 0x11
 4057 000e 01       		.uleb128 0x1
 4058 000f 10       		.uleb128 0x10
 4059 0010 17       		.uleb128 0x17
 4060 0011 00       		.byte	0
 4061 0012 00       		.byte	0
 4062 0013 02       		.uleb128 0x2
 4063 0014 16       		.uleb128 0x16
 4064 0015 00       		.byte	0
 4065 0016 03       		.uleb128 0x3
 4066 0017 0E       		.uleb128 0xe
 4067 0018 3A       		.uleb128 0x3a
 4068 0019 0B       		.uleb128 0xb
 4069 001a 3B       		.uleb128 0x3b
 4070 001b 0B       		.uleb128 0xb
 4071 001c 49       		.uleb128 0x49
 4072 001d 13       		.uleb128 0x13
 4073 001e 00       		.byte	0
 4074 001f 00       		.byte	0
 4075 0020 03       		.uleb128 0x3
 4076 0021 24       		.uleb128 0x24
 4077 0022 00       		.byte	0
 4078 0023 0B       		.uleb128 0xb
 4079 0024 0B       		.uleb128 0xb
 4080 0025 3E       		.uleb128 0x3e
 4081 0026 0B       		.uleb128 0xb
 4082 0027 03       		.uleb128 0x3
 4083 0028 0E       		.uleb128 0xe
 4084 0029 00       		.byte	0
 4085 002a 00       		.byte	0
 4086 002b 04       		.uleb128 0x4
 4087 002c 24       		.uleb128 0x24
 4088 002d 00       		.byte	0
 4089 002e 0B       		.uleb128 0xb
 4090 002f 0B       		.uleb128 0xb
 4091 0030 3E       		.uleb128 0x3e
 4092 0031 0B       		.uleb128 0xb
 4093 0032 03       		.uleb128 0x3
 4094 0033 08       		.uleb128 0x8
 4095 0034 00       		.byte	0
 4096 0035 00       		.byte	0
 4097 0036 05       		.uleb128 0x5
 4098 0037 0F       		.uleb128 0xf
 4099 0038 00       		.byte	0
 4100 0039 0B       		.uleb128 0xb
 4101 003a 0B       		.uleb128 0xb
 4102 003b 00       		.byte	0
 4103 003c 00       		.byte	0
 4104 003d 06       		.uleb128 0x6
 4105 003e 0F       		.uleb128 0xf
 4106 003f 00       		.byte	0
 4107 0040 0B       		.uleb128 0xb
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 120


 4108 0041 0B       		.uleb128 0xb
 4109 0042 49       		.uleb128 0x49
 4110 0043 13       		.uleb128 0x13
 4111 0044 00       		.byte	0
 4112 0045 00       		.byte	0
 4113 0046 07       		.uleb128 0x7
 4114 0047 26       		.uleb128 0x26
 4115 0048 00       		.byte	0
 4116 0049 49       		.uleb128 0x49
 4117 004a 13       		.uleb128 0x13
 4118 004b 00       		.byte	0
 4119 004c 00       		.byte	0
 4120 004d 08       		.uleb128 0x8
 4121 004e 26       		.uleb128 0x26
 4122 004f 00       		.byte	0
 4123 0050 00       		.byte	0
 4124 0051 00       		.byte	0
 4125 0052 09       		.uleb128 0x9
 4126 0053 13       		.uleb128 0x13
 4127 0054 01       		.byte	0x1
 4128 0055 03       		.uleb128 0x3
 4129 0056 0E       		.uleb128 0xe
 4130 0057 0B       		.uleb128 0xb
 4131 0058 0B       		.uleb128 0xb
 4132 0059 3A       		.uleb128 0x3a
 4133 005a 0B       		.uleb128 0xb
 4134 005b 3B       		.uleb128 0x3b
 4135 005c 0B       		.uleb128 0xb
 4136 005d 01       		.uleb128 0x1
 4137 005e 13       		.uleb128 0x13
 4138 005f 00       		.byte	0
 4139 0060 00       		.byte	0
 4140 0061 0A       		.uleb128 0xa
 4141 0062 0D       		.uleb128 0xd
 4142 0063 00       		.byte	0
 4143 0064 03       		.uleb128 0x3
 4144 0065 0E       		.uleb128 0xe
 4145 0066 3A       		.uleb128 0x3a
 4146 0067 0B       		.uleb128 0xb
 4147 0068 3B       		.uleb128 0x3b
 4148 0069 0B       		.uleb128 0xb
 4149 006a 49       		.uleb128 0x49
 4150 006b 13       		.uleb128 0x13
 4151 006c 38       		.uleb128 0x38
 4152 006d 0B       		.uleb128 0xb
 4153 006e 00       		.byte	0
 4154 006f 00       		.byte	0
 4155 0070 0B       		.uleb128 0xb
 4156 0071 17       		.uleb128 0x17
 4157 0072 01       		.byte	0x1
 4158 0073 0B       		.uleb128 0xb
 4159 0074 0B       		.uleb128 0xb
 4160 0075 3A       		.uleb128 0x3a
 4161 0076 0B       		.uleb128 0xb
 4162 0077 3B       		.uleb128 0x3b
 4163 0078 0B       		.uleb128 0xb
 4164 0079 01       		.uleb128 0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 121


 4165 007a 13       		.uleb128 0x13
 4166 007b 00       		.byte	0
 4167 007c 00       		.byte	0
 4168 007d 0C       		.uleb128 0xc
 4169 007e 0D       		.uleb128 0xd
 4170 007f 00       		.byte	0
 4171 0080 03       		.uleb128 0x3
 4172 0081 0E       		.uleb128 0xe
 4173 0082 3A       		.uleb128 0x3a
 4174 0083 0B       		.uleb128 0xb
 4175 0084 3B       		.uleb128 0x3b
 4176 0085 0B       		.uleb128 0xb
 4177 0086 49       		.uleb128 0x49
 4178 0087 13       		.uleb128 0x13
 4179 0088 00       		.byte	0
 4180 0089 00       		.byte	0
 4181 008a 0D       		.uleb128 0xd
 4182 008b 0D       		.uleb128 0xd
 4183 008c 00       		.byte	0
 4184 008d 03       		.uleb128 0x3
 4185 008e 08       		.uleb128 0x8
 4186 008f 3A       		.uleb128 0x3a
 4187 0090 0B       		.uleb128 0xb
 4188 0091 3B       		.uleb128 0x3b
 4189 0092 0B       		.uleb128 0xb
 4190 0093 49       		.uleb128 0x49
 4191 0094 13       		.uleb128 0x13
 4192 0095 38       		.uleb128 0x38
 4193 0096 0B       		.uleb128 0xb
 4194 0097 00       		.byte	0
 4195 0098 00       		.byte	0
 4196 0099 0E       		.uleb128 0xe
 4197 009a 35       		.uleb128 0x35
 4198 009b 00       		.byte	0
 4199 009c 49       		.uleb128 0x49
 4200 009d 13       		.uleb128 0x13
 4201 009e 00       		.byte	0
 4202 009f 00       		.byte	0
 4203 00a0 0F       		.uleb128 0xf
 4204 00a1 2E       		.uleb128 0x2e
 4205 00a2 01       		.byte	0x1
 4206 00a3 03       		.uleb128 0x3
 4207 00a4 0E       		.uleb128 0xe
 4208 00a5 3A       		.uleb128 0x3a
 4209 00a6 0B       		.uleb128 0xb
 4210 00a7 3B       		.uleb128 0x3b
 4211 00a8 05       		.uleb128 0x5
 4212 00a9 27       		.uleb128 0x27
 4213 00aa 19       		.uleb128 0x19
 4214 00ab 49       		.uleb128 0x49
 4215 00ac 13       		.uleb128 0x13
 4216 00ad 11       		.uleb128 0x11
 4217 00ae 01       		.uleb128 0x1
 4218 00af 12       		.uleb128 0x12
 4219 00b0 06       		.uleb128 0x6
 4220 00b1 40       		.uleb128 0x40
 4221 00b2 18       		.uleb128 0x18
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 122


 4222 00b3 9742     		.uleb128 0x2117
 4223 00b5 19       		.uleb128 0x19
 4224 00b6 01       		.uleb128 0x1
 4225 00b7 13       		.uleb128 0x13
 4226 00b8 00       		.byte	0
 4227 00b9 00       		.byte	0
 4228 00ba 10       		.uleb128 0x10
 4229 00bb 05       		.uleb128 0x5
 4230 00bc 00       		.byte	0
 4231 00bd 03       		.uleb128 0x3
 4232 00be 0E       		.uleb128 0xe
 4233 00bf 3A       		.uleb128 0x3a
 4234 00c0 0B       		.uleb128 0xb
 4235 00c1 3B       		.uleb128 0x3b
 4236 00c2 05       		.uleb128 0x5
 4237 00c3 49       		.uleb128 0x49
 4238 00c4 13       		.uleb128 0x13
 4239 00c5 02       		.uleb128 0x2
 4240 00c6 17       		.uleb128 0x17
 4241 00c7 00       		.byte	0
 4242 00c8 00       		.byte	0
 4243 00c9 11       		.uleb128 0x11
 4244 00ca 34       		.uleb128 0x34
 4245 00cb 00       		.byte	0
 4246 00cc 03       		.uleb128 0x3
 4247 00cd 0E       		.uleb128 0xe
 4248 00ce 3A       		.uleb128 0x3a
 4249 00cf 0B       		.uleb128 0xb
 4250 00d0 3B       		.uleb128 0x3b
 4251 00d1 05       		.uleb128 0x5
 4252 00d2 49       		.uleb128 0x49
 4253 00d3 13       		.uleb128 0x13
 4254 00d4 02       		.uleb128 0x2
 4255 00d5 18       		.uleb128 0x18
 4256 00d6 00       		.byte	0
 4257 00d7 00       		.byte	0
 4258 00d8 12       		.uleb128 0x12
 4259 00d9 898201   		.uleb128 0x4109
 4260 00dc 00       		.byte	0
 4261 00dd 11       		.uleb128 0x11
 4262 00de 01       		.uleb128 0x1
 4263 00df 31       		.uleb128 0x31
 4264 00e0 13       		.uleb128 0x13
 4265 00e1 00       		.byte	0
 4266 00e2 00       		.byte	0
 4267 00e3 13       		.uleb128 0x13
 4268 00e4 34       		.uleb128 0x34
 4269 00e5 00       		.byte	0
 4270 00e6 03       		.uleb128 0x3
 4271 00e7 0E       		.uleb128 0xe
 4272 00e8 3A       		.uleb128 0x3a
 4273 00e9 0B       		.uleb128 0xb
 4274 00ea 3B       		.uleb128 0x3b
 4275 00eb 05       		.uleb128 0x5
 4276 00ec 49       		.uleb128 0x49
 4277 00ed 13       		.uleb128 0x13
 4278 00ee 02       		.uleb128 0x2
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 123


 4279 00ef 17       		.uleb128 0x17
 4280 00f0 00       		.byte	0
 4281 00f1 00       		.byte	0
 4282 00f2 14       		.uleb128 0x14
 4283 00f3 2E       		.uleb128 0x2e
 4284 00f4 01       		.byte	0x1
 4285 00f5 03       		.uleb128 0x3
 4286 00f6 0E       		.uleb128 0xe
 4287 00f7 3A       		.uleb128 0x3a
 4288 00f8 0B       		.uleb128 0xb
 4289 00f9 3B       		.uleb128 0x3b
 4290 00fa 05       		.uleb128 0x5
 4291 00fb 27       		.uleb128 0x27
 4292 00fc 19       		.uleb128 0x19
 4293 00fd 11       		.uleb128 0x11
 4294 00fe 01       		.uleb128 0x1
 4295 00ff 12       		.uleb128 0x12
 4296 0100 06       		.uleb128 0x6
 4297 0101 40       		.uleb128 0x40
 4298 0102 18       		.uleb128 0x18
 4299 0103 9742     		.uleb128 0x2117
 4300 0105 19       		.uleb128 0x19
 4301 0106 01       		.uleb128 0x1
 4302 0107 13       		.uleb128 0x13
 4303 0108 00       		.byte	0
 4304 0109 00       		.byte	0
 4305 010a 15       		.uleb128 0x15
 4306 010b 898201   		.uleb128 0x4109
 4307 010e 01       		.byte	0x1
 4308 010f 11       		.uleb128 0x11
 4309 0110 01       		.uleb128 0x1
 4310 0111 31       		.uleb128 0x31
 4311 0112 13       		.uleb128 0x13
 4312 0113 00       		.byte	0
 4313 0114 00       		.byte	0
 4314 0115 16       		.uleb128 0x16
 4315 0116 8A8201   		.uleb128 0x410a
 4316 0119 00       		.byte	0
 4317 011a 02       		.uleb128 0x2
 4318 011b 18       		.uleb128 0x18
 4319 011c 9142     		.uleb128 0x2111
 4320 011e 18       		.uleb128 0x18
 4321 011f 00       		.byte	0
 4322 0120 00       		.byte	0
 4323 0121 17       		.uleb128 0x17
 4324 0122 898201   		.uleb128 0x4109
 4325 0125 01       		.byte	0x1
 4326 0126 11       		.uleb128 0x11
 4327 0127 01       		.uleb128 0x1
 4328 0128 31       		.uleb128 0x31
 4329 0129 13       		.uleb128 0x13
 4330 012a 01       		.uleb128 0x1
 4331 012b 13       		.uleb128 0x13
 4332 012c 00       		.byte	0
 4333 012d 00       		.byte	0
 4334 012e 18       		.uleb128 0x18
 4335 012f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 124


 4336 0130 01       		.byte	0x1
 4337 0131 3F       		.uleb128 0x3f
 4338 0132 19       		.uleb128 0x19
 4339 0133 03       		.uleb128 0x3
 4340 0134 0E       		.uleb128 0xe
 4341 0135 3A       		.uleb128 0x3a
 4342 0136 0B       		.uleb128 0xb
 4343 0137 3B       		.uleb128 0x3b
 4344 0138 05       		.uleb128 0x5
 4345 0139 27       		.uleb128 0x27
 4346 013a 19       		.uleb128 0x19
 4347 013b 49       		.uleb128 0x49
 4348 013c 13       		.uleb128 0x13
 4349 013d 11       		.uleb128 0x11
 4350 013e 01       		.uleb128 0x1
 4351 013f 12       		.uleb128 0x12
 4352 0140 06       		.uleb128 0x6
 4353 0141 40       		.uleb128 0x40
 4354 0142 18       		.uleb128 0x18
 4355 0143 9742     		.uleb128 0x2117
 4356 0145 19       		.uleb128 0x19
 4357 0146 01       		.uleb128 0x1
 4358 0147 13       		.uleb128 0x13
 4359 0148 00       		.byte	0
 4360 0149 00       		.byte	0
 4361 014a 19       		.uleb128 0x19
 4362 014b 2E       		.uleb128 0x2e
 4363 014c 01       		.byte	0x1
 4364 014d 3F       		.uleb128 0x3f
 4365 014e 19       		.uleb128 0x19
 4366 014f 03       		.uleb128 0x3
 4367 0150 0E       		.uleb128 0xe
 4368 0151 3A       		.uleb128 0x3a
 4369 0152 0B       		.uleb128 0xb
 4370 0153 3B       		.uleb128 0x3b
 4371 0154 05       		.uleb128 0x5
 4372 0155 27       		.uleb128 0x27
 4373 0156 19       		.uleb128 0x19
 4374 0157 11       		.uleb128 0x11
 4375 0158 01       		.uleb128 0x1
 4376 0159 12       		.uleb128 0x12
 4377 015a 06       		.uleb128 0x6
 4378 015b 40       		.uleb128 0x40
 4379 015c 18       		.uleb128 0x18
 4380 015d 9742     		.uleb128 0x2117
 4381 015f 19       		.uleb128 0x19
 4382 0160 01       		.uleb128 0x1
 4383 0161 13       		.uleb128 0x13
 4384 0162 00       		.byte	0
 4385 0163 00       		.byte	0
 4386 0164 1A       		.uleb128 0x1a
 4387 0165 05       		.uleb128 0x5
 4388 0166 00       		.byte	0
 4389 0167 03       		.uleb128 0x3
 4390 0168 0E       		.uleb128 0xe
 4391 0169 3A       		.uleb128 0x3a
 4392 016a 0B       		.uleb128 0xb
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 125


 4393 016b 3B       		.uleb128 0x3b
 4394 016c 05       		.uleb128 0x5
 4395 016d 49       		.uleb128 0x49
 4396 016e 13       		.uleb128 0x13
 4397 016f 02       		.uleb128 0x2
 4398 0170 18       		.uleb128 0x18
 4399 0171 00       		.byte	0
 4400 0172 00       		.byte	0
 4401 0173 1B       		.uleb128 0x1b
 4402 0174 34       		.uleb128 0x34
 4403 0175 00       		.byte	0
 4404 0176 03       		.uleb128 0x3
 4405 0177 08       		.uleb128 0x8
 4406 0178 3A       		.uleb128 0x3a
 4407 0179 0B       		.uleb128 0xb
 4408 017a 3B       		.uleb128 0x3b
 4409 017b 05       		.uleb128 0x5
 4410 017c 49       		.uleb128 0x49
 4411 017d 13       		.uleb128 0x13
 4412 017e 02       		.uleb128 0x2
 4413 017f 17       		.uleb128 0x17
 4414 0180 00       		.byte	0
 4415 0181 00       		.byte	0
 4416 0182 1C       		.uleb128 0x1c
 4417 0183 34       		.uleb128 0x34
 4418 0184 00       		.byte	0
 4419 0185 03       		.uleb128 0x3
 4420 0186 0E       		.uleb128 0xe
 4421 0187 3A       		.uleb128 0x3a
 4422 0188 0B       		.uleb128 0xb
 4423 0189 3B       		.uleb128 0x3b
 4424 018a 05       		.uleb128 0x5
 4425 018b 49       		.uleb128 0x49
 4426 018c 13       		.uleb128 0x13
 4427 018d 3F       		.uleb128 0x3f
 4428 018e 19       		.uleb128 0x19
 4429 018f 3C       		.uleb128 0x3c
 4430 0190 19       		.uleb128 0x19
 4431 0191 00       		.byte	0
 4432 0192 00       		.byte	0
 4433 0193 1D       		.uleb128 0x1d
 4434 0194 01       		.uleb128 0x1
 4435 0195 01       		.byte	0x1
 4436 0196 49       		.uleb128 0x49
 4437 0197 13       		.uleb128 0x13
 4438 0198 01       		.uleb128 0x1
 4439 0199 13       		.uleb128 0x13
 4440 019a 00       		.byte	0
 4441 019b 00       		.byte	0
 4442 019c 1E       		.uleb128 0x1e
 4443 019d 21       		.uleb128 0x21
 4444 019e 00       		.byte	0
 4445 019f 49       		.uleb128 0x49
 4446 01a0 13       		.uleb128 0x13
 4447 01a1 2F       		.uleb128 0x2f
 4448 01a2 0B       		.uleb128 0xb
 4449 01a3 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 126


 4450 01a4 00       		.byte	0
 4451 01a5 1F       		.uleb128 0x1f
 4452 01a6 34       		.uleb128 0x34
 4453 01a7 00       		.byte	0
 4454 01a8 03       		.uleb128 0x3
 4455 01a9 0E       		.uleb128 0xe
 4456 01aa 3A       		.uleb128 0x3a
 4457 01ab 0B       		.uleb128 0xb
 4458 01ac 3B       		.uleb128 0x3b
 4459 01ad 0B       		.uleb128 0xb
 4460 01ae 49       		.uleb128 0x49
 4461 01af 13       		.uleb128 0x13
 4462 01b0 3F       		.uleb128 0x3f
 4463 01b1 19       		.uleb128 0x19
 4464 01b2 02       		.uleb128 0x2
 4465 01b3 18       		.uleb128 0x18
 4466 01b4 00       		.byte	0
 4467 01b5 00       		.byte	0
 4468 01b6 20       		.uleb128 0x20
 4469 01b7 2E       		.uleb128 0x2e
 4470 01b8 00       		.byte	0
 4471 01b9 3F       		.uleb128 0x3f
 4472 01ba 19       		.uleb128 0x19
 4473 01bb 03       		.uleb128 0x3
 4474 01bc 0E       		.uleb128 0xe
 4475 01bd 3A       		.uleb128 0x3a
 4476 01be 0B       		.uleb128 0xb
 4477 01bf 3B       		.uleb128 0x3b
 4478 01c0 0B       		.uleb128 0xb
 4479 01c1 27       		.uleb128 0x27
 4480 01c2 19       		.uleb128 0x19
 4481 01c3 3C       		.uleb128 0x3c
 4482 01c4 19       		.uleb128 0x19
 4483 01c5 00       		.byte	0
 4484 01c6 00       		.byte	0
 4485 01c7 21       		.uleb128 0x21
 4486 01c8 2E       		.uleb128 0x2e
 4487 01c9 01       		.byte	0x1
 4488 01ca 3F       		.uleb128 0x3f
 4489 01cb 19       		.uleb128 0x19
 4490 01cc 03       		.uleb128 0x3
 4491 01cd 0E       		.uleb128 0xe
 4492 01ce 3A       		.uleb128 0x3a
 4493 01cf 0B       		.uleb128 0xb
 4494 01d0 3B       		.uleb128 0x3b
 4495 01d1 05       		.uleb128 0x5
 4496 01d2 27       		.uleb128 0x27
 4497 01d3 19       		.uleb128 0x19
 4498 01d4 49       		.uleb128 0x49
 4499 01d5 13       		.uleb128 0x13
 4500 01d6 3C       		.uleb128 0x3c
 4501 01d7 19       		.uleb128 0x19
 4502 01d8 01       		.uleb128 0x1
 4503 01d9 13       		.uleb128 0x13
 4504 01da 00       		.byte	0
 4505 01db 00       		.byte	0
 4506 01dc 22       		.uleb128 0x22
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 127


 4507 01dd 05       		.uleb128 0x5
 4508 01de 00       		.byte	0
 4509 01df 49       		.uleb128 0x49
 4510 01e0 13       		.uleb128 0x13
 4511 01e1 00       		.byte	0
 4512 01e2 00       		.byte	0
 4513 01e3 23       		.uleb128 0x23
 4514 01e4 2E       		.uleb128 0x2e
 4515 01e5 01       		.byte	0x1
 4516 01e6 3F       		.uleb128 0x3f
 4517 01e7 19       		.uleb128 0x19
 4518 01e8 03       		.uleb128 0x3
 4519 01e9 0E       		.uleb128 0xe
 4520 01ea 27       		.uleb128 0x27
 4521 01eb 19       		.uleb128 0x19
 4522 01ec 49       		.uleb128 0x49
 4523 01ed 13       		.uleb128 0x13
 4524 01ee 34       		.uleb128 0x34
 4525 01ef 19       		.uleb128 0x19
 4526 01f0 3C       		.uleb128 0x3c
 4527 01f1 19       		.uleb128 0x19
 4528 01f2 01       		.uleb128 0x1
 4529 01f3 13       		.uleb128 0x13
 4530 01f4 00       		.byte	0
 4531 01f5 00       		.byte	0
 4532 01f6 24       		.uleb128 0x24
 4533 01f7 2E       		.uleb128 0x2e
 4534 01f8 00       		.byte	0
 4535 01f9 3F       		.uleb128 0x3f
 4536 01fa 19       		.uleb128 0x19
 4537 01fb 03       		.uleb128 0x3
 4538 01fc 0E       		.uleb128 0xe
 4539 01fd 3A       		.uleb128 0x3a
 4540 01fe 0B       		.uleb128 0xb
 4541 01ff 3B       		.uleb128 0x3b
 4542 0200 05       		.uleb128 0x5
 4543 0201 27       		.uleb128 0x27
 4544 0202 19       		.uleb128 0x19
 4545 0203 3C       		.uleb128 0x3c
 4546 0204 19       		.uleb128 0x19
 4547 0205 00       		.byte	0
 4548 0206 00       		.byte	0
 4549 0207 25       		.uleb128 0x25
 4550 0208 2E       		.uleb128 0x2e
 4551 0209 01       		.byte	0x1
 4552 020a 3F       		.uleb128 0x3f
 4553 020b 19       		.uleb128 0x19
 4554 020c 03       		.uleb128 0x3
 4555 020d 0E       		.uleb128 0xe
 4556 020e 3A       		.uleb128 0x3a
 4557 020f 0B       		.uleb128 0xb
 4558 0210 3B       		.uleb128 0x3b
 4559 0211 05       		.uleb128 0x5
 4560 0212 27       		.uleb128 0x27
 4561 0213 19       		.uleb128 0x19
 4562 0214 3C       		.uleb128 0x3c
 4563 0215 19       		.uleb128 0x19
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 128


 4564 0216 01       		.uleb128 0x1
 4565 0217 13       		.uleb128 0x13
 4566 0218 00       		.byte	0
 4567 0219 00       		.byte	0
 4568 021a 26       		.uleb128 0x26
 4569 021b 2E       		.uleb128 0x2e
 4570 021c 01       		.byte	0x1
 4571 021d 3F       		.uleb128 0x3f
 4572 021e 19       		.uleb128 0x19
 4573 021f 03       		.uleb128 0x3
 4574 0220 0E       		.uleb128 0xe
 4575 0221 3A       		.uleb128 0x3a
 4576 0222 0B       		.uleb128 0xb
 4577 0223 3B       		.uleb128 0x3b
 4578 0224 0B       		.uleb128 0xb
 4579 0225 27       		.uleb128 0x27
 4580 0226 19       		.uleb128 0x19
 4581 0227 49       		.uleb128 0x49
 4582 0228 13       		.uleb128 0x13
 4583 0229 3C       		.uleb128 0x3c
 4584 022a 19       		.uleb128 0x19
 4585 022b 01       		.uleb128 0x1
 4586 022c 13       		.uleb128 0x13
 4587 022d 00       		.byte	0
 4588 022e 00       		.byte	0
 4589 022f 27       		.uleb128 0x27
 4590 0230 2E       		.uleb128 0x2e
 4591 0231 00       		.byte	0
 4592 0232 3F       		.uleb128 0x3f
 4593 0233 19       		.uleb128 0x19
 4594 0234 03       		.uleb128 0x3
 4595 0235 0E       		.uleb128 0xe
 4596 0236 3A       		.uleb128 0x3a
 4597 0237 0B       		.uleb128 0xb
 4598 0238 3B       		.uleb128 0x3b
 4599 0239 05       		.uleb128 0x5
 4600 023a 27       		.uleb128 0x27
 4601 023b 19       		.uleb128 0x19
 4602 023c 49       		.uleb128 0x49
 4603 023d 13       		.uleb128 0x13
 4604 023e 3C       		.uleb128 0x3c
 4605 023f 19       		.uleb128 0x19
 4606 0240 00       		.byte	0
 4607 0241 00       		.byte	0
 4608 0242 28       		.uleb128 0x28
 4609 0243 2E       		.uleb128 0x2e
 4610 0244 00       		.byte	0
 4611 0245 3F       		.uleb128 0x3f
 4612 0246 19       		.uleb128 0x19
 4613 0247 03       		.uleb128 0x3
 4614 0248 0E       		.uleb128 0xe
 4615 0249 3A       		.uleb128 0x3a
 4616 024a 0B       		.uleb128 0xb
 4617 024b 3B       		.uleb128 0x3b
 4618 024c 0B       		.uleb128 0xb
 4619 024d 27       		.uleb128 0x27
 4620 024e 19       		.uleb128 0x19
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 129


 4621 024f 49       		.uleb128 0x49
 4622 0250 13       		.uleb128 0x13
 4623 0251 3C       		.uleb128 0x3c
 4624 0252 19       		.uleb128 0x19
 4625 0253 00       		.byte	0
 4626 0254 00       		.byte	0
 4627 0255 29       		.uleb128 0x29
 4628 0256 2E       		.uleb128 0x2e
 4629 0257 01       		.byte	0x1
 4630 0258 3F       		.uleb128 0x3f
 4631 0259 19       		.uleb128 0x19
 4632 025a 03       		.uleb128 0x3
 4633 025b 0E       		.uleb128 0xe
 4634 025c 3A       		.uleb128 0x3a
 4635 025d 0B       		.uleb128 0xb
 4636 025e 3B       		.uleb128 0x3b
 4637 025f 0B       		.uleb128 0xb
 4638 0260 27       		.uleb128 0x27
 4639 0261 19       		.uleb128 0x19
 4640 0262 3C       		.uleb128 0x3c
 4641 0263 19       		.uleb128 0x19
 4642 0264 01       		.uleb128 0x1
 4643 0265 13       		.uleb128 0x13
 4644 0266 00       		.byte	0
 4645 0267 00       		.byte	0
 4646 0268 2A       		.uleb128 0x2a
 4647 0269 2E       		.uleb128 0x2e
 4648 026a 01       		.byte	0x1
 4649 026b 3F       		.uleb128 0x3f
 4650 026c 19       		.uleb128 0x19
 4651 026d 03       		.uleb128 0x3
 4652 026e 0E       		.uleb128 0xe
 4653 026f 3A       		.uleb128 0x3a
 4654 0270 0B       		.uleb128 0xb
 4655 0271 3B       		.uleb128 0x3b
 4656 0272 0B       		.uleb128 0xb
 4657 0273 27       		.uleb128 0x27
 4658 0274 19       		.uleb128 0x19
 4659 0275 3C       		.uleb128 0x3c
 4660 0276 19       		.uleb128 0x19
 4661 0277 00       		.byte	0
 4662 0278 00       		.byte	0
 4663 0279 00       		.byte	0
 4664              		.section	.debug_loc,"",%progbits
 4665              	.Ldebug_loc0:
 4666              	.LLST0:
 4667 0000 00000000 		.4byte	.LVL0
 4668 0004 07000000 		.4byte	.LVL1-1
 4669 0008 0100     		.2byte	0x1
 4670 000a 50       		.byte	0x50
 4671 000b 07000000 		.4byte	.LVL1-1
 4672 000f 12000000 		.4byte	.LVL2
 4673 0013 0100     		.2byte	0x1
 4674 0015 54       		.byte	0x54
 4675 0016 12000000 		.4byte	.LVL2
 4676 001a 14000000 		.4byte	.LVL3
 4677 001e 0400     		.2byte	0x4
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 130


 4678 0020 F3       		.byte	0xf3
 4679 0021 01       		.uleb128 0x1
 4680 0022 50       		.byte	0x50
 4681 0023 9F       		.byte	0x9f
 4682 0024 14000000 		.4byte	.LVL3
 4683 0028 16000000 		.4byte	.LVL4
 4684 002c 0100     		.2byte	0x1
 4685 002e 54       		.byte	0x54
 4686 002f 16000000 		.4byte	.LVL4
 4687 0033 1E000000 		.4byte	.LFE85
 4688 0037 0400     		.2byte	0x4
 4689 0039 F3       		.byte	0xf3
 4690 003a 01       		.uleb128 0x1
 4691 003b 50       		.byte	0x50
 4692 003c 9F       		.byte	0x9f
 4693 003d 00000000 		.4byte	0
 4694 0041 00000000 		.4byte	0
 4695              	.LLST1:
 4696 0045 00000000 		.4byte	.LVL6
 4697 0049 07000000 		.4byte	.LVL7-1
 4698 004d 0100     		.2byte	0x1
 4699 004f 50       		.byte	0x50
 4700 0050 07000000 		.4byte	.LVL7-1
 4701 0054 0E000000 		.4byte	.LVL8
 4702 0058 0100     		.2byte	0x1
 4703 005a 54       		.byte	0x54
 4704 005b 0E000000 		.4byte	.LVL8
 4705 005f 10000000 		.4byte	.LVL9
 4706 0063 0400     		.2byte	0x4
 4707 0065 F3       		.byte	0xf3
 4708 0066 01       		.uleb128 0x1
 4709 0067 50       		.byte	0x50
 4710 0068 9F       		.byte	0x9f
 4711 0069 10000000 		.4byte	.LVL9
 4712 006d 12000000 		.4byte	.LVL10
 4713 0071 0100     		.2byte	0x1
 4714 0073 54       		.byte	0x54
 4715 0074 12000000 		.4byte	.LVL10
 4716 0078 1A000000 		.4byte	.LFE83
 4717 007c 0400     		.2byte	0x4
 4718 007e F3       		.byte	0xf3
 4719 007f 01       		.uleb128 0x1
 4720 0080 50       		.byte	0x50
 4721 0081 9F       		.byte	0x9f
 4722 0082 00000000 		.4byte	0
 4723 0086 00000000 		.4byte	0
 4724              	.LLST2:
 4725 008a 00000000 		.4byte	.LVL12
 4726 008e 10000000 		.4byte	.LVL15
 4727 0092 0100     		.2byte	0x1
 4728 0094 50       		.byte	0x50
 4729 0095 10000000 		.4byte	.LVL15
 4730 0099 1A000000 		.4byte	.LVL17
 4731 009d 0100     		.2byte	0x1
 4732 009f 54       		.byte	0x54
 4733 00a0 1A000000 		.4byte	.LVL17
 4734 00a4 1E000000 		.4byte	.LVL18
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 131


 4735 00a8 0100     		.2byte	0x1
 4736 00aa 50       		.byte	0x50
 4737 00ab 1E000000 		.4byte	.LVL18
 4738 00af 38000000 		.4byte	.LVL20
 4739 00b3 0100     		.2byte	0x1
 4740 00b5 54       		.byte	0x54
 4741 00b6 38000000 		.4byte	.LVL20
 4742 00ba 3A000000 		.4byte	.LVL21
 4743 00be 0100     		.2byte	0x1
 4744 00c0 50       		.byte	0x50
 4745 00c1 3A000000 		.4byte	.LVL21
 4746 00c5 66000000 		.4byte	.LVL23
 4747 00c9 0100     		.2byte	0x1
 4748 00cb 54       		.byte	0x54
 4749 00cc 66000000 		.4byte	.LVL23
 4750 00d0 68000000 		.4byte	.LVL24
 4751 00d4 0100     		.2byte	0x1
 4752 00d6 50       		.byte	0x50
 4753 00d7 68000000 		.4byte	.LVL24
 4754 00db 7C000000 		.4byte	.LFE80
 4755 00df 0100     		.2byte	0x1
 4756 00e1 54       		.byte	0x54
 4757 00e2 00000000 		.4byte	0
 4758 00e6 00000000 		.4byte	0
 4759              	.LLST3:
 4760 00ea 00000000 		.4byte	.LVL12
 4761 00ee 13000000 		.4byte	.LVL16-1
 4762 00f2 0100     		.2byte	0x1
 4763 00f4 51       		.byte	0x51
 4764 00f5 13000000 		.4byte	.LVL16-1
 4765 00f9 1A000000 		.4byte	.LVL17
 4766 00fd 0400     		.2byte	0x4
 4767 00ff F3       		.byte	0xf3
 4768 0100 01       		.uleb128 0x1
 4769 0101 51       		.byte	0x51
 4770 0102 9F       		.byte	0x9f
 4771 0103 1A000000 		.4byte	.LVL17
 4772 0107 21000000 		.4byte	.LVL19-1
 4773 010b 0100     		.2byte	0x1
 4774 010d 51       		.byte	0x51
 4775 010e 21000000 		.4byte	.LVL19-1
 4776 0112 38000000 		.4byte	.LVL20
 4777 0116 0400     		.2byte	0x4
 4778 0118 F3       		.byte	0xf3
 4779 0119 01       		.uleb128 0x1
 4780 011a 51       		.byte	0x51
 4781 011b 9F       		.byte	0x9f
 4782 011c 38000000 		.4byte	.LVL20
 4783 0120 3D000000 		.4byte	.LVL22-1
 4784 0124 0100     		.2byte	0x1
 4785 0126 51       		.byte	0x51
 4786 0127 3D000000 		.4byte	.LVL22-1
 4787 012b 66000000 		.4byte	.LVL23
 4788 012f 0400     		.2byte	0x4
 4789 0131 F3       		.byte	0xf3
 4790 0132 01       		.uleb128 0x1
 4791 0133 51       		.byte	0x51
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 132


 4792 0134 9F       		.byte	0x9f
 4793 0135 66000000 		.4byte	.LVL23
 4794 0139 6A000000 		.4byte	.LVL25
 4795 013d 0100     		.2byte	0x1
 4796 013f 51       		.byte	0x51
 4797 0140 6A000000 		.4byte	.LVL25
 4798 0144 7C000000 		.4byte	.LFE80
 4799 0148 0400     		.2byte	0x4
 4800 014a F3       		.byte	0xf3
 4801 014b 01       		.uleb128 0x1
 4802 014c 51       		.byte	0x51
 4803 014d 9F       		.byte	0x9f
 4804 014e 00000000 		.4byte	0
 4805 0152 00000000 		.4byte	0
 4806              	.LLST4:
 4807 0156 00000000 		.4byte	.LVL12
 4808 015a 08000000 		.4byte	.LVL14
 4809 015e 0100     		.2byte	0x1
 4810 0160 52       		.byte	0x52
 4811 0161 08000000 		.4byte	.LVL14
 4812 0165 7C000000 		.4byte	.LFE80
 4813 0169 0100     		.2byte	0x1
 4814 016b 55       		.byte	0x55
 4815 016c 00000000 		.4byte	0
 4816 0170 00000000 		.4byte	0
 4817              	.LLST5:
 4818 0174 06000000 		.4byte	.LVL13
 4819 0178 14000000 		.4byte	.LVL16
 4820 017c 0200     		.2byte	0x2
 4821 017e 30       		.byte	0x30
 4822 017f 9F       		.byte	0x9f
 4823 0180 14000000 		.4byte	.LVL16
 4824 0184 1A000000 		.4byte	.LVL17
 4825 0188 0100     		.2byte	0x1
 4826 018a 50       		.byte	0x50
 4827 018b 1A000000 		.4byte	.LVL17
 4828 018f 74000000 		.4byte	.LVL26
 4829 0193 0200     		.2byte	0x2
 4830 0195 30       		.byte	0x30
 4831 0196 9F       		.byte	0x9f
 4832 0197 74000000 		.4byte	.LVL26
 4833 019b 7C000000 		.4byte	.LFE80
 4834 019f 0100     		.2byte	0x1
 4835 01a1 50       		.byte	0x50
 4836 01a2 00000000 		.4byte	0
 4837 01a6 00000000 		.4byte	0
 4838              	.LLST6:
 4839 01aa 00000000 		.4byte	.LVL27
 4840 01ae 1A000000 		.4byte	.LVL28
 4841 01b2 0100     		.2byte	0x1
 4842 01b4 50       		.byte	0x50
 4843 01b5 1A000000 		.4byte	.LVL28
 4844 01b9 1F000000 		.4byte	.LVL30-1
 4845 01bd 0100     		.2byte	0x1
 4846 01bf 53       		.byte	0x53
 4847 01c0 1F000000 		.4byte	.LVL30-1
 4848 01c4 22000000 		.4byte	.LVL31
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 133


 4849 01c8 0400     		.2byte	0x4
 4850 01ca F3       		.byte	0xf3
 4851 01cb 01       		.uleb128 0x1
 4852 01cc 50       		.byte	0x50
 4853 01cd 9F       		.byte	0x9f
 4854 01ce 22000000 		.4byte	.LVL31
 4855 01d2 24000000 		.4byte	.LFE81
 4856 01d6 0100     		.2byte	0x1
 4857 01d8 50       		.byte	0x50
 4858 01d9 00000000 		.4byte	0
 4859 01dd 00000000 		.4byte	0
 4860              	.LLST7:
 4861 01e1 00000000 		.4byte	.LVL27
 4862 01e5 1C000000 		.4byte	.LVL29
 4863 01e9 0100     		.2byte	0x1
 4864 01eb 51       		.byte	0x51
 4865 01ec 1C000000 		.4byte	.LVL29
 4866 01f0 1F000000 		.4byte	.LVL30-1
 4867 01f4 0100     		.2byte	0x1
 4868 01f6 50       		.byte	0x50
 4869 01f7 1F000000 		.4byte	.LVL30-1
 4870 01fb 22000000 		.4byte	.LVL31
 4871 01ff 0400     		.2byte	0x4
 4872 0201 F3       		.byte	0xf3
 4873 0202 01       		.uleb128 0x1
 4874 0203 51       		.byte	0x51
 4875 0204 9F       		.byte	0x9f
 4876 0205 22000000 		.4byte	.LVL31
 4877 0209 24000000 		.4byte	.LFE81
 4878 020d 0100     		.2byte	0x1
 4879 020f 51       		.byte	0x51
 4880 0210 00000000 		.4byte	0
 4881 0214 00000000 		.4byte	0
 4882              	.LLST8:
 4883 0218 00000000 		.4byte	.LVL32
 4884 021c 07000000 		.4byte	.LVL33-1
 4885 0220 0100     		.2byte	0x1
 4886 0222 50       		.byte	0x50
 4887 0223 07000000 		.4byte	.LVL33-1
 4888 0227 62000000 		.4byte	.LFE82
 4889 022b 0100     		.2byte	0x1
 4890 022d 54       		.byte	0x54
 4891 022e 00000000 		.4byte	0
 4892 0232 00000000 		.4byte	0
 4893              	.LLST9:
 4894 0236 00000000 		.4byte	.LVL41
 4895 023a 09000000 		.4byte	.LVL43-1
 4896 023e 0100     		.2byte	0x1
 4897 0240 50       		.byte	0x50
 4898 0241 09000000 		.4byte	.LVL43-1
 4899 0245 5C000000 		.4byte	.LFE64
 4900 0249 0100     		.2byte	0x1
 4901 024b 54       		.byte	0x54
 4902 024c 00000000 		.4byte	0
 4903 0250 00000000 		.4byte	0
 4904              	.LLST10:
 4905 0254 00000000 		.4byte	.LVL41
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 134


 4906 0258 09000000 		.4byte	.LVL43-1
 4907 025c 0100     		.2byte	0x1
 4908 025e 51       		.byte	0x51
 4909 025f 09000000 		.4byte	.LVL43-1
 4910 0263 5C000000 		.4byte	.LFE64
 4911 0267 0100     		.2byte	0x1
 4912 0269 55       		.byte	0x55
 4913 026a 00000000 		.4byte	0
 4914 026e 00000000 		.4byte	0
 4915              	.LLST11:
 4916 0272 06000000 		.4byte	.LVL42
 4917 0276 09000000 		.4byte	.LVL43-1
 4918 027a 0100     		.2byte	0x1
 4919 027c 50       		.byte	0x50
 4920 027d 09000000 		.4byte	.LVL43-1
 4921 0281 5C000000 		.4byte	.LFE64
 4922 0285 0100     		.2byte	0x1
 4923 0287 54       		.byte	0x54
 4924 0288 00000000 		.4byte	0
 4925 028c 00000000 		.4byte	0
 4926              	.LLST12:
 4927 0290 00000000 		.4byte	.LVL49
 4928 0294 0C000000 		.4byte	.LVL51
 4929 0298 0100     		.2byte	0x1
 4930 029a 50       		.byte	0x50
 4931 029b 0C000000 		.4byte	.LVL51
 4932 029f 10000000 		.4byte	.LVL53
 4933 02a3 0100     		.2byte	0x1
 4934 02a5 56       		.byte	0x56
 4935 02a6 10000000 		.4byte	.LVL53
 4936 02aa 12000000 		.4byte	.LVL54
 4937 02ae 0100     		.2byte	0x1
 4938 02b0 50       		.byte	0x50
 4939 02b1 12000000 		.4byte	.LVL54
 4940 02b5 38000000 		.4byte	.LFE65
 4941 02b9 0100     		.2byte	0x1
 4942 02bb 56       		.byte	0x56
 4943 02bc 00000000 		.4byte	0
 4944 02c0 00000000 		.4byte	0
 4945              	.LLST13:
 4946 02c4 00000000 		.4byte	.LVL49
 4947 02c8 17000000 		.4byte	.LVL56-1
 4948 02cc 0100     		.2byte	0x1
 4949 02ce 51       		.byte	0x51
 4950 02cf 17000000 		.4byte	.LVL56-1
 4951 02d3 38000000 		.4byte	.LFE65
 4952 02d7 0100     		.2byte	0x1
 4953 02d9 55       		.byte	0x55
 4954 02da 00000000 		.4byte	0
 4955 02de 00000000 		.4byte	0
 4956              	.LLST14:
 4957 02e2 00000000 		.4byte	.LVL49
 4958 02e6 17000000 		.4byte	.LVL56-1
 4959 02ea 0100     		.2byte	0x1
 4960 02ec 52       		.byte	0x52
 4961 02ed 17000000 		.4byte	.LVL56-1
 4962 02f1 38000000 		.4byte	.LFE65
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 135


 4963 02f5 0400     		.2byte	0x4
 4964 02f7 F3       		.byte	0xf3
 4965 02f8 01       		.uleb128 0x1
 4966 02f9 52       		.byte	0x52
 4967 02fa 9F       		.byte	0x9f
 4968 02fb 00000000 		.4byte	0
 4969 02ff 00000000 		.4byte	0
 4970              	.LLST15:
 4971 0303 18000000 		.4byte	.LVL56
 4972 0307 2E000000 		.4byte	.LVL57
 4973 030b 0100     		.2byte	0x1
 4974 030d 50       		.byte	0x50
 4975 030e 2E000000 		.4byte	.LVL57
 4976 0312 38000000 		.4byte	.LFE65
 4977 0316 0100     		.2byte	0x1
 4978 0318 54       		.byte	0x54
 4979 0319 00000000 		.4byte	0
 4980 031d 00000000 		.4byte	0
 4981              	.LLST16:
 4982 0321 0E000000 		.4byte	.LVL52
 4983 0325 10000000 		.4byte	.LVL53
 4984 0329 0100     		.2byte	0x1
 4985 032b 50       		.byte	0x50
 4986 032c 12000000 		.4byte	.LVL54
 4987 0330 14000000 		.4byte	.LVL55
 4988 0334 0100     		.2byte	0x1
 4989 0336 50       		.byte	0x50
 4990 0337 14000000 		.4byte	.LVL55
 4991 033b 17000000 		.4byte	.LVL56-1
 4992 033f 0400     		.2byte	0x4
 4993 0341 70       		.byte	0x70
 4994 0342 B47F     		.sleb128 -76
 4995 0344 9F       		.byte	0x9f
 4996 0345 00000000 		.4byte	0
 4997 0349 00000000 		.4byte	0
 4998              	.LLST17:
 4999 034d 04000000 		.4byte	.LVL50
 5000 0351 34000000 		.4byte	.LVL58
 5001 0355 0200     		.2byte	0x2
 5002 0357 30       		.byte	0x30
 5003 0358 9F       		.byte	0x9f
 5004 0359 34000000 		.4byte	.LVL58
 5005 035d 38000000 		.4byte	.LFE65
 5006 0361 0100     		.2byte	0x1
 5007 0363 54       		.byte	0x54
 5008 0364 00000000 		.4byte	0
 5009 0368 00000000 		.4byte	0
 5010              	.LLST18:
 5011 036c 00000000 		.4byte	.LVL59
 5012 0370 0B000000 		.4byte	.LVL61-1
 5013 0374 0100     		.2byte	0x1
 5014 0376 50       		.byte	0x50
 5015 0377 0B000000 		.4byte	.LVL61-1
 5016 037b 16000000 		.4byte	.LFE69
 5017 037f 0400     		.2byte	0x4
 5018 0381 F3       		.byte	0xf3
 5019 0382 01       		.uleb128 0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 136


 5020 0383 50       		.byte	0x50
 5021 0384 9F       		.byte	0x9f
 5022 0385 00000000 		.4byte	0
 5023 0389 00000000 		.4byte	0
 5024              	.LLST19:
 5025 038d 00000000 		.4byte	.LVL59
 5026 0391 06000000 		.4byte	.LVL60
 5027 0395 0100     		.2byte	0x1
 5028 0397 51       		.byte	0x51
 5029 0398 06000000 		.4byte	.LVL60
 5030 039c 16000000 		.4byte	.LFE69
 5031 03a0 0100     		.2byte	0x1
 5032 03a2 54       		.byte	0x54
 5033 03a3 00000000 		.4byte	0
 5034 03a7 00000000 		.4byte	0
 5035              	.LLST20:
 5036 03ab 0C000000 		.4byte	.LVL61
 5037 03af 14000000 		.4byte	.LVL62
 5038 03b3 0100     		.2byte	0x1
 5039 03b5 50       		.byte	0x50
 5040 03b6 14000000 		.4byte	.LVL62
 5041 03ba 16000000 		.4byte	.LFE69
 5042 03be 0100     		.2byte	0x1
 5043 03c0 53       		.byte	0x53
 5044 03c1 00000000 		.4byte	0
 5045 03c5 00000000 		.4byte	0
 5046              	.LLST21:
 5047 03c9 00000000 		.4byte	.LVL63
 5048 03cd 0E000000 		.4byte	.LVL65
 5049 03d1 0100     		.2byte	0x1
 5050 03d3 50       		.byte	0x50
 5051 03d4 0E000000 		.4byte	.LVL65
 5052 03d8 D6000000 		.4byte	.LFE70
 5053 03dc 0100     		.2byte	0x1
 5054 03de 54       		.byte	0x54
 5055 03df 00000000 		.4byte	0
 5056 03e3 00000000 		.4byte	0
 5057              	.LLST22:
 5058 03e7 00000000 		.4byte	.LVL63
 5059 03eb 0E000000 		.4byte	.LVL65
 5060 03ef 0100     		.2byte	0x1
 5061 03f1 51       		.byte	0x51
 5062 03f2 0E000000 		.4byte	.LVL65
 5063 03f6 D6000000 		.4byte	.LFE70
 5064 03fa 0100     		.2byte	0x1
 5065 03fc 57       		.byte	0x57
 5066 03fd 00000000 		.4byte	0
 5067 0401 00000000 		.4byte	0
 5068              	.LLST23:
 5069 0405 00000000 		.4byte	.LVL63
 5070 0409 0E000000 		.4byte	.LVL65
 5071 040d 0100     		.2byte	0x1
 5072 040f 52       		.byte	0x52
 5073 0410 0E000000 		.4byte	.LVL65
 5074 0414 8E000000 		.4byte	.LVL81
 5075 0418 0200     		.2byte	0x2
 5076 041a 91       		.byte	0x91
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 137


 5077 041b 5C       		.sleb128 -36
 5078 041c 8E000000 		.4byte	.LVL81
 5079 0420 91000000 		.4byte	.LVL82-1
 5080 0424 0200     		.2byte	0x2
 5081 0426 71       		.byte	0x71
 5082 0427 00       		.sleb128 0
 5083 0428 91000000 		.4byte	.LVL82-1
 5084 042c D6000000 		.4byte	.LFE70
 5085 0430 0200     		.2byte	0x2
 5086 0432 91       		.byte	0x91
 5087 0433 5C       		.sleb128 -36
 5088 0434 00000000 		.4byte	0
 5089 0438 00000000 		.4byte	0
 5090              	.LLST24:
 5091 043c 00000000 		.4byte	.LVL63
 5092 0440 0E000000 		.4byte	.LVL65
 5093 0444 0100     		.2byte	0x1
 5094 0446 53       		.byte	0x53
 5095 0447 0E000000 		.4byte	.LVL65
 5096 044b D6000000 		.4byte	.LFE70
 5097 044f 0100     		.2byte	0x1
 5098 0451 56       		.byte	0x56
 5099 0452 00000000 		.4byte	0
 5100 0456 00000000 		.4byte	0
 5101              	.LLST25:
 5102 045a 0C000000 		.4byte	.LVL64
 5103 045e 0E000000 		.4byte	.LVL65
 5104 0462 0200     		.2byte	0x2
 5105 0464 30       		.byte	0x30
 5106 0465 9F       		.byte	0x9f
 5107 0466 0E000000 		.4byte	.LVL65
 5108 046a 60000000 		.4byte	.LVL75
 5109 046e 0100     		.2byte	0x1
 5110 0470 55       		.byte	0x55
 5111 0471 60000000 		.4byte	.LVL75
 5112 0475 62000000 		.4byte	.LVL76
 5113 0479 0200     		.2byte	0x2
 5114 047b 31       		.byte	0x31
 5115 047c 9F       		.byte	0x9f
 5116 047d 62000000 		.4byte	.LVL76
 5117 0481 D6000000 		.4byte	.LFE70
 5118 0485 0100     		.2byte	0x1
 5119 0487 55       		.byte	0x55
 5120 0488 00000000 		.4byte	0
 5121 048c 00000000 		.4byte	0
 5122              	.LLST26:
 5123 0490 28000000 		.4byte	.LVL67
 5124 0494 30000000 		.4byte	.LVL68
 5125 0498 0100     		.2byte	0x1
 5126 049a 50       		.byte	0x50
 5127 049b 3E000000 		.4byte	.LVL71
 5128 049f 43000000 		.4byte	.LVL72-1
 5129 04a3 0100     		.2byte	0x1
 5130 04a5 50       		.byte	0x50
 5131 04a6 00000000 		.4byte	0
 5132 04aa 00000000 		.4byte	0
 5133              	.LLST27:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 138


 5134 04ae 0C000000 		.4byte	.LVL64
 5135 04b2 0E000000 		.4byte	.LVL65
 5136 04b6 0100     		.2byte	0x1
 5137 04b8 50       		.byte	0x50
 5138 04b9 0E000000 		.4byte	.LVL65
 5139 04bd D6000000 		.4byte	.LFE70
 5140 04c1 0100     		.2byte	0x1
 5141 04c3 54       		.byte	0x54
 5142 04c4 00000000 		.4byte	0
 5143 04c8 00000000 		.4byte	0
 5144              	.LLST28:
 5145 04cc 00000000 		.4byte	.LVL92
 5146 04d0 04000000 		.4byte	.LVL93
 5147 04d4 0100     		.2byte	0x1
 5148 04d6 50       		.byte	0x50
 5149 04d7 04000000 		.4byte	.LVL93
 5150 04db 44000000 		.4byte	.LFE66
 5151 04df 0400     		.2byte	0x4
 5152 04e1 F3       		.byte	0xf3
 5153 04e2 01       		.uleb128 0x1
 5154 04e3 50       		.byte	0x50
 5155 04e4 9F       		.byte	0x9f
 5156 04e5 00000000 		.4byte	0
 5157 04e9 00000000 		.4byte	0
 5158              	.LLST29:
 5159 04ed 08000000 		.4byte	.LVL94
 5160 04f1 28000000 		.4byte	.LVL95
 5161 04f5 0100     		.2byte	0x1
 5162 04f7 50       		.byte	0x50
 5163 04f8 28000000 		.4byte	.LVL95
 5164 04fc 44000000 		.4byte	.LFE66
 5165 0500 0100     		.2byte	0x1
 5166 0502 54       		.byte	0x54
 5167 0503 00000000 		.4byte	0
 5168 0507 00000000 		.4byte	0
 5169              	.LLST30:
 5170 050b 00000000 		.4byte	.LVL99
 5171 050f 09000000 		.4byte	.LVL101-1
 5172 0513 0100     		.2byte	0x1
 5173 0515 50       		.byte	0x50
 5174 0516 09000000 		.4byte	.LVL101-1
 5175 051a 2E000000 		.4byte	.LFE67
 5176 051e 0100     		.2byte	0x1
 5177 0520 54       		.byte	0x54
 5178 0521 00000000 		.4byte	0
 5179 0525 00000000 		.4byte	0
 5180              	.LLST31:
 5181 0529 04000000 		.4byte	.LVL100
 5182 052d 09000000 		.4byte	.LVL101-1
 5183 0531 0100     		.2byte	0x1
 5184 0533 50       		.byte	0x50
 5185 0534 09000000 		.4byte	.LVL101-1
 5186 0538 2E000000 		.4byte	.LFE67
 5187 053c 0100     		.2byte	0x1
 5188 053e 54       		.byte	0x54
 5189 053f 00000000 		.4byte	0
 5190 0543 00000000 		.4byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 139


 5191              	.LLST32:
 5192 0547 00000000 		.4byte	.LVL106
 5193 054b 0F000000 		.4byte	.LVL108-1
 5194 054f 0100     		.2byte	0x1
 5195 0551 50       		.byte	0x50
 5196 0552 0F000000 		.4byte	.LVL108-1
 5197 0556 46000000 		.4byte	.LVL113
 5198 055a 0100     		.2byte	0x1
 5199 055c 54       		.byte	0x54
 5200 055d 46000000 		.4byte	.LVL113
 5201 0561 4C000000 		.4byte	.LVL114
 5202 0565 0400     		.2byte	0x4
 5203 0567 F3       		.byte	0xf3
 5204 0568 01       		.uleb128 0x1
 5205 0569 50       		.byte	0x50
 5206 056a 9F       		.byte	0x9f
 5207 056b 4C000000 		.4byte	.LVL114
 5208 056f 54000000 		.4byte	.LVL115
 5209 0573 0100     		.2byte	0x1
 5210 0575 54       		.byte	0x54
 5211 0576 54000000 		.4byte	.LVL115
 5212 057a 56000000 		.4byte	.LVL116
 5213 057e 0400     		.2byte	0x4
 5214 0580 F3       		.byte	0xf3
 5215 0581 01       		.uleb128 0x1
 5216 0582 50       		.byte	0x50
 5217 0583 9F       		.byte	0x9f
 5218 0584 56000000 		.4byte	.LVL116
 5219 0588 58000000 		.4byte	.LVL117
 5220 058c 0100     		.2byte	0x1
 5221 058e 54       		.byte	0x54
 5222 058f 58000000 		.4byte	.LVL117
 5223 0593 5A000000 		.4byte	.LVL118
 5224 0597 0400     		.2byte	0x4
 5225 0599 F3       		.byte	0xf3
 5226 059a 01       		.uleb128 0x1
 5227 059b 50       		.byte	0x50
 5228 059c 9F       		.byte	0x9f
 5229 059d 5A000000 		.4byte	.LVL118
 5230 05a1 5C000000 		.4byte	.LVL119
 5231 05a5 0100     		.2byte	0x1
 5232 05a7 54       		.byte	0x54
 5233 05a8 5C000000 		.4byte	.LVL119
 5234 05ac 5E000000 		.4byte	.LVL120
 5235 05b0 0400     		.2byte	0x4
 5236 05b2 F3       		.byte	0xf3
 5237 05b3 01       		.uleb128 0x1
 5238 05b4 50       		.byte	0x50
 5239 05b5 9F       		.byte	0x9f
 5240 05b6 5E000000 		.4byte	.LVL120
 5241 05ba 60000000 		.4byte	.LVL121
 5242 05be 0100     		.2byte	0x1
 5243 05c0 54       		.byte	0x54
 5244 05c1 60000000 		.4byte	.LVL121
 5245 05c5 62000000 		.4byte	.LVL122
 5246 05c9 0400     		.2byte	0x4
 5247 05cb F3       		.byte	0xf3
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 140


 5248 05cc 01       		.uleb128 0x1
 5249 05cd 50       		.byte	0x50
 5250 05ce 9F       		.byte	0x9f
 5251 05cf 62000000 		.4byte	.LVL122
 5252 05d3 64000000 		.4byte	.LVL123
 5253 05d7 0100     		.2byte	0x1
 5254 05d9 54       		.byte	0x54
 5255 05da 64000000 		.4byte	.LVL123
 5256 05de 70000000 		.4byte	.LFE71
 5257 05e2 0400     		.2byte	0x4
 5258 05e4 F3       		.byte	0xf3
 5259 05e5 01       		.uleb128 0x1
 5260 05e6 50       		.byte	0x50
 5261 05e7 9F       		.byte	0x9f
 5262 05e8 00000000 		.4byte	0
 5263 05ec 00000000 		.4byte	0
 5264              	.LLST33:
 5265 05f0 00000000 		.4byte	.LVL106
 5266 05f4 0F000000 		.4byte	.LVL108-1
 5267 05f8 0100     		.2byte	0x1
 5268 05fa 51       		.byte	0x51
 5269 05fb 0F000000 		.4byte	.LVL108-1
 5270 05ff 70000000 		.4byte	.LFE71
 5271 0603 0100     		.2byte	0x1
 5272 0605 57       		.byte	0x57
 5273 0606 00000000 		.4byte	0
 5274 060a 00000000 		.4byte	0
 5275              	.LLST34:
 5276 060e 00000000 		.4byte	.LVL106
 5277 0612 0F000000 		.4byte	.LVL108-1
 5278 0616 0100     		.2byte	0x1
 5279 0618 52       		.byte	0x52
 5280 0619 0F000000 		.4byte	.LVL108-1
 5281 061d 70000000 		.4byte	.LFE71
 5282 0621 0100     		.2byte	0x1
 5283 0623 58       		.byte	0x58
 5284 0624 00000000 		.4byte	0
 5285 0628 00000000 		.4byte	0
 5286              	.LLST35:
 5287 062c 00000000 		.4byte	.LVL106
 5288 0630 0F000000 		.4byte	.LVL108-1
 5289 0634 0100     		.2byte	0x1
 5290 0636 53       		.byte	0x53
 5291 0637 0F000000 		.4byte	.LVL108-1
 5292 063b 70000000 		.4byte	.LFE71
 5293 063f 0100     		.2byte	0x1
 5294 0641 55       		.byte	0x55
 5295 0642 00000000 		.4byte	0
 5296 0646 00000000 		.4byte	0
 5297              	.LLST36:
 5298 064a 12000000 		.4byte	.LVL109
 5299 064e 20000000 		.4byte	.LVL110
 5300 0652 0100     		.2byte	0x1
 5301 0654 50       		.byte	0x50
 5302 0655 20000000 		.4byte	.LVL110
 5303 0659 56000000 		.4byte	.LVL116
 5304 065d 0100     		.2byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 141


 5305 065f 56       		.byte	0x56
 5306 0660 56000000 		.4byte	.LVL116
 5307 0664 5A000000 		.4byte	.LVL118
 5308 0668 0100     		.2byte	0x1
 5309 066a 50       		.byte	0x50
 5310 066b 5A000000 		.4byte	.LVL118
 5311 066f 70000000 		.4byte	.LFE71
 5312 0673 0100     		.2byte	0x1
 5313 0675 56       		.byte	0x56
 5314 0676 00000000 		.4byte	0
 5315 067a 00000000 		.4byte	0
 5316              	.LLST37:
 5317 067e 0C000000 		.4byte	.LVL107
 5318 0682 0F000000 		.4byte	.LVL108-1
 5319 0686 0100     		.2byte	0x1
 5320 0688 50       		.byte	0x50
 5321 0689 0F000000 		.4byte	.LVL108-1
 5322 068d 46000000 		.4byte	.LVL113
 5323 0691 0100     		.2byte	0x1
 5324 0693 54       		.byte	0x54
 5325 0694 46000000 		.4byte	.LVL113
 5326 0698 4C000000 		.4byte	.LVL114
 5327 069c 0400     		.2byte	0x4
 5328 069e F3       		.byte	0xf3
 5329 069f 01       		.uleb128 0x1
 5330 06a0 50       		.byte	0x50
 5331 06a1 9F       		.byte	0x9f
 5332 06a2 4C000000 		.4byte	.LVL114
 5333 06a6 54000000 		.4byte	.LVL115
 5334 06aa 0100     		.2byte	0x1
 5335 06ac 54       		.byte	0x54
 5336 06ad 54000000 		.4byte	.LVL115
 5337 06b1 56000000 		.4byte	.LVL116
 5338 06b5 0400     		.2byte	0x4
 5339 06b7 F3       		.byte	0xf3
 5340 06b8 01       		.uleb128 0x1
 5341 06b9 50       		.byte	0x50
 5342 06ba 9F       		.byte	0x9f
 5343 06bb 56000000 		.4byte	.LVL116
 5344 06bf 58000000 		.4byte	.LVL117
 5345 06c3 0100     		.2byte	0x1
 5346 06c5 54       		.byte	0x54
 5347 06c6 58000000 		.4byte	.LVL117
 5348 06ca 5A000000 		.4byte	.LVL118
 5349 06ce 0400     		.2byte	0x4
 5350 06d0 F3       		.byte	0xf3
 5351 06d1 01       		.uleb128 0x1
 5352 06d2 50       		.byte	0x50
 5353 06d3 9F       		.byte	0x9f
 5354 06d4 5A000000 		.4byte	.LVL118
 5355 06d8 5C000000 		.4byte	.LVL119
 5356 06dc 0100     		.2byte	0x1
 5357 06de 54       		.byte	0x54
 5358 06df 5C000000 		.4byte	.LVL119
 5359 06e3 5E000000 		.4byte	.LVL120
 5360 06e7 0400     		.2byte	0x4
 5361 06e9 F3       		.byte	0xf3
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 142


 5362 06ea 01       		.uleb128 0x1
 5363 06eb 50       		.byte	0x50
 5364 06ec 9F       		.byte	0x9f
 5365 06ed 5E000000 		.4byte	.LVL120
 5366 06f1 60000000 		.4byte	.LVL121
 5367 06f5 0100     		.2byte	0x1
 5368 06f7 54       		.byte	0x54
 5369 06f8 60000000 		.4byte	.LVL121
 5370 06fc 62000000 		.4byte	.LVL122
 5371 0700 0400     		.2byte	0x4
 5372 0702 F3       		.byte	0xf3
 5373 0703 01       		.uleb128 0x1
 5374 0704 50       		.byte	0x50
 5375 0705 9F       		.byte	0x9f
 5376 0706 62000000 		.4byte	.LVL122
 5377 070a 64000000 		.4byte	.LVL123
 5378 070e 0100     		.2byte	0x1
 5379 0710 54       		.byte	0x54
 5380 0711 64000000 		.4byte	.LVL123
 5381 0715 70000000 		.4byte	.LFE71
 5382 0719 0400     		.2byte	0x4
 5383 071b F3       		.byte	0xf3
 5384 071c 01       		.uleb128 0x1
 5385 071d 50       		.byte	0x50
 5386 071e 9F       		.byte	0x9f
 5387 071f 00000000 		.4byte	0
 5388 0723 00000000 		.4byte	0
 5389              	.LLST38:
 5390 0727 00000000 		.4byte	.LVL125
 5391 072b 09000000 		.4byte	.LVL127-1
 5392 072f 0100     		.2byte	0x1
 5393 0731 50       		.byte	0x50
 5394 0732 09000000 		.4byte	.LVL127-1
 5395 0736 34000000 		.4byte	.LVL131
 5396 073a 0100     		.2byte	0x1
 5397 073c 54       		.byte	0x54
 5398 073d 34000000 		.4byte	.LVL131
 5399 0741 38000000 		.4byte	.LVL132
 5400 0745 0400     		.2byte	0x4
 5401 0747 F3       		.byte	0xf3
 5402 0748 01       		.uleb128 0x1
 5403 0749 50       		.byte	0x50
 5404 074a 9F       		.byte	0x9f
 5405 074b 38000000 		.4byte	.LVL132
 5406 074f 40000000 		.4byte	.LVL133
 5407 0753 0100     		.2byte	0x1
 5408 0755 54       		.byte	0x54
 5409 0756 40000000 		.4byte	.LVL133
 5410 075a 42000000 		.4byte	.LVL134
 5411 075e 0400     		.2byte	0x4
 5412 0760 F3       		.byte	0xf3
 5413 0761 01       		.uleb128 0x1
 5414 0762 50       		.byte	0x50
 5415 0763 9F       		.byte	0x9f
 5416 0764 42000000 		.4byte	.LVL134
 5417 0768 44000000 		.4byte	.LVL135
 5418 076c 0100     		.2byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 143


 5419 076e 54       		.byte	0x54
 5420 076f 44000000 		.4byte	.LVL135
 5421 0773 46000000 		.4byte	.LVL136
 5422 0777 0400     		.2byte	0x4
 5423 0779 F3       		.byte	0xf3
 5424 077a 01       		.uleb128 0x1
 5425 077b 50       		.byte	0x50
 5426 077c 9F       		.byte	0x9f
 5427 077d 46000000 		.4byte	.LVL136
 5428 0781 48000000 		.4byte	.LVL137
 5429 0785 0100     		.2byte	0x1
 5430 0787 54       		.byte	0x54
 5431 0788 48000000 		.4byte	.LVL137
 5432 078c 4A000000 		.4byte	.LVL138
 5433 0790 0400     		.2byte	0x4
 5434 0792 F3       		.byte	0xf3
 5435 0793 01       		.uleb128 0x1
 5436 0794 50       		.byte	0x50
 5437 0795 9F       		.byte	0x9f
 5438 0796 4A000000 		.4byte	.LVL138
 5439 079a 4C000000 		.4byte	.LVL139
 5440 079e 0100     		.2byte	0x1
 5441 07a0 54       		.byte	0x54
 5442 07a1 4C000000 		.4byte	.LVL139
 5443 07a5 4E000000 		.4byte	.LVL140
 5444 07a9 0400     		.2byte	0x4
 5445 07ab F3       		.byte	0xf3
 5446 07ac 01       		.uleb128 0x1
 5447 07ad 50       		.byte	0x50
 5448 07ae 9F       		.byte	0x9f
 5449 07af 4E000000 		.4byte	.LVL140
 5450 07b3 50000000 		.4byte	.LVL141
 5451 07b7 0100     		.2byte	0x1
 5452 07b9 54       		.byte	0x54
 5453 07ba 50000000 		.4byte	.LVL141
 5454 07be 5A000000 		.4byte	.LFE72
 5455 07c2 0400     		.2byte	0x4
 5456 07c4 F3       		.byte	0xf3
 5457 07c5 01       		.uleb128 0x1
 5458 07c6 50       		.byte	0x50
 5459 07c7 9F       		.byte	0x9f
 5460 07c8 00000000 		.4byte	0
 5461 07cc 00000000 		.4byte	0
 5462              	.LLST39:
 5463 07d0 00000000 		.4byte	.LVL125
 5464 07d4 09000000 		.4byte	.LVL127-1
 5465 07d8 0100     		.2byte	0x1
 5466 07da 51       		.byte	0x51
 5467 07db 09000000 		.4byte	.LVL127-1
 5468 07df 5A000000 		.4byte	.LFE72
 5469 07e3 0100     		.2byte	0x1
 5470 07e5 56       		.byte	0x56
 5471 07e6 00000000 		.4byte	0
 5472 07ea 00000000 		.4byte	0
 5473              	.LLST40:
 5474 07ee 0C000000 		.4byte	.LVL128
 5475 07f2 2A000000 		.4byte	.LVL129
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 144


 5476 07f6 0100     		.2byte	0x1
 5477 07f8 50       		.byte	0x50
 5478 07f9 2A000000 		.4byte	.LVL129
 5479 07fd 38000000 		.4byte	.LVL132
 5480 0801 0100     		.2byte	0x1
 5481 0803 55       		.byte	0x55
 5482 0804 38000000 		.4byte	.LVL132
 5483 0808 4A000000 		.4byte	.LVL138
 5484 080c 0100     		.2byte	0x1
 5485 080e 50       		.byte	0x50
 5486 080f 4A000000 		.4byte	.LVL138
 5487 0813 5A000000 		.4byte	.LFE72
 5488 0817 0100     		.2byte	0x1
 5489 0819 55       		.byte	0x55
 5490 081a 00000000 		.4byte	0
 5491 081e 00000000 		.4byte	0
 5492              	.LLST41:
 5493 0822 06000000 		.4byte	.LVL126
 5494 0826 09000000 		.4byte	.LVL127-1
 5495 082a 0100     		.2byte	0x1
 5496 082c 50       		.byte	0x50
 5497 082d 09000000 		.4byte	.LVL127-1
 5498 0831 34000000 		.4byte	.LVL131
 5499 0835 0100     		.2byte	0x1
 5500 0837 54       		.byte	0x54
 5501 0838 34000000 		.4byte	.LVL131
 5502 083c 38000000 		.4byte	.LVL132
 5503 0840 0400     		.2byte	0x4
 5504 0842 F3       		.byte	0xf3
 5505 0843 01       		.uleb128 0x1
 5506 0844 50       		.byte	0x50
 5507 0845 9F       		.byte	0x9f
 5508 0846 38000000 		.4byte	.LVL132
 5509 084a 40000000 		.4byte	.LVL133
 5510 084e 0100     		.2byte	0x1
 5511 0850 54       		.byte	0x54
 5512 0851 40000000 		.4byte	.LVL133
 5513 0855 42000000 		.4byte	.LVL134
 5514 0859 0400     		.2byte	0x4
 5515 085b F3       		.byte	0xf3
 5516 085c 01       		.uleb128 0x1
 5517 085d 50       		.byte	0x50
 5518 085e 9F       		.byte	0x9f
 5519 085f 42000000 		.4byte	.LVL134
 5520 0863 44000000 		.4byte	.LVL135
 5521 0867 0100     		.2byte	0x1
 5522 0869 54       		.byte	0x54
 5523 086a 44000000 		.4byte	.LVL135
 5524 086e 46000000 		.4byte	.LVL136
 5525 0872 0400     		.2byte	0x4
 5526 0874 F3       		.byte	0xf3
 5527 0875 01       		.uleb128 0x1
 5528 0876 50       		.byte	0x50
 5529 0877 9F       		.byte	0x9f
 5530 0878 46000000 		.4byte	.LVL136
 5531 087c 48000000 		.4byte	.LVL137
 5532 0880 0100     		.2byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 145


 5533 0882 54       		.byte	0x54
 5534 0883 48000000 		.4byte	.LVL137
 5535 0887 4A000000 		.4byte	.LVL138
 5536 088b 0400     		.2byte	0x4
 5537 088d F3       		.byte	0xf3
 5538 088e 01       		.uleb128 0x1
 5539 088f 50       		.byte	0x50
 5540 0890 9F       		.byte	0x9f
 5541 0891 4A000000 		.4byte	.LVL138
 5542 0895 4C000000 		.4byte	.LVL139
 5543 0899 0100     		.2byte	0x1
 5544 089b 54       		.byte	0x54
 5545 089c 4C000000 		.4byte	.LVL139
 5546 08a0 4E000000 		.4byte	.LVL140
 5547 08a4 0400     		.2byte	0x4
 5548 08a6 F3       		.byte	0xf3
 5549 08a7 01       		.uleb128 0x1
 5550 08a8 50       		.byte	0x50
 5551 08a9 9F       		.byte	0x9f
 5552 08aa 4E000000 		.4byte	.LVL140
 5553 08ae 50000000 		.4byte	.LVL141
 5554 08b2 0100     		.2byte	0x1
 5555 08b4 54       		.byte	0x54
 5556 08b5 50000000 		.4byte	.LVL141
 5557 08b9 5A000000 		.4byte	.LFE72
 5558 08bd 0400     		.2byte	0x4
 5559 08bf F3       		.byte	0xf3
 5560 08c0 01       		.uleb128 0x1
 5561 08c1 50       		.byte	0x50
 5562 08c2 9F       		.byte	0x9f
 5563 08c3 00000000 		.4byte	0
 5564 08c7 00000000 		.4byte	0
 5565              	.LLST42:
 5566 08cb 00000000 		.4byte	.LVL143
 5567 08cf 0E000000 		.4byte	.LVL145
 5568 08d3 0100     		.2byte	0x1
 5569 08d5 50       		.byte	0x50
 5570 08d6 0E000000 		.4byte	.LVL145
 5571 08da 00010000 		.4byte	.LFE73
 5572 08de 0100     		.2byte	0x1
 5573 08e0 54       		.byte	0x54
 5574 08e1 00000000 		.4byte	0
 5575 08e5 00000000 		.4byte	0
 5576              	.LLST43:
 5577 08e9 00000000 		.4byte	.LVL143
 5578 08ed 0E000000 		.4byte	.LVL145
 5579 08f1 0100     		.2byte	0x1
 5580 08f3 51       		.byte	0x51
 5581 08f4 0E000000 		.4byte	.LVL145
 5582 08f8 00010000 		.4byte	.LFE73
 5583 08fc 0100     		.2byte	0x1
 5584 08fe 57       		.byte	0x57
 5585 08ff 00000000 		.4byte	0
 5586 0903 00000000 		.4byte	0
 5587              	.LLST44:
 5588 0907 00000000 		.4byte	.LVL143
 5589 090b 0E000000 		.4byte	.LVL145
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 146


 5590 090f 0100     		.2byte	0x1
 5591 0911 52       		.byte	0x52
 5592 0912 0E000000 		.4byte	.LVL145
 5593 0916 A6000000 		.4byte	.LVL163
 5594 091a 0200     		.2byte	0x2
 5595 091c 91       		.byte	0x91
 5596 091d 5C       		.sleb128 -36
 5597 091e A6000000 		.4byte	.LVL163
 5598 0922 A9000000 		.4byte	.LVL164-1
 5599 0926 0200     		.2byte	0x2
 5600 0928 71       		.byte	0x71
 5601 0929 00       		.sleb128 0
 5602 092a A9000000 		.4byte	.LVL164-1
 5603 092e 00010000 		.4byte	.LFE73
 5604 0932 0200     		.2byte	0x2
 5605 0934 91       		.byte	0x91
 5606 0935 5C       		.sleb128 -36
 5607 0936 00000000 		.4byte	0
 5608 093a 00000000 		.4byte	0
 5609              	.LLST45:
 5610 093e 00000000 		.4byte	.LVL143
 5611 0942 0E000000 		.4byte	.LVL145
 5612 0946 0100     		.2byte	0x1
 5613 0948 53       		.byte	0x53
 5614 0949 0E000000 		.4byte	.LVL145
 5615 094d 00010000 		.4byte	.LFE73
 5616 0951 0100     		.2byte	0x1
 5617 0953 56       		.byte	0x56
 5618 0954 00000000 		.4byte	0
 5619 0958 00000000 		.4byte	0
 5620              	.LLST46:
 5621 095c 0C000000 		.4byte	.LVL144
 5622 0960 0E000000 		.4byte	.LVL145
 5623 0964 0200     		.2byte	0x2
 5624 0966 30       		.byte	0x30
 5625 0967 9F       		.byte	0x9f
 5626 0968 0E000000 		.4byte	.LVL145
 5627 096c 18000000 		.4byte	.LVL147
 5628 0970 0100     		.2byte	0x1
 5629 0972 55       		.byte	0x55
 5630 0973 64000000 		.4byte	.LVL155
 5631 0977 78000000 		.4byte	.LVL157
 5632 097b 0100     		.2byte	0x1
 5633 097d 55       		.byte	0x55
 5634 097e 78000000 		.4byte	.LVL157
 5635 0982 7A000000 		.4byte	.LVL158
 5636 0986 0200     		.2byte	0x2
 5637 0988 31       		.byte	0x31
 5638 0989 9F       		.byte	0x9f
 5639 098a 7A000000 		.4byte	.LVL158
 5640 098e FC000000 		.4byte	.LVL177
 5641 0992 0100     		.2byte	0x1
 5642 0994 55       		.byte	0x55
 5643 0995 00000000 		.4byte	0
 5644 0999 00000000 		.4byte	0
 5645              	.LLST47:
 5646 099d 18000000 		.4byte	.LVL147
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 147


 5647 09a1 64000000 		.4byte	.LVL155
 5648 09a5 0100     		.2byte	0x1
 5649 09a7 55       		.byte	0x55
 5650 09a8 00000000 		.4byte	0
 5651 09ac 00000000 		.4byte	0
 5652              	.LLST48:
 5653 09b0 0C000000 		.4byte	.LVL144
 5654 09b4 0E000000 		.4byte	.LVL145
 5655 09b8 0100     		.2byte	0x1
 5656 09ba 50       		.byte	0x50
 5657 09bb 0E000000 		.4byte	.LVL145
 5658 09bf 00010000 		.4byte	.LFE73
 5659 09c3 0100     		.2byte	0x1
 5660 09c5 54       		.byte	0x54
 5661 09c6 00000000 		.4byte	0
 5662 09ca 00000000 		.4byte	0
 5663              	.LLST49:
 5664 09ce 00000000 		.4byte	.LVL178
 5665 09d2 0B000000 		.4byte	.LVL180-1
 5666 09d6 0100     		.2byte	0x1
 5667 09d8 50       		.byte	0x50
 5668 09d9 0B000000 		.4byte	.LVL180-1
 5669 09dd 32000000 		.4byte	.LFE68
 5670 09e1 0100     		.2byte	0x1
 5671 09e3 54       		.byte	0x54
 5672 09e4 00000000 		.4byte	0
 5673 09e8 00000000 		.4byte	0
 5674              	.LLST50:
 5675 09ec 00000000 		.4byte	.LVL178
 5676 09f0 0B000000 		.4byte	.LVL180-1
 5677 09f4 0100     		.2byte	0x1
 5678 09f6 51       		.byte	0x51
 5679 09f7 0B000000 		.4byte	.LVL180-1
 5680 09fb 32000000 		.4byte	.LFE68
 5681 09ff 0100     		.2byte	0x1
 5682 0a01 56       		.byte	0x56
 5683 0a02 00000000 		.4byte	0
 5684 0a06 00000000 		.4byte	0
 5685              	.LLST51:
 5686 0a0a 16000000 		.4byte	.LVL181
 5687 0a0e 1A000000 		.4byte	.LVL182
 5688 0a12 0200     		.2byte	0x2
 5689 0a14 31       		.byte	0x31
 5690 0a15 9F       		.byte	0x9f
 5691 0a16 26000000 		.4byte	.LVL183
 5692 0a1a 32000000 		.4byte	.LFE68
 5693 0a1e 0100     		.2byte	0x1
 5694 0a20 50       		.byte	0x50
 5695 0a21 00000000 		.4byte	0
 5696 0a25 00000000 		.4byte	0
 5697              	.LLST52:
 5698 0a29 06000000 		.4byte	.LVL179
 5699 0a2d 0B000000 		.4byte	.LVL180-1
 5700 0a31 0100     		.2byte	0x1
 5701 0a33 50       		.byte	0x50
 5702 0a34 0B000000 		.4byte	.LVL180-1
 5703 0a38 32000000 		.4byte	.LFE68
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 148


 5704 0a3c 0100     		.2byte	0x1
 5705 0a3e 54       		.byte	0x54
 5706 0a3f 00000000 		.4byte	0
 5707 0a43 00000000 		.4byte	0
 5708              	.LLST53:
 5709 0a47 00000000 		.4byte	.LVL184
 5710 0a4b 0B000000 		.4byte	.LVL186-1
 5711 0a4f 0100     		.2byte	0x1
 5712 0a51 50       		.byte	0x50
 5713 0a52 0B000000 		.4byte	.LVL186-1
 5714 0a56 3A000000 		.4byte	.LVL191
 5715 0a5a 0100     		.2byte	0x1
 5716 0a5c 54       		.byte	0x54
 5717 0a5d 3A000000 		.4byte	.LVL191
 5718 0a61 3E000000 		.4byte	.LVL192
 5719 0a65 0400     		.2byte	0x4
 5720 0a67 F3       		.byte	0xf3
 5721 0a68 01       		.uleb128 0x1
 5722 0a69 50       		.byte	0x50
 5723 0a6a 9F       		.byte	0x9f
 5724 0a6b 3E000000 		.4byte	.LVL192
 5725 0a6f 46000000 		.4byte	.LVL193
 5726 0a73 0100     		.2byte	0x1
 5727 0a75 54       		.byte	0x54
 5728 0a76 46000000 		.4byte	.LVL193
 5729 0a7a 48000000 		.4byte	.LVL194
 5730 0a7e 0400     		.2byte	0x4
 5731 0a80 F3       		.byte	0xf3
 5732 0a81 01       		.uleb128 0x1
 5733 0a82 50       		.byte	0x50
 5734 0a83 9F       		.byte	0x9f
 5735 0a84 48000000 		.4byte	.LVL194
 5736 0a88 4A000000 		.4byte	.LVL195
 5737 0a8c 0100     		.2byte	0x1
 5738 0a8e 54       		.byte	0x54
 5739 0a8f 4A000000 		.4byte	.LVL195
 5740 0a93 4C000000 		.4byte	.LVL196
 5741 0a97 0400     		.2byte	0x4
 5742 0a99 F3       		.byte	0xf3
 5743 0a9a 01       		.uleb128 0x1
 5744 0a9b 50       		.byte	0x50
 5745 0a9c 9F       		.byte	0x9f
 5746 0a9d 4C000000 		.4byte	.LVL196
 5747 0aa1 4E000000 		.4byte	.LVL197
 5748 0aa5 0100     		.2byte	0x1
 5749 0aa7 54       		.byte	0x54
 5750 0aa8 4E000000 		.4byte	.LVL197
 5751 0aac 50000000 		.4byte	.LVL198
 5752 0ab0 0400     		.2byte	0x4
 5753 0ab2 F3       		.byte	0xf3
 5754 0ab3 01       		.uleb128 0x1
 5755 0ab4 50       		.byte	0x50
 5756 0ab5 9F       		.byte	0x9f
 5757 0ab6 50000000 		.4byte	.LVL198
 5758 0aba 52000000 		.4byte	.LVL199
 5759 0abe 0100     		.2byte	0x1
 5760 0ac0 54       		.byte	0x54
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 149


 5761 0ac1 52000000 		.4byte	.LVL199
 5762 0ac5 54000000 		.4byte	.LVL200
 5763 0ac9 0400     		.2byte	0x4
 5764 0acb F3       		.byte	0xf3
 5765 0acc 01       		.uleb128 0x1
 5766 0acd 50       		.byte	0x50
 5767 0ace 9F       		.byte	0x9f
 5768 0acf 54000000 		.4byte	.LVL200
 5769 0ad3 56000000 		.4byte	.LVL201
 5770 0ad7 0100     		.2byte	0x1
 5771 0ad9 54       		.byte	0x54
 5772 0ada 56000000 		.4byte	.LVL201
 5773 0ade 60000000 		.4byte	.LFE74
 5774 0ae2 0400     		.2byte	0x4
 5775 0ae4 F3       		.byte	0xf3
 5776 0ae5 01       		.uleb128 0x1
 5777 0ae6 50       		.byte	0x50
 5778 0ae7 9F       		.byte	0x9f
 5779 0ae8 00000000 		.4byte	0
 5780 0aec 00000000 		.4byte	0
 5781              	.LLST54:
 5782 0af0 00000000 		.4byte	.LVL184
 5783 0af4 0B000000 		.4byte	.LVL186-1
 5784 0af8 0100     		.2byte	0x1
 5785 0afa 51       		.byte	0x51
 5786 0afb 0B000000 		.4byte	.LVL186-1
 5787 0aff 60000000 		.4byte	.LFE74
 5788 0b03 0100     		.2byte	0x1
 5789 0b05 56       		.byte	0x56
 5790 0b06 00000000 		.4byte	0
 5791 0b0a 00000000 		.4byte	0
 5792              	.LLST55:
 5793 0b0e 00000000 		.4byte	.LVL184
 5794 0b12 0B000000 		.4byte	.LVL186-1
 5795 0b16 0100     		.2byte	0x1
 5796 0b18 52       		.byte	0x52
 5797 0b19 0B000000 		.4byte	.LVL186-1
 5798 0b1d 60000000 		.4byte	.LFE74
 5799 0b21 0100     		.2byte	0x1
 5800 0b23 57       		.byte	0x57
 5801 0b24 00000000 		.4byte	0
 5802 0b28 00000000 		.4byte	0
 5803              	.LLST56:
 5804 0b2c 0E000000 		.4byte	.LVL187
 5805 0b30 14000000 		.4byte	.LVL188
 5806 0b34 0100     		.2byte	0x1
 5807 0b36 50       		.byte	0x50
 5808 0b37 14000000 		.4byte	.LVL188
 5809 0b3b 48000000 		.4byte	.LVL194
 5810 0b3f 0100     		.2byte	0x1
 5811 0b41 55       		.byte	0x55
 5812 0b42 48000000 		.4byte	.LVL194
 5813 0b46 4C000000 		.4byte	.LVL196
 5814 0b4a 0100     		.2byte	0x1
 5815 0b4c 50       		.byte	0x50
 5816 0b4d 4C000000 		.4byte	.LVL196
 5817 0b51 60000000 		.4byte	.LFE74
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 150


 5818 0b55 0100     		.2byte	0x1
 5819 0b57 55       		.byte	0x55
 5820 0b58 00000000 		.4byte	0
 5821 0b5c 00000000 		.4byte	0
 5822              	.LLST57:
 5823 0b60 08000000 		.4byte	.LVL185
 5824 0b64 0B000000 		.4byte	.LVL186-1
 5825 0b68 0100     		.2byte	0x1
 5826 0b6a 50       		.byte	0x50
 5827 0b6b 0B000000 		.4byte	.LVL186-1
 5828 0b6f 3A000000 		.4byte	.LVL191
 5829 0b73 0100     		.2byte	0x1
 5830 0b75 54       		.byte	0x54
 5831 0b76 3A000000 		.4byte	.LVL191
 5832 0b7a 3E000000 		.4byte	.LVL192
 5833 0b7e 0400     		.2byte	0x4
 5834 0b80 F3       		.byte	0xf3
 5835 0b81 01       		.uleb128 0x1
 5836 0b82 50       		.byte	0x50
 5837 0b83 9F       		.byte	0x9f
 5838 0b84 3E000000 		.4byte	.LVL192
 5839 0b88 46000000 		.4byte	.LVL193
 5840 0b8c 0100     		.2byte	0x1
 5841 0b8e 54       		.byte	0x54
 5842 0b8f 46000000 		.4byte	.LVL193
 5843 0b93 48000000 		.4byte	.LVL194
 5844 0b97 0400     		.2byte	0x4
 5845 0b99 F3       		.byte	0xf3
 5846 0b9a 01       		.uleb128 0x1
 5847 0b9b 50       		.byte	0x50
 5848 0b9c 9F       		.byte	0x9f
 5849 0b9d 48000000 		.4byte	.LVL194
 5850 0ba1 4A000000 		.4byte	.LVL195
 5851 0ba5 0100     		.2byte	0x1
 5852 0ba7 54       		.byte	0x54
 5853 0ba8 4A000000 		.4byte	.LVL195
 5854 0bac 4C000000 		.4byte	.LVL196
 5855 0bb0 0400     		.2byte	0x4
 5856 0bb2 F3       		.byte	0xf3
 5857 0bb3 01       		.uleb128 0x1
 5858 0bb4 50       		.byte	0x50
 5859 0bb5 9F       		.byte	0x9f
 5860 0bb6 4C000000 		.4byte	.LVL196
 5861 0bba 4E000000 		.4byte	.LVL197
 5862 0bbe 0100     		.2byte	0x1
 5863 0bc0 54       		.byte	0x54
 5864 0bc1 4E000000 		.4byte	.LVL197
 5865 0bc5 50000000 		.4byte	.LVL198
 5866 0bc9 0400     		.2byte	0x4
 5867 0bcb F3       		.byte	0xf3
 5868 0bcc 01       		.uleb128 0x1
 5869 0bcd 50       		.byte	0x50
 5870 0bce 9F       		.byte	0x9f
 5871 0bcf 50000000 		.4byte	.LVL198
 5872 0bd3 52000000 		.4byte	.LVL199
 5873 0bd7 0100     		.2byte	0x1
 5874 0bd9 54       		.byte	0x54
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 151


 5875 0bda 52000000 		.4byte	.LVL199
 5876 0bde 54000000 		.4byte	.LVL200
 5877 0be2 0400     		.2byte	0x4
 5878 0be4 F3       		.byte	0xf3
 5879 0be5 01       		.uleb128 0x1
 5880 0be6 50       		.byte	0x50
 5881 0be7 9F       		.byte	0x9f
 5882 0be8 54000000 		.4byte	.LVL200
 5883 0bec 56000000 		.4byte	.LVL201
 5884 0bf0 0100     		.2byte	0x1
 5885 0bf2 54       		.byte	0x54
 5886 0bf3 56000000 		.4byte	.LVL201
 5887 0bf7 60000000 		.4byte	.LFE74
 5888 0bfb 0400     		.2byte	0x4
 5889 0bfd F3       		.byte	0xf3
 5890 0bfe 01       		.uleb128 0x1
 5891 0bff 50       		.byte	0x50
 5892 0c00 9F       		.byte	0x9f
 5893 0c01 00000000 		.4byte	0
 5894 0c05 00000000 		.4byte	0
 5895              	.LLST58:
 5896 0c09 00000000 		.4byte	.LVL203
 5897 0c0d 09000000 		.4byte	.LVL205-1
 5898 0c11 0100     		.2byte	0x1
 5899 0c13 50       		.byte	0x50
 5900 0c14 09000000 		.4byte	.LVL205-1
 5901 0c18 1E000000 		.4byte	.LVL211
 5902 0c1c 0100     		.2byte	0x1
 5903 0c1e 54       		.byte	0x54
 5904 0c1f 1E000000 		.4byte	.LVL211
 5905 0c23 20000000 		.4byte	.LVL212
 5906 0c27 0400     		.2byte	0x4
 5907 0c29 F3       		.byte	0xf3
 5908 0c2a 01       		.uleb128 0x1
 5909 0c2b 50       		.byte	0x50
 5910 0c2c 9F       		.byte	0x9f
 5911 0c2d 20000000 		.4byte	.LVL212
 5912 0c31 22000000 		.4byte	.LVL213
 5913 0c35 0100     		.2byte	0x1
 5914 0c37 54       		.byte	0x54
 5915 0c38 22000000 		.4byte	.LVL213
 5916 0c3c 2C000000 		.4byte	.LFE75
 5917 0c40 0400     		.2byte	0x4
 5918 0c42 F3       		.byte	0xf3
 5919 0c43 01       		.uleb128 0x1
 5920 0c44 50       		.byte	0x50
 5921 0c45 9F       		.byte	0x9f
 5922 0c46 00000000 		.4byte	0
 5923 0c4a 00000000 		.4byte	0
 5924              	.LLST59:
 5925 0c4e 00000000 		.4byte	.LVL203
 5926 0c52 09000000 		.4byte	.LVL205-1
 5927 0c56 0100     		.2byte	0x1
 5928 0c58 51       		.byte	0x51
 5929 0c59 09000000 		.4byte	.LVL205-1
 5930 0c5d 2C000000 		.4byte	.LFE75
 5931 0c61 0100     		.2byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 152


 5932 0c63 56       		.byte	0x56
 5933 0c64 00000000 		.4byte	0
 5934 0c68 00000000 		.4byte	0
 5935              	.LLST60:
 5936 0c6c 1C000000 		.4byte	.LVL210
 5937 0c70 20000000 		.4byte	.LVL212
 5938 0c74 0200     		.2byte	0x2
 5939 0c76 31       		.byte	0x31
 5940 0c77 9F       		.byte	0x9f
 5941 0c78 22000000 		.4byte	.LVL213
 5942 0c7c 2C000000 		.4byte	.LFE75
 5943 0c80 0100     		.2byte	0x1
 5944 0c82 54       		.byte	0x54
 5945 0c83 00000000 		.4byte	0
 5946 0c87 00000000 		.4byte	0
 5947              	.LLST61:
 5948 0c8b 0C000000 		.4byte	.LVL206
 5949 0c8f 14000000 		.4byte	.LVL208
 5950 0c93 0100     		.2byte	0x1
 5951 0c95 50       		.byte	0x50
 5952 0c96 14000000 		.4byte	.LVL208
 5953 0c9a 20000000 		.4byte	.LVL212
 5954 0c9e 0100     		.2byte	0x1
 5955 0ca0 55       		.byte	0x55
 5956 0ca1 20000000 		.4byte	.LVL212
 5957 0ca5 22000000 		.4byte	.LVL213
 5958 0ca9 0100     		.2byte	0x1
 5959 0cab 50       		.byte	0x50
 5960 0cac 22000000 		.4byte	.LVL213
 5961 0cb0 2C000000 		.4byte	.LFE75
 5962 0cb4 0100     		.2byte	0x1
 5963 0cb6 55       		.byte	0x55
 5964 0cb7 00000000 		.4byte	0
 5965 0cbb 00000000 		.4byte	0
 5966              	.LLST62:
 5967 0cbf 12000000 		.4byte	.LVL207
 5968 0cc3 20000000 		.4byte	.LVL212
 5969 0cc7 0100     		.2byte	0x1
 5970 0cc9 57       		.byte	0x57
 5971 0cca 00000000 		.4byte	0
 5972 0cce 00000000 		.4byte	0
 5973              	.LLST63:
 5974 0cd2 06000000 		.4byte	.LVL204
 5975 0cd6 09000000 		.4byte	.LVL205-1
 5976 0cda 0100     		.2byte	0x1
 5977 0cdc 50       		.byte	0x50
 5978 0cdd 09000000 		.4byte	.LVL205-1
 5979 0ce1 1E000000 		.4byte	.LVL211
 5980 0ce5 0100     		.2byte	0x1
 5981 0ce7 54       		.byte	0x54
 5982 0ce8 1E000000 		.4byte	.LVL211
 5983 0cec 20000000 		.4byte	.LVL212
 5984 0cf0 0400     		.2byte	0x4
 5985 0cf2 F3       		.byte	0xf3
 5986 0cf3 01       		.uleb128 0x1
 5987 0cf4 50       		.byte	0x50
 5988 0cf5 9F       		.byte	0x9f
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 153


 5989 0cf6 20000000 		.4byte	.LVL212
 5990 0cfa 22000000 		.4byte	.LVL213
 5991 0cfe 0100     		.2byte	0x1
 5992 0d00 54       		.byte	0x54
 5993 0d01 22000000 		.4byte	.LVL213
 5994 0d05 2C000000 		.4byte	.LFE75
 5995 0d09 0400     		.2byte	0x4
 5996 0d0b F3       		.byte	0xf3
 5997 0d0c 01       		.uleb128 0x1
 5998 0d0d 50       		.byte	0x50
 5999 0d0e 9F       		.byte	0x9f
 6000 0d0f 00000000 		.4byte	0
 6001 0d13 00000000 		.4byte	0
 6002              	.LLST64:
 6003 0d17 00000000 		.4byte	.LVL215
 6004 0d1b 07000000 		.4byte	.LVL216-1
 6005 0d1f 0100     		.2byte	0x1
 6006 0d21 50       		.byte	0x50
 6007 0d22 07000000 		.4byte	.LVL216-1
 6008 0d26 0A000000 		.4byte	.LVL217
 6009 0d2a 0100     		.2byte	0x1
 6010 0d2c 54       		.byte	0x54
 6011 0d2d 0A000000 		.4byte	.LVL217
 6012 0d31 12000000 		.4byte	.LFE76
 6013 0d35 0400     		.2byte	0x4
 6014 0d37 F3       		.byte	0xf3
 6015 0d38 01       		.uleb128 0x1
 6016 0d39 50       		.byte	0x50
 6017 0d3a 9F       		.byte	0x9f
 6018 0d3b 00000000 		.4byte	0
 6019 0d3f 00000000 		.4byte	0
 6020              	.LLST65:
 6021 0d43 00000000 		.4byte	.LVL219
 6022 0d47 07000000 		.4byte	.LVL221-1
 6023 0d4b 0100     		.2byte	0x1
 6024 0d4d 50       		.byte	0x50
 6025 0d4e 07000000 		.4byte	.LVL221-1
 6026 0d52 0C000000 		.4byte	.LVL222
 6027 0d56 0100     		.2byte	0x1
 6028 0d58 54       		.byte	0x54
 6029 0d59 0C000000 		.4byte	.LVL222
 6030 0d5d 16000000 		.4byte	.LFE77
 6031 0d61 0400     		.2byte	0x4
 6032 0d63 F3       		.byte	0xf3
 6033 0d64 01       		.uleb128 0x1
 6034 0d65 50       		.byte	0x50
 6035 0d66 9F       		.byte	0x9f
 6036 0d67 00000000 		.4byte	0
 6037 0d6b 00000000 		.4byte	0
 6038              	.LLST66:
 6039 0d6f 04000000 		.4byte	.LVL220
 6040 0d73 07000000 		.4byte	.LVL221-1
 6041 0d77 0100     		.2byte	0x1
 6042 0d79 50       		.byte	0x50
 6043 0d7a 07000000 		.4byte	.LVL221-1
 6044 0d7e 0C000000 		.4byte	.LVL222
 6045 0d82 0100     		.2byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 154


 6046 0d84 54       		.byte	0x54
 6047 0d85 0C000000 		.4byte	.LVL222
 6048 0d89 16000000 		.4byte	.LFE77
 6049 0d8d 0400     		.2byte	0x4
 6050 0d8f F3       		.byte	0xf3
 6051 0d90 01       		.uleb128 0x1
 6052 0d91 50       		.byte	0x50
 6053 0d92 9F       		.byte	0x9f
 6054 0d93 00000000 		.4byte	0
 6055 0d97 00000000 		.4byte	0
 6056              	.LLST67:
 6057 0d9b 00000000 		.4byte	.LVL225
 6058 0d9f 02000000 		.4byte	.LVL226
 6059 0da3 0100     		.2byte	0x1
 6060 0da5 50       		.byte	0x50
 6061 0da6 02000000 		.4byte	.LVL226
 6062 0daa 04000000 		.4byte	.LFE78
 6063 0dae 0400     		.2byte	0x4
 6064 0db0 F3       		.byte	0xf3
 6065 0db1 01       		.uleb128 0x1
 6066 0db2 50       		.byte	0x50
 6067 0db3 9F       		.byte	0x9f
 6068 0db4 00000000 		.4byte	0
 6069 0db8 00000000 		.4byte	0
 6070              	.LLST68:
 6071 0dbc 00000000 		.4byte	.LVL227
 6072 0dc0 06000000 		.4byte	.LVL228
 6073 0dc4 0100     		.2byte	0x1
 6074 0dc6 50       		.byte	0x50
 6075 0dc7 06000000 		.4byte	.LVL228
 6076 0dcb 08000000 		.4byte	.LVL229
 6077 0dcf 0400     		.2byte	0x4
 6078 0dd1 F3       		.byte	0xf3
 6079 0dd2 01       		.uleb128 0x1
 6080 0dd3 50       		.byte	0x50
 6081 0dd4 9F       		.byte	0x9f
 6082 0dd5 08000000 		.4byte	.LVL229
 6083 0dd9 0A000000 		.4byte	.LVL230
 6084 0ddd 0100     		.2byte	0x1
 6085 0ddf 50       		.byte	0x50
 6086 0de0 0A000000 		.4byte	.LVL230
 6087 0de4 0C000000 		.4byte	.LFE84
 6088 0de8 0400     		.2byte	0x4
 6089 0dea F3       		.byte	0xf3
 6090 0deb 01       		.uleb128 0x1
 6091 0dec 50       		.byte	0x50
 6092 0ded 9F       		.byte	0x9f
 6093 0dee 00000000 		.4byte	0
 6094 0df2 00000000 		.4byte	0
 6095              	.LLST69:
 6096 0df6 00000000 		.4byte	.LVL231
 6097 0dfa 0A000000 		.4byte	.LVL232
 6098 0dfe 0100     		.2byte	0x1
 6099 0e00 50       		.byte	0x50
 6100 0e01 0A000000 		.4byte	.LVL232
 6101 0e05 0C000000 		.4byte	.LVL233
 6102 0e09 0400     		.2byte	0x4
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 155


 6103 0e0b F3       		.byte	0xf3
 6104 0e0c 01       		.uleb128 0x1
 6105 0e0d 50       		.byte	0x50
 6106 0e0e 9F       		.byte	0x9f
 6107 0e0f 0C000000 		.4byte	.LVL233
 6108 0e13 0E000000 		.4byte	.LVL234
 6109 0e17 0100     		.2byte	0x1
 6110 0e19 50       		.byte	0x50
 6111 0e1a 0E000000 		.4byte	.LVL234
 6112 0e1e 10000000 		.4byte	.LFE86
 6113 0e22 0400     		.2byte	0x4
 6114 0e24 F3       		.byte	0xf3
 6115 0e25 01       		.uleb128 0x1
 6116 0e26 50       		.byte	0x50
 6117 0e27 9F       		.byte	0x9f
 6118 0e28 00000000 		.4byte	0
 6119 0e2c 00000000 		.4byte	0
 6120              	.LLST70:
 6121 0e30 00000000 		.4byte	.LVL235
 6122 0e34 04000000 		.4byte	.LVL236
 6123 0e38 0200     		.2byte	0x2
 6124 0e3a 30       		.byte	0x30
 6125 0e3b 9F       		.byte	0x9f
 6126 0e3c 04000000 		.4byte	.LVL236
 6127 0e40 16000000 		.4byte	.LVL237
 6128 0e44 0100     		.2byte	0x1
 6129 0e46 53       		.byte	0x53
 6130 0e47 1A000000 		.4byte	.LVL238
 6131 0e4b 28000000 		.4byte	.LFE87
 6132 0e4f 0100     		.2byte	0x1
 6133 0e51 53       		.byte	0x53
 6134 0e52 00000000 		.4byte	0
 6135 0e56 00000000 		.4byte	0
 6136              	.LLST71:
 6137 0e5a 00000000 		.4byte	.LVL240
 6138 0e5e 04000000 		.4byte	.LVL241
 6139 0e62 0200     		.2byte	0x2
 6140 0e64 30       		.byte	0x30
 6141 0e65 9F       		.byte	0x9f
 6142 0e66 04000000 		.4byte	.LVL241
 6143 0e6a 28000000 		.4byte	.LFE88
 6144 0e6e 0100     		.2byte	0x1
 6145 0e70 53       		.byte	0x53
 6146 0e71 00000000 		.4byte	0
 6147 0e75 00000000 		.4byte	0
 6148              	.LLST72:
 6149 0e79 00000000 		.4byte	.LVL243
 6150 0e7d 07000000 		.4byte	.LVL245-1
 6151 0e81 0100     		.2byte	0x1
 6152 0e83 50       		.byte	0x50
 6153 0e84 07000000 		.4byte	.LVL245-1
 6154 0e88 10000000 		.4byte	.LFE79
 6155 0e8c 0100     		.2byte	0x1
 6156 0e8e 54       		.byte	0x54
 6157 0e8f 00000000 		.4byte	0
 6158 0e93 00000000 		.4byte	0
 6159              	.LLST73:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 156


 6160 0e97 04000000 		.4byte	.LVL244
 6161 0e9b 07000000 		.4byte	.LVL245-1
 6162 0e9f 0100     		.2byte	0x1
 6163 0ea1 50       		.byte	0x50
 6164 0ea2 07000000 		.4byte	.LVL245-1
 6165 0ea6 10000000 		.4byte	.LFE79
 6166 0eaa 0100     		.2byte	0x1
 6167 0eac 54       		.byte	0x54
 6168 0ead 00000000 		.4byte	0
 6169 0eb1 00000000 		.4byte	0
 6170              		.section	.debug_aranges,"",%progbits
 6171 0000 DC000000 		.4byte	0xdc
 6172 0004 0200     		.2byte	0x2
 6173 0006 00000000 		.4byte	.Ldebug_info0
 6174 000a 04       		.byte	0x4
 6175 000b 00       		.byte	0
 6176 000c 0000     		.2byte	0
 6177 000e 0000     		.2byte	0
 6178 0010 00000000 		.4byte	.LFB85
 6179 0014 1E000000 		.4byte	.LFE85-.LFB85
 6180 0018 00000000 		.4byte	.LFB83
 6181 001c 1A000000 		.4byte	.LFE83-.LFB83
 6182 0020 00000000 		.4byte	.LFB80
 6183 0024 7C000000 		.4byte	.LFE80-.LFB80
 6184 0028 00000000 		.4byte	.LFB81
 6185 002c 24000000 		.4byte	.LFE81-.LFB81
 6186 0030 00000000 		.4byte	.LFB82
 6187 0034 62000000 		.4byte	.LFE82-.LFB82
 6188 0038 00000000 		.4byte	.LFB64
 6189 003c 5C000000 		.4byte	.LFE64-.LFB64
 6190 0040 00000000 		.4byte	.LFB65
 6191 0044 38000000 		.4byte	.LFE65-.LFB65
 6192 0048 00000000 		.4byte	.LFB69
 6193 004c 16000000 		.4byte	.LFE69-.LFB69
 6194 0050 00000000 		.4byte	.LFB70
 6195 0054 D6000000 		.4byte	.LFE70-.LFB70
 6196 0058 00000000 		.4byte	.LFB66
 6197 005c 44000000 		.4byte	.LFE66-.LFB66
 6198 0060 00000000 		.4byte	.LFB67
 6199 0064 2E000000 		.4byte	.LFE67-.LFB67
 6200 0068 00000000 		.4byte	.LFB71
 6201 006c 70000000 		.4byte	.LFE71-.LFB71
 6202 0070 00000000 		.4byte	.LFB72
 6203 0074 5A000000 		.4byte	.LFE72-.LFB72
 6204 0078 00000000 		.4byte	.LFB73
 6205 007c 00010000 		.4byte	.LFE73-.LFB73
 6206 0080 00000000 		.4byte	.LFB68
 6207 0084 32000000 		.4byte	.LFE68-.LFB68
 6208 0088 00000000 		.4byte	.LFB74
 6209 008c 60000000 		.4byte	.LFE74-.LFB74
 6210 0090 00000000 		.4byte	.LFB75
 6211 0094 2C000000 		.4byte	.LFE75-.LFB75
 6212 0098 00000000 		.4byte	.LFB76
 6213 009c 12000000 		.4byte	.LFE76-.LFB76
 6214 00a0 00000000 		.4byte	.LFB77
 6215 00a4 16000000 		.4byte	.LFE77-.LFB77
 6216 00a8 00000000 		.4byte	.LFB78
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 157


 6217 00ac 04000000 		.4byte	.LFE78-.LFB78
 6218 00b0 00000000 		.4byte	.LFB84
 6219 00b4 0C000000 		.4byte	.LFE84-.LFB84
 6220 00b8 00000000 		.4byte	.LFB86
 6221 00bc 10000000 		.4byte	.LFE86-.LFB86
 6222 00c0 00000000 		.4byte	.LFB87
 6223 00c4 28000000 		.4byte	.LFE87-.LFB87
 6224 00c8 00000000 		.4byte	.LFB88
 6225 00cc 28000000 		.4byte	.LFE88-.LFB88
 6226 00d0 00000000 		.4byte	.LFB79
 6227 00d4 10000000 		.4byte	.LFE79-.LFB79
 6228 00d8 00000000 		.4byte	0
 6229 00dc 00000000 		.4byte	0
 6230              		.section	.debug_ranges,"",%progbits
 6231              	.Ldebug_ranges0:
 6232 0000 00000000 		.4byte	.LFB85
 6233 0004 1E000000 		.4byte	.LFE85
 6234 0008 00000000 		.4byte	.LFB83
 6235 000c 1A000000 		.4byte	.LFE83
 6236 0010 00000000 		.4byte	.LFB80
 6237 0014 7C000000 		.4byte	.LFE80
 6238 0018 00000000 		.4byte	.LFB81
 6239 001c 24000000 		.4byte	.LFE81
 6240 0020 00000000 		.4byte	.LFB82
 6241 0024 62000000 		.4byte	.LFE82
 6242 0028 00000000 		.4byte	.LFB64
 6243 002c 5C000000 		.4byte	.LFE64
 6244 0030 00000000 		.4byte	.LFB65
 6245 0034 38000000 		.4byte	.LFE65
 6246 0038 00000000 		.4byte	.LFB69
 6247 003c 16000000 		.4byte	.LFE69
 6248 0040 00000000 		.4byte	.LFB70
 6249 0044 D6000000 		.4byte	.LFE70
 6250 0048 00000000 		.4byte	.LFB66
 6251 004c 44000000 		.4byte	.LFE66
 6252 0050 00000000 		.4byte	.LFB67
 6253 0054 2E000000 		.4byte	.LFE67
 6254 0058 00000000 		.4byte	.LFB71
 6255 005c 70000000 		.4byte	.LFE71
 6256 0060 00000000 		.4byte	.LFB72
 6257 0064 5A000000 		.4byte	.LFE72
 6258 0068 00000000 		.4byte	.LFB73
 6259 006c 00010000 		.4byte	.LFE73
 6260 0070 00000000 		.4byte	.LFB68
 6261 0074 32000000 		.4byte	.LFE68
 6262 0078 00000000 		.4byte	.LFB74
 6263 007c 60000000 		.4byte	.LFE74
 6264 0080 00000000 		.4byte	.LFB75
 6265 0084 2C000000 		.4byte	.LFE75
 6266 0088 00000000 		.4byte	.LFB76
 6267 008c 12000000 		.4byte	.LFE76
 6268 0090 00000000 		.4byte	.LFB77
 6269 0094 16000000 		.4byte	.LFE77
 6270 0098 00000000 		.4byte	.LFB78
 6271 009c 04000000 		.4byte	.LFE78
 6272 00a0 00000000 		.4byte	.LFB84
 6273 00a4 0C000000 		.4byte	.LFE84
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 158


 6274 00a8 00000000 		.4byte	.LFB86
 6275 00ac 10000000 		.4byte	.LFE86
 6276 00b0 00000000 		.4byte	.LFB87
 6277 00b4 28000000 		.4byte	.LFE87
 6278 00b8 00000000 		.4byte	.LFB88
 6279 00bc 28000000 		.4byte	.LFE88
 6280 00c0 00000000 		.4byte	.LFB79
 6281 00c4 10000000 		.4byte	.LFE79
 6282 00c8 00000000 		.4byte	0
 6283 00cc 00000000 		.4byte	0
 6284              		.section	.debug_line,"",%progbits
 6285              	.Ldebug_line0:
 6286 0000 69050000 		.section	.debug_str,"MS",%progbits,1
 6286      02000502 
 6286      00000201 
 6286      FB0E0D00 
 6286      01010101 
 6287              	.LASF35:
 6288 0000 75784E75 		.ascii	"uxNumberOfItems\000"
 6288      6D626572 
 6288      4F664974 
 6288      656D7300 
 6289              	.LASF118:
 6290 0010 76506F72 		.ascii	"vPortExitCritical\000"
 6290      74457869 
 6290      74437269 
 6290      74696361 
 6290      6C00
 6291              	.LASF122:
 6292 0022 76506F72 		.ascii	"vPortYield\000"
 6292      74596965 
 6292      6C6400
 6293              	.LASF104:
 6294 002d 78517565 		.ascii	"xQueueReceiveFromISR\000"
 6294      75655265 
 6294      63656976 
 6294      6546726F 
 6294      6D495352 
 6295              	.LASF52:
 6296 0042 78546173 		.ascii	"xTasksWaitingToReceive\000"
 6296      6B735761 
 6296      6974696E 
 6296      67546F52 
 6296      65636569 
 6297              	.LASF97:
 6298 0059 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 6298      67686572 
 6298      5072696F 
 6298      72697479 
 6298      5461736B 
 6299              	.LASF95:
 6300 0073 70784D75 		.ascii	"pxMutex\000"
 6300      74657800 
 6301              	.LASF0:
 6302 007b 756E7369 		.ascii	"unsigned int\000"
 6302      676E6564 
 6302      20696E74 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 159


 6302      00
 6303              	.LASF137:
 6304 0088 2E2E5C46 		.ascii	"..\\FreeRTOS\\queue.c\000"
 6304      72656552 
 6304      544F535C 
 6304      71756575 
 6304      652E6300 
 6305              	.LASF36:
 6306 009c 7078496E 		.ascii	"pxIndex\000"
 6306      64657800 
 6307              	.LASF135:
 6308 00a4 76546173 		.ascii	"vTaskPriorityInherit\000"
 6308      6B507269 
 6308      6F726974 
 6308      79496E68 
 6308      65726974 
 6309              	.LASF40:
 6310 00b9 7854494D 		.ascii	"xTIME_OUT\000"
 6310      455F4F55 
 6310      5400
 6311              	.LASF81:
 6312 00c3 70784E65 		.ascii	"pxNewQueue\000"
 6312      77517565 
 6312      756500
 6313              	.LASF8:
 6314 00ce 5F5F696E 		.ascii	"__int32_t\000"
 6314      7433325F 
 6314      7400
 6315              	.LASF31:
 6316 00d8 784C4953 		.ascii	"xLIST_ITEM\000"
 6316      545F4954 
 6316      454D00
 6317              	.LASF60:
 6318 00e3 51554555 		.ascii	"QUEUE_REGISTRY_ITEM\000"
 6318      455F5245 
 6318      47495354 
 6318      52595F49 
 6318      54454D00 
 6319              	.LASF126:
 6320 00f7 76546173 		.ascii	"vTaskSetTimeOutState\000"
 6320      6B536574 
 6320      54696D65 
 6320      4F757453 
 6320      74617465 
 6321              	.LASF51:
 6322 010c 78546173 		.ascii	"xTasksWaitingToSend\000"
 6322      6B735761 
 6322      6974696E 
 6322      67546F53 
 6322      656E6400 
 6323              	.LASF108:
 6324 0120 75785175 		.ascii	"uxQueueSpacesAvailable\000"
 6324      65756553 
 6324      70616365 
 6324      73417661 
 6324      696C6162 
 6325              	.LASF41:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 160


 6326 0137 784F7665 		.ascii	"xOverflowCount\000"
 6326      72666C6F 
 6326      77436F75 
 6326      6E7400
 6327              	.LASF117:
 6328 0146 76506F72 		.ascii	"vPortEnterCritical\000"
 6328      74456E74 
 6328      65724372 
 6328      69746963 
 6328      616C00
 6329              	.LASF46:
 6330 0159 75785265 		.ascii	"uxRecursiveCallCount\000"
 6330      63757273 
 6330      69766543 
 6330      616C6C43 
 6330      6F756E74 
 6331              	.LASF59:
 6332 016e 51756575 		.ascii	"Queue_t\000"
 6332      655F7400 
 6333              	.LASF88:
 6334 0176 78436F70 		.ascii	"xCopyPosition\000"
 6334      79506F73 
 6334      6974696F 
 6334      6E00
 6335              	.LASF107:
 6336 0184 75785265 		.ascii	"uxReturn\000"
 6336      7475726E 
 6336      00
 6337              	.LASF64:
 6338 018d 51756575 		.ascii	"QueueRegistryItem_t\000"
 6338      65526567 
 6338      69737472 
 6338      79497465 
 6338      6D5F7400 
 6339              	.LASF114:
 6340 01a1 76517565 		.ascii	"vQueueDelete\000"
 6340      75654465 
 6340      6C657465 
 6340      00
 6341              	.LASF45:
 6342 01ae 70635265 		.ascii	"pcReadFrom\000"
 6342      61644672 
 6342      6F6D00
 6343              	.LASF113:
 6344 01b9 76517565 		.ascii	"vQueueUnregisterQueue\000"
 6344      7565556E 
 6344      72656769 
 6344      73746572 
 6344      51756575 
 6345              	.LASF98:
 6346 01cf 75785361 		.ascii	"uxSavedInterruptStatus\000"
 6346      76656449 
 6346      6E746572 
 6346      72757074 
 6346      53746174 
 6347              	.LASF19:
 6348 01e6 75696E74 		.ascii	"uint32_t\000"
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 161


 6348      33325F74 
 6348      00
 6349              	.LASF16:
 6350 01ef 696E7438 		.ascii	"int8_t\000"
 6350      5F7400
 6351              	.LASF90:
 6352 01f6 78596965 		.ascii	"xYieldRequired\000"
 6352      6C645265 
 6352      71756972 
 6352      656400
 6353              	.LASF75:
 6354 0205 78517565 		.ascii	"xQueue\000"
 6354      756500
 6355              	.LASF20:
 6356 020c 666C6F61 		.ascii	"float\000"
 6356      7400
 6357              	.LASF47:
 6358 0212 51756575 		.ascii	"QueueDefinition\000"
 6358      65446566 
 6358      696E6974 
 6358      696F6E00 
 6359              	.LASF100:
 6360 0222 78517565 		.ascii	"xQueueGenericReceive\000"
 6360      75654765 
 6360      6E657269 
 6360      63526563 
 6360      65697665 
 6361              	.LASF13:
 6362 0237 6C6F6E67 		.ascii	"long long unsigned int\000"
 6362      206C6F6E 
 6362      6720756E 
 6362      7369676E 
 6362      65642069 
 6363              	.LASF66:
 6364 024e 70727649 		.ascii	"prvIsQueueEmpty\000"
 6364      73517565 
 6364      7565456D 
 6364      70747900 
 6365              	.LASF72:
 6366 025e 70764275 		.ascii	"pvBuffer\000"
 6366      66666572 
 6366      00
 6367              	.LASF27:
 6368 0267 70785072 		.ascii	"pxPrevious\000"
 6368      6576696F 
 6368      757300
 6369              	.LASF53:
 6370 0272 75784D65 		.ascii	"uxMessagesWaiting\000"
 6370      73736167 
 6370      65735761 
 6370      6974696E 
 6370      6700
 6371              	.LASF125:
 6372 0284 7076506F 		.ascii	"pvPortMalloc\000"
 6372      72744D61 
 6372      6C6C6F63 
 6372      00
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 162


 6373              	.LASF127:
 6374 0291 76546173 		.ascii	"vTaskSuspendAll\000"
 6374      6B537573 
 6374      70656E64 
 6374      416C6C00 
 6375              	.LASF89:
 6376 02a1 78456E74 		.ascii	"xEntryTimeSet\000"
 6376      72795469 
 6376      6D655365 
 6376      7400
 6377              	.LASF1:
 6378 02af 73697A65 		.ascii	"size_t\000"
 6378      5F7400
 6379              	.LASF91:
 6380 02b6 7854696D 		.ascii	"xTimeOut\000"
 6380      654F7574 
 6380      00
 6381              	.LASF62:
 6382 02bf 7848616E 		.ascii	"xHandle\000"
 6382      646C6500 
 6383              	.LASF61:
 6384 02c7 70635175 		.ascii	"pcQueueName\000"
 6384      6575654E 
 6384      616D6500 
 6385              	.LASF32:
 6386 02d3 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 6386      495F4C49 
 6386      53545F49 
 6386      54454D00 
 6387              	.LASF34:
 6388 02e3 784C4953 		.ascii	"xLIST\000"
 6388      5400
 6389              	.LASF96:
 6390 02e9 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 6390      75654765 
 6390      6E657269 
 6390      6353656E 
 6390      6446726F 
 6391              	.LASF69:
 6392 0302 70727643 		.ascii	"prvCopyDataToQueue\000"
 6392      6F707944 
 6392      61746154 
 6392      6F517565 
 6392      756500
 6393              	.LASF86:
 6394 0315 78517565 		.ascii	"xQueueGenericSend\000"
 6394      75654765 
 6394      6E657269 
 6394      6353656E 
 6394      6400
 6395              	.LASF129:
 6396 0327 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 6396      6B506C61 
 6396      63654F6E 
 6396      4576656E 
 6396      744C6973 
 6397              	.LASF134:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 163


 6398 033d 70765461 		.ascii	"pvTaskIncrementMutexHeldCount\000"
 6398      736B496E 
 6398      6372656D 
 6398      656E744D 
 6398      75746578 
 6399              	.LASF55:
 6400 035b 75784974 		.ascii	"uxItemSize\000"
 6400      656D5369 
 6400      7A6500
 6401              	.LASF85:
 6402 0366 7578496E 		.ascii	"uxInitialCount\000"
 6402      69746961 
 6402      6C436F75 
 6402      6E7400
 6403              	.LASF119:
 6404 0375 78546173 		.ascii	"xTaskPriorityDisinherit\000"
 6404      6B507269 
 6404      6F726974 
 6404      79446973 
 6404      696E6865 
 6405              	.LASF120:
 6406 038d 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 6406      6B52656D 
 6406      6F766546 
 6406      726F6D45 
 6406      76656E74 
 6407              	.LASF15:
 6408 03a6 63686172 		.ascii	"char\000"
 6408      00
 6409              	.LASF30:
 6410 03ab 4C697374 		.ascii	"ListItem_t\000"
 6410      4974656D 
 6410      5F7400
 6411              	.LASF65:
 6412 03b6 70727649 		.ascii	"prvIsQueueFull\000"
 6412      73517565 
 6412      75654675 
 6412      6C6C00
 6413              	.LASF23:
 6414 03c5 55426173 		.ascii	"UBaseType_t\000"
 6414      65547970 
 6414      655F7400 
 6415              	.LASF99:
 6416 03d1 78517565 		.ascii	"xQueueGiveFromISR\000"
 6416      75654769 
 6416      76654672 
 6416      6F6D4953 
 6416      5200
 6417              	.LASF116:
 6418 03e3 78517565 		.ascii	"xQueueRegistry\000"
 6418      75655265 
 6418      67697374 
 6418      727900
 6419              	.LASF44:
 6420 03f2 51756575 		.ascii	"QueueHandle_t\000"
 6420      6548616E 
 6420      646C655F 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 164


 6420      7400
 6421              	.LASF37:
 6422 0400 784C6973 		.ascii	"xListEnd\000"
 6422      74456E64 
 6422      00
 6423              	.LASF132:
 6424 0409 756C506F 		.ascii	"ulPortSetInterruptMask\000"
 6424      72745365 
 6424      74496E74 
 6424      65727275 
 6424      70744D61 
 6425              	.LASF109:
 6426 0420 75785175 		.ascii	"uxQueueMessagesWaitingFromISR\000"
 6426      6575654D 
 6426      65737361 
 6426      67657357 
 6426      61697469 
 6427              	.LASF33:
 6428 043e 4D696E69 		.ascii	"MiniListItem_t\000"
 6428      4C697374 
 6428      4974656D 
 6428      5F7400
 6429              	.LASF17:
 6430 044d 75696E74 		.ascii	"uint8_t\000"
 6430      385F7400 
 6431              	.LASF63:
 6432 0455 78517565 		.ascii	"xQueueRegistryItem\000"
 6432      75655265 
 6432      67697374 
 6432      72794974 
 6432      656D00
 6433              	.LASF78:
 6434 0468 78517565 		.ascii	"xQueueGenericCreate\000"
 6434      75654765 
 6434      6E657269 
 6434      63437265 
 6434      61746500 
 6435              	.LASF92:
 6436 047c 78517565 		.ascii	"xQueueCreateMutex\000"
 6436      75654372 
 6436      65617465 
 6436      4D757465 
 6436      7800
 6437              	.LASF12:
 6438 048e 6C6F6E67 		.ascii	"long long int\000"
 6438      206C6F6E 
 6438      6720696E 
 6438      7400
 6439              	.LASF22:
 6440 049c 42617365 		.ascii	"BaseType_t\000"
 6440      54797065 
 6440      5F7400
 6441              	.LASF94:
 6442 04a7 784D7574 		.ascii	"xMutex\000"
 6442      657800
 6443              	.LASF42:
 6444 04ae 7854696D 		.ascii	"xTimeOnEntering\000"
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 165


 6444      654F6E45 
 6444      6E746572 
 6444      696E6700 
 6445              	.LASF112:
 6446 04be 76517565 		.ascii	"vQueueAddToRegistry\000"
 6446      75654164 
 6446      64546F52 
 6446      65676973 
 6446      74727900 
 6447              	.LASF26:
 6448 04d2 70784E65 		.ascii	"pxNext\000"
 6448      787400
 6449              	.LASF76:
 6450 04d9 784E6577 		.ascii	"xNewQueue\000"
 6450      51756575 
 6450      6500
 6451              	.LASF84:
 6452 04e3 75784D61 		.ascii	"uxMaxCount\000"
 6452      78436F75 
 6452      6E7400
 6453              	.LASF43:
 6454 04ee 54696D65 		.ascii	"TimeOut_t\000"
 6454      4F75745F 
 6454      7400
 6455              	.LASF102:
 6456 04f8 70634F72 		.ascii	"pcOriginalReadPosition\000"
 6456      6967696E 
 6456      616C5265 
 6456      6164506F 
 6456      73697469 
 6457              	.LASF39:
 6458 050f 5461736B 		.ascii	"TaskHandle_t\000"
 6458      48616E64 
 6458      6C655F74 
 6458      00
 6459              	.LASF80:
 6460 051c 75635175 		.ascii	"ucQueueType\000"
 6460      65756554 
 6460      79706500 
 6461              	.LASF101:
 6462 0528 784A7573 		.ascii	"xJustPeeking\000"
 6462      74506565 
 6462      6B696E67 
 6462      00
 6463              	.LASF38:
 6464 0535 4C697374 		.ascii	"List_t\000"
 6464      5F7400
 6465              	.LASF50:
 6466 053c 70635772 		.ascii	"pcWriteTo\000"
 6466      69746554 
 6466      6F00
 6467              	.LASF24:
 6468 0546 5469636B 		.ascii	"TickType_t\000"
 6468      54797065 
 6468      5F7400
 6469              	.LASF2:
 6470 0551 5F5F696E 		.ascii	"__int8_t\000"
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 166


 6470      74385F74 
 6470      00
 6471              	.LASF79:
 6472 055a 75785175 		.ascii	"uxQueueLength\000"
 6472      6575654C 
 6472      656E6774 
 6472      6800
 6473              	.LASF138:
 6474 0568 453A5C50 		.ascii	"E:\\PSoC_Creator\\CY8CKIT-059\\CY8CKIT-059_Simple_S"
 6474      536F435F 
 6474      43726561 
 6474      746F725C 
 6474      43593843 
 6475 0598 44525F52 		.ascii	"DR_Receiver\\CY8CKIT-059_Simple_SDR_Receiver.cydsn\000"
 6475      65636569 
 6475      7665725C 
 6475      43593843 
 6475      4B49542D 
 6476              	.LASF103:
 6477 05ca 78517565 		.ascii	"xQueueTakeMutexRecursive\000"
 6477      75655461 
 6477      6B654D75 
 6477      74657852 
 6477      65637572 
 6478              	.LASF29:
 6479 05e3 7076436F 		.ascii	"pvContainer\000"
 6479      6E746169 
 6479      6E657200 
 6480              	.LASF54:
 6481 05ef 75784C65 		.ascii	"uxLength\000"
 6481      6E677468 
 6481      00
 6482              	.LASF6:
 6483 05f8 73686F72 		.ascii	"short int\000"
 6483      7420696E 
 6483      7400
 6484              	.LASF25:
 6485 0602 78497465 		.ascii	"xItemValue\000"
 6485      6D56616C 
 6485      756500
 6486              	.LASF9:
 6487 060d 6C6F6E67 		.ascii	"long int\000"
 6487      20696E74 
 6487      00
 6488              	.LASF115:
 6489 0616 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6489      52784275 
 6489      66666572 
 6489      00
 6490              	.LASF82:
 6491 0623 78517565 		.ascii	"xQueueSizeInBytes\000"
 6491      75655369 
 6491      7A65496E 
 6491      42797465 
 6491      7300
 6492              	.LASF130:
 6493 0635 78546173 		.ascii	"xTaskResumeAll\000"
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 167


 6493      6B526573 
 6493      756D6541 
 6493      6C6C00
 6494              	.LASF56:
 6495 0644 7852784C 		.ascii	"xRxLock\000"
 6495      6F636B00 
 6496              	.LASF70:
 6497 064c 70764974 		.ascii	"pvItemToQueue\000"
 6497      656D546F 
 6497      51756575 
 6497      6500
 6498              	.LASF128:
 6499 065a 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 6499      6B436865 
 6499      636B466F 
 6499      7254696D 
 6499      654F7574 
 6500              	.LASF139:
 6501 066f 76506F72 		.ascii	"vPortFree\000"
 6501      74467265 
 6501      6500
 6502              	.LASF111:
 6503 0679 78517565 		.ascii	"xQueueIsQueueFullFromISR\000"
 6503      75654973 
 6503      51756575 
 6503      6546756C 
 6503      6C46726F 
 6504              	.LASF106:
 6505 0692 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 6505      6575654D 
 6505      65737361 
 6505      67657357 
 6505      61697469 
 6506              	.LASF49:
 6507 06a9 70635461 		.ascii	"pcTail\000"
 6507      696C00
 6508              	.LASF4:
 6509 06b0 5F5F7569 		.ascii	"__uint8_t\000"
 6509      6E74385F 
 6509      7400
 6510              	.LASF67:
 6511 06ba 70785175 		.ascii	"pxQueue\000"
 6511      65756500 
 6512              	.LASF68:
 6513 06c2 78526574 		.ascii	"xReturn\000"
 6513      75726E00 
 6514              	.LASF14:
 6515 06ca 73697A65 		.ascii	"sizetype\000"
 6515      74797065 
 6515      00
 6516              	.LASF121:
 6517 06d3 76546173 		.ascii	"vTaskMissedYield\000"
 6517      6B4D6973 
 6517      73656459 
 6517      69656C64 
 6517      00
 6518              	.LASF11:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 168


 6519 06e4 6C6F6E67 		.ascii	"long unsigned int\000"
 6519      20756E73 
 6519      69676E65 
 6519      6420696E 
 6519      7400
 6520              	.LASF18:
 6521 06f6 696E7433 		.ascii	"int32_t\000"
 6521      325F7400 
 6522              	.LASF105:
 6523 06fe 78517565 		.ascii	"xQueuePeekFromISR\000"
 6523      75655065 
 6523      656B4672 
 6523      6F6D4953 
 6523      5200
 6524              	.LASF5:
 6525 0710 756E7369 		.ascii	"unsigned char\000"
 6525      676E6564 
 6525      20636861 
 6525      7200
 6526              	.LASF10:
 6527 071e 5F5F7569 		.ascii	"__uint32_t\000"
 6527      6E743332 
 6527      5F7400
 6528              	.LASF136:
 6529 0729 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 6529      4320342E 
 6529      392E3320 
 6529      32303135 
 6529      30333033 
 6530 075c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 6530      20726576 
 6530      6973696F 
 6530      6E203232 
 6530      31323230 
 6531 078f 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 6531      66756E63 
 6531      74696F6E 
 6531      2D736563 
 6531      74696F6E 
 6532              	.LASF124:
 6533 07b7 764C6973 		.ascii	"vListInitialise\000"
 6533      74496E69 
 6533      7469616C 
 6533      69736500 
 6534              	.LASF73:
 6535 07c7 70727643 		.ascii	"prvCopyDataFromQueue\000"
 6535      6F707944 
 6535      61746146 
 6535      726F6D51 
 6535      75657565 
 6536              	.LASF133:
 6537 07dc 76506F72 		.ascii	"vPortClearInterruptMask\000"
 6537      74436C65 
 6537      6172496E 
 6537      74657272 
 6537      7570744D 
 6538              	.LASF87:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 169


 6539 07f4 78546963 		.ascii	"xTicksToWait\000"
 6539      6B73546F 
 6539      57616974 
 6539      00
 6540              	.LASF28:
 6541 0801 70764F77 		.ascii	"pvOwner\000"
 6541      6E657200 
 6542              	.LASF131:
 6543 0809 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 6543      6B476574 
 6543      43757272 
 6543      656E7454 
 6543      61736B48 
 6544              	.LASF48:
 6545 0823 70634865 		.ascii	"pcHead\000"
 6545      616400
 6546              	.LASF57:
 6547 082a 7854784C 		.ascii	"xTxLock\000"
 6547      6F636B00 
 6548              	.LASF93:
 6549 0832 78517565 		.ascii	"xQueueGiveMutexRecursive\000"
 6549      75654769 
 6549      76654D75 
 6549      74657852 
 6549      65637572 
 6550              	.LASF74:
 6551 084b 70727655 		.ascii	"prvUnlockQueue\000"
 6551      6E6C6F63 
 6551      6B517565 
 6551      756500
 6552              	.LASF77:
 6553 085a 78517565 		.ascii	"xQueueGenericReset\000"
 6553      75654765 
 6553      6E657269 
 6553      63526573 
 6553      657400
 6554              	.LASF110:
 6555 086d 78517565 		.ascii	"xQueueIsQueueEmptyFromISR\000"
 6555      75654973 
 6555      51756575 
 6555      65456D70 
 6555      74794672 
 6556              	.LASF3:
 6557 0887 7369676E 		.ascii	"signed char\000"
 6557      65642063 
 6557      68617200 
 6558              	.LASF7:
 6559 0893 73686F72 		.ascii	"short unsigned int\000"
 6559      7420756E 
 6559      7369676E 
 6559      65642069 
 6559      6E7400
 6560              	.LASF123:
 6561 08a6 6D656D63 		.ascii	"memcpy\000"
 6561      707900
 6562              	.LASF58:
 6563 08ad 78515545 		.ascii	"xQUEUE\000"
ARM GAS  C:\Users\koseki\AppData\Local\Temp\cc6AuClW.s 			page 170


 6563      554500
 6564              	.LASF21:
 6565 08b4 646F7562 		.ascii	"double\000"
 6565      6C6500
 6566              	.LASF71:
 6567 08bb 78506F73 		.ascii	"xPosition\000"
 6567      6974696F 
 6567      6E00
 6568              	.LASF83:
 6569 08c5 78517565 		.ascii	"xQueueCreateCountingSemaphore\000"
 6569      75654372 
 6569      65617465 
 6569      436F756E 
 6569      74696E67 
 6570              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
